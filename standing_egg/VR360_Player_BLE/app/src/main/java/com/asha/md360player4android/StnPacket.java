// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stnEggPkt.proto

package com.asha.md360player4android;

public final class StnPacket {
  private StnPacket() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }



  public interface StnEggPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StnEggPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed32 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>optional fixed32 size = 1;</code>
     */
    int getSize();

    /**
     * <code>required fixed32 seqNo = 2;</code>
     */
    boolean hasSeqNo();
    /**StnPacket.java
     * <code>required fixed32 seqNo = 2;</code>
     */
    int getSeqNo();

    /**
     * <code>optional fixed32 timeStamp = 3;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>optional fixed32 timeStamp = 3;</code>
     */
    int getTimeStamp();

    /**
     * <code>optional .Float3 accRAW_g = 4;</code>
     */
    boolean hasAccRAWG();
    /**
     * <code>optional .Float3 accRAW_g = 4;</code>
     */
    Float3 getAccRAWG();
    /**
     * <code>optional .Float3 accRAW_g = 4;</code>
     */
    Float3OrBuilder getAccRAWGOrBuilder();

    /**
     * <code>optional .Float3 gyrRAW_dps = 5;</code>
     */
    boolean hasGyrRAWDps();
    /**
     * <code>optional .Float3 gyrRAW_dps = 5;</code>
     */
    Float3 getGyrRAWDps();
    /**
     * <code>optional .Float3 gyrRAW_dps = 5;</code>
     */
    Float3OrBuilder getGyrRAWDpsOrBuilder();

    /**
     * <code>optional .Float3 magRAW_uT = 6;</code>
     */
    boolean hasMagRAWUT();
    /**
     * <code>optional .Float3 magRAW_uT = 6;</code>
     */
    Float3 getMagRAWUT();
    /**
     * <code>optional .Float3 magRAW_uT = 6;</code>
     */
    Float3OrBuilder getMagRAWUTOrBuilder();

    /**
     * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
     */
    boolean hasKalman9AXISQuat();
    /**
     * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
     */
    Float4 getKalman9AXISQuat();
    /**
     * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
     */
    Float4OrBuilder getKalman9AXISQuatOrBuilder();

    /**
     * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
     */
    boolean hasKalman6AXISAGQuat();
    /**
     * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
     */
    Float4 getKalman6AXISAGQuat();
    /**
     * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
     */
    Float4OrBuilder getKalman6AXISAGQuatOrBuilder();

    /**
     * <code>optional .Float4 VGYRO_quat = 9;</code>
     */
    boolean hasVGYROQuat();
    /**
     * <code>optional .Float4 VGYRO_quat = 9;</code>
     */
    Float4 getVGYROQuat();
    /**
     * <code>optional .Float4 VGYRO_quat = 9;</code>
     */
    Float4OrBuilder getVGYROQuatOrBuilder();

    /**
     * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
     */
    boolean hasVGYROSpeedRps();
    /**
     * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
     */
    Float3 getVGYROSpeedRps();
    /**
     * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
     */
    Float3OrBuilder getVGYROSpeedRpsOrBuilder();

    /**
     * <code>optional .Float3 Mouse3D_euler = 11;</code>
     */
    boolean hasMouse3DEuler();
    /**
     * <code>optional .Float3 Mouse3D_euler = 11;</code>
     */
    Float3 getMouse3DEuler();
    /**
     * <code>optional .Float3 Mouse3D_euler = 11;</code>
     */
    Float3OrBuilder getMouse3DEulerOrBuilder();

    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    boolean hasMagOritentationDeg();
    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    float getMagOritentationDeg();

    /**
     * <code>optional fixed32 motion = 13;</code>
     */
    boolean hasMotion();
    /**
     * <code>optional fixed32 motion = 13;</code>
     */
    int getMotion();

    /**
     * <code>optional fixed32 peak = 14;</code>
     */
    boolean hasPeak();
    /**
     * <code>optional fixed32 peak = 14;</code>
     */
    int getPeak();

    /**
     * <code>optional fixed32 peakMotion = 15;</code>
     */
    boolean hasPeakMotion();
    /**
     * <code>optional fixed32 peakMotion = 15;</code>
     */
    int getPeakMotion();

    /**
     * <code>optional fixed32 intStat = 16;</code>
     *
     * <pre>
     * bit:0 
     * </pre>
     */
    boolean hasIntStat();
    /**
     * <code>optional fixed32 intStat = 16;</code>
     *
     * <pre>
     * bit:0 
     * </pre>
     */
    int getIntStat();

    /**
     * <code>optional .RegiMap accRegMap_array = 17;</code>
     */
    boolean hasAccRegMapArray();
    /**
     * <code>optional .RegiMap accRegMap_array = 17;</code>
     */
    RegiMap getAccRegMapArray();
    /**
     * <code>optional .RegiMap accRegMap_array = 17;</code>
     */
    RegiMapOrBuilder getAccRegMapArrayOrBuilder();

    /**
     * <code>optional .RegiMap gyrRegMap_array = 18;</code>
     */
    boolean hasGyrRegMapArray();
    /**
     * <code>optional .RegiMap gyrRegMap_array = 18;</code>
     */
    RegiMap getGyrRegMapArray();
    /**
     * <code>optional .RegiMap gyrRegMap_array = 18;</code>
     */
    RegiMapOrBuilder getGyrRegMapArrayOrBuilder();

    /**
     * <code>optional .RegiMap magRegMap_array = 19;</code>
     */
    boolean hasMagRegMapArray();
    /**
     * <code>optional .RegiMap magRegMap_array = 19;</code>
     */
    RegiMap getMagRegMapArray();
    /**
     * <code>optional .RegiMap magRegMap_array = 19;</code>
     */
    RegiMapOrBuilder getMagRegMapArrayOrBuilder();
  }
  /**
   * Protobuf type {@code StnEggPacket}
   */
  public static final class StnEggPacket extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:StnEggPacket)
      StnEggPacketOrBuilder {
    // Use StnEggPacket.newBuilder() to construct.
    private StnEggPacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StnEggPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StnEggPacket defaultInstance;
    public static StnEggPacket getDefaultInstance() {
      return defaultInstance;
    }

    public StnEggPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StnEggPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              size_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              seqNo_ = input.readFixed32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              timeStamp_ = input.readFixed32();
              break;
            }
            case 34: {
              Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = accRAWG_.toBuilder();
              }
              accRAWG_ = input.readMessage(Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accRAWG_);
                accRAWG_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = gyrRAWDps_.toBuilder();
              }
              gyrRAWDps_ = input.readMessage(Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gyrRAWDps_);
                gyrRAWDps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = magRAWUT_.toBuilder();
              }
              magRAWUT_ = input.readMessage(Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(magRAWUT_);
                magRAWUT_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              Float4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = kalman9AXISQuat_.toBuilder();
              }
              kalman9AXISQuat_ = input.readMessage(Float4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kalman9AXISQuat_);
                kalman9AXISQuat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              Float4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = kalman6AXISAGQuat_.toBuilder();
              }
              kalman6AXISAGQuat_ = input.readMessage(Float4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kalman6AXISAGQuat_);
                kalman6AXISAGQuat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              Float4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = vGYROQuat_.toBuilder();
              }
              vGYROQuat_ = input.readMessage(Float4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vGYROQuat_);
                vGYROQuat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = vGYROSpeedRps_.toBuilder();
              }
              vGYROSpeedRps_ = input.readMessage(Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vGYROSpeedRps_);
                vGYROSpeedRps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = mouse3DEuler_.toBuilder();
              }
              mouse3DEuler_ = input.readMessage(Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mouse3DEuler_);
                mouse3DEuler_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              magOritentationDeg_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              motion_ = input.readFixed32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              peak_ = input.readFixed32();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              peakMotion_ = input.readFixed32();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              intStat_ = input.readFixed32();
              break;
            }
            case 138: {
              RegiMap.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = accRegMapArray_.toBuilder();
              }
              accRegMapArray_ = input.readMessage(RegiMap.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accRegMapArray_);
                accRegMapArray_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 146: {
              RegiMap.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = gyrRegMapArray_.toBuilder();
              }
              gyrRegMapArray_ = input.readMessage(RegiMap.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gyrRegMapArray_);
                gyrRegMapArray_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 154: {
              RegiMap.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = magRegMapArray_.toBuilder();
              }
              magRegMapArray_ = input.readMessage(RegiMap.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(magRegMapArray_);
                magRegMapArray_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StnPacket.internal_static_StnEggPacket_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StnPacket.internal_static_StnEggPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              StnEggPacket.class, Builder.class);
    }

    public static com.google.protobuf.Parser<StnEggPacket> PARSER =
        new com.google.protobuf.AbstractParser<StnEggPacket>() {
      public StnEggPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StnEggPacket(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<StnEggPacket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SIZE_FIELD_NUMBER = 1;
    private int size_;
    /**
     * <code>optional fixed32 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed32 size = 1;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int SEQNO_FIELD_NUMBER = 2;
    private int seqNo_;
    /**
     * <code>required fixed32 seqNo = 2;</code>
     */
    public boolean hasSeqNo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required fixed32 seqNo = 2;</code>
     */
    public int getSeqNo() {
      return seqNo_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private int timeStamp_;
    /**
     * <code>optional fixed32 timeStamp = 3;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed32 timeStamp = 3;</code>
     */
    public int getTimeStamp() {
      return timeStamp_;
    }

    public static final int ACCRAW_G_FIELD_NUMBER = 4;
    private Float3 accRAWG_;
    /**
     * <code>optional .Float3 accRAW_g = 4;</code>
     */
    public boolean hasAccRAWG() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Float3 accRAW_g = 4;</code>
     */
    public Float3 getAccRAWG() {
      return accRAWG_;
    }
    /**
     * <code>optional .Float3 accRAW_g = 4;</code>
     */
    public Float3OrBuilder getAccRAWGOrBuilder() {
      return accRAWG_;
    }

    public static final int GYRRAW_DPS_FIELD_NUMBER = 5;
    private Float3 gyrRAWDps_;
    /**
     * <code>optional .Float3 gyrRAW_dps = 5;</code>
     */
    public boolean hasGyrRAWDps() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .Float3 gyrRAW_dps = 5;</code>
     */
    public Float3 getGyrRAWDps() {
      return gyrRAWDps_;
    }
    /**
     * <code>optional .Float3 gyrRAW_dps = 5;</code>
     */
    public Float3OrBuilder getGyrRAWDpsOrBuilder() {
      return gyrRAWDps_;
    }

    public static final int MAGRAW_UT_FIELD_NUMBER = 6;
    private Float3 magRAWUT_;
    /**
     * <code>optional .Float3 magRAW_uT = 6;</code>
     */
    public boolean hasMagRAWUT() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .Float3 magRAW_uT = 6;</code>
     */
    public Float3 getMagRAWUT() {
      return magRAWUT_;
    }
    /**
     * <code>optional .Float3 magRAW_uT = 6;</code>
     */
    public Float3OrBuilder getMagRAWUTOrBuilder() {
      return magRAWUT_;
    }

    public static final int KALMAN_9AXIS_QUAT_FIELD_NUMBER = 7;
    private Float4 kalman9AXISQuat_;
    /**
     * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
     */
    public boolean hasKalman9AXISQuat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
     */
    public Float4 getKalman9AXISQuat() {
      return kalman9AXISQuat_;
    }
    /**
     * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
     */
    public Float4OrBuilder getKalman9AXISQuatOrBuilder() {
      return kalman9AXISQuat_;
    }

    public static final int KALMAN_6AXIS_AG_QUAT_FIELD_NUMBER = 8;
    private Float4 kalman6AXISAGQuat_;
    /**
     * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
     */
    public boolean hasKalman6AXISAGQuat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
     */
    public Float4 getKalman6AXISAGQuat() {
      return kalman6AXISAGQuat_;
    }
    /**
     * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
     */
    public Float4OrBuilder getKalman6AXISAGQuatOrBuilder() {
      return kalman6AXISAGQuat_;
    }

    public static final int VGYRO_QUAT_FIELD_NUMBER = 9;
    private Float4 vGYROQuat_;
    /**
     * <code>optional .Float4 VGYRO_quat = 9;</code>
     */
    public boolean hasVGYROQuat() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .Float4 VGYRO_quat = 9;</code>
     */
    public Float4 getVGYROQuat() {
      return vGYROQuat_;
    }
    /**
     * <code>optional .Float4 VGYRO_quat = 9;</code>
     */
    public Float4OrBuilder getVGYROQuatOrBuilder() {
      return vGYROQuat_;
    }

    public static final int VGYRO_SPEED_RPS_FIELD_NUMBER = 10;
    private Float3 vGYROSpeedRps_;
    /**
     * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
     */
    public boolean hasVGYROSpeedRps() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
     */
    public Float3 getVGYROSpeedRps() {
      return vGYROSpeedRps_;
    }
    /**
     * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
     */
    public Float3OrBuilder getVGYROSpeedRpsOrBuilder() {
      return vGYROSpeedRps_;
    }

    public static final int MOUSE3D_EULER_FIELD_NUMBER = 11;
    private Float3 mouse3DEuler_;
    /**
     * <code>optional .Float3 Mouse3D_euler = 11;</code>
     */
    public boolean hasMouse3DEuler() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .Float3 Mouse3D_euler = 11;</code>
     */
    public Float3 getMouse3DEuler() {
      return mouse3DEuler_;
    }
    /**
     * <code>optional .Float3 Mouse3D_euler = 11;</code>
     */
    public Float3OrBuilder getMouse3DEulerOrBuilder() {
      return mouse3DEuler_;
    }

    public static final int MAGORITENTATION_DEG_FIELD_NUMBER = 12;
    private float magOritentationDeg_;
    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    public boolean hasMagOritentationDeg() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    public float getMagOritentationDeg() {
      return magOritentationDeg_;
    }

    public static final int MOTION_FIELD_NUMBER = 13;
    private int motion_;
    /**
     * <code>optional fixed32 motion = 13;</code>
     */
    public boolean hasMotion() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional fixed32 motion = 13;</code>
     */
    public int getMotion() {
      return motion_;
    }

    public static final int PEAK_FIELD_NUMBER = 14;
    private int peak_;
    /**
     * <code>optional fixed32 peak = 14;</code>
     */
    public boolean hasPeak() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional fixed32 peak = 14;</code>
     */
    public int getPeak() {
      return peak_;
    }

    public static final int PEAKMOTION_FIELD_NUMBER = 15;
    private int peakMotion_;
    /**
     * <code>optional fixed32 peakMotion = 15;</code>
     */
    public boolean hasPeakMotion() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional fixed32 peakMotion = 15;</code>
     */
    public int getPeakMotion() {
      return peakMotion_;
    }

    public static final int INTSTAT_FIELD_NUMBER = 16;
    private int intStat_;
    /**
     * <code>optional fixed32 intStat = 16;</code>
     *
     * <pre>
     * bit:0 
     * </pre>
     */
    public boolean hasIntStat() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional fixed32 intStat = 16;</code>
     *
     * <pre>
     * bit:0 
     * </pre>
     */
    public int getIntStat() {
      return intStat_;
    }

    public static final int ACCREGMAP_ARRAY_FIELD_NUMBER = 17;
    private RegiMap accRegMapArray_;
    /**
     * <code>optional .RegiMap accRegMap_array = 17;</code>
     */
    public boolean hasAccRegMapArray() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .RegiMap accRegMap_array = 17;</code>
     */
    public RegiMap getAccRegMapArray() {
      return accRegMapArray_;
    }
    /**
     * <code>optional .RegiMap accRegMap_array = 17;</code>
     */
    public RegiMapOrBuilder getAccRegMapArrayOrBuilder() {
      return accRegMapArray_;
    }

    public static final int GYRREGMAP_ARRAY_FIELD_NUMBER = 18;
    private RegiMap gyrRegMapArray_;
    /**
     * <code>optional .RegiMap gyrRegMap_array = 18;</code>
     */
    public boolean hasGyrRegMapArray() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .RegiMap gyrRegMap_array = 18;</code>
     */
    public RegiMap getGyrRegMapArray() {
      return gyrRegMapArray_;
    }
    /**
     * <code>optional .RegiMap gyrRegMap_array = 18;</code>
     */
    public RegiMapOrBuilder getGyrRegMapArrayOrBuilder() {
      return gyrRegMapArray_;
    }

    public static final int MAGREGMAP_ARRAY_FIELD_NUMBER = 19;
    private RegiMap magRegMapArray_;
    /**
     * <code>optional .RegiMap magRegMap_array = 19;</code>
     */
    public boolean hasMagRegMapArray() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .RegiMap magRegMap_array = 19;</code>
     */
    public RegiMap getMagRegMapArray() {
      return magRegMapArray_;
    }
    /**
     * <code>optional .RegiMap magRegMap_array = 19;</code>
     */
    public RegiMapOrBuilder getMagRegMapArrayOrBuilder() {
      return magRegMapArray_;
    }

    private void initFields() {
      size_ = 0;
      seqNo_ = 0;
      timeStamp_ = 0;
      accRAWG_ = Float3.getDefaultInstance();
      gyrRAWDps_ = Float3.getDefaultInstance();
      magRAWUT_ = Float3.getDefaultInstance();
      kalman9AXISQuat_ = Float4.getDefaultInstance();
      kalman6AXISAGQuat_ = Float4.getDefaultInstance();
      vGYROQuat_ = Float4.getDefaultInstance();
      vGYROSpeedRps_ = Float3.getDefaultInstance();
      mouse3DEuler_ = Float3.getDefaultInstance();
      magOritentationDeg_ = 0F;
      motion_ = 0;
      peak_ = 0;
      peakMotion_ = 0;
      intStat_ = 0;
      accRegMapArray_ = RegiMap.getDefaultInstance();
      gyrRegMapArray_ = RegiMap.getDefaultInstance();
      magRegMapArray_ = RegiMap.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeqNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasAccRAWG()) {
        if (!getAccRAWG().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGyrRAWDps()) {
        if (!getGyrRAWDps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMagRAWUT()) {
        if (!getMagRAWUT().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKalman9AXISQuat()) {
        if (!getKalman9AXISQuat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKalman6AXISAGQuat()) {
        if (!getKalman6AXISAGQuat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVGYROQuat()) {
        if (!getVGYROQuat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVGYROSpeedRps()) {
        if (!getVGYROSpeedRps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMouse3DEuler()) {
        if (!getMouse3DEuler().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed32(2, seqNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(3, timeStamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, accRAWG_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, gyrRAWDps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, magRAWUT_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, kalman9AXISQuat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, kalman6AXISAGQuat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, vGYROQuat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, vGYROSpeedRps_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, mouse3DEuler_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, magOritentationDeg_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFixed32(13, motion_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFixed32(14, peak_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFixed32(15, peakMotion_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFixed32(16, intStat_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, accRegMapArray_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(18, gyrRegMapArray_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, magRegMapArray_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, seqNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, timeStamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, accRAWG_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gyrRAWDps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, magRAWUT_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, kalman9AXISQuat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, kalman6AXISAGQuat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, vGYROQuat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, vGYROSpeedRps_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, mouse3DEuler_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, magOritentationDeg_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(13, motion_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, peak_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(15, peakMotion_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(16, intStat_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, accRegMapArray_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, gyrRegMapArray_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, magRegMapArray_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code StnEggPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:StnEggPacket)
        StnEggPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return StnPacket.internal_static_StnEggPacket_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return StnPacket.internal_static_StnEggPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                StnEggPacket.class, Builder.class);
      }

      // Construct using demo.sensors.se.com.ssdemo.StnPacket.StnEggPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAccRAWGFieldBuilder();
          getGyrRAWDpsFieldBuilder();
          getMagRAWUTFieldBuilder();
          getKalman9AXISQuatFieldBuilder();
          getKalman6AXISAGQuatFieldBuilder();
          getVGYROQuatFieldBuilder();
          getVGYROSpeedRpsFieldBuilder();
          getMouse3DEulerFieldBuilder();
          getAccRegMapArrayFieldBuilder();
          getGyrRegMapArrayFieldBuilder();
          getMagRegMapArrayFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seqNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (accRAWGBuilder_ == null) {
          accRAWG_ = Float3.getDefaultInstance();
        } else {
          accRAWGBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (gyrRAWDpsBuilder_ == null) {
          gyrRAWDps_ = Float3.getDefaultInstance();
        } else {
          gyrRAWDpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (magRAWUTBuilder_ == null) {
          magRAWUT_ = Float3.getDefaultInstance();
        } else {
          magRAWUTBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (kalman9AXISQuatBuilder_ == null) {
          kalman9AXISQuat_ = Float4.getDefaultInstance();
        } else {
          kalman9AXISQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (kalman6AXISAGQuatBuilder_ == null) {
          kalman6AXISAGQuat_ = Float4.getDefaultInstance();
        } else {
          kalman6AXISAGQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (vGYROQuatBuilder_ == null) {
          vGYROQuat_ = Float4.getDefaultInstance();
        } else {
          vGYROQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (vGYROSpeedRpsBuilder_ == null) {
          vGYROSpeedRps_ = Float3.getDefaultInstance();
        } else {
          vGYROSpeedRpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEuler_ = Float3.getDefaultInstance();
        } else {
          mouse3DEulerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        magOritentationDeg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        motion_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        peak_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        peakMotion_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        intStat_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArray_ = RegiMap.getDefaultInstance();
        } else {
          accRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArray_ = RegiMap.getDefaultInstance();
        } else {
          gyrRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArray_ = RegiMap.getDefaultInstance();
        } else {
          magRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return StnPacket.internal_static_StnEggPacket_descriptor;
      }

      public StnEggPacket getDefaultInstanceForType() {
        return StnEggPacket.getDefaultInstance();
      }

      public StnEggPacket build() {
        StnEggPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPacket buildPartial() {
        StnEggPacket result = new StnEggPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seqNo_ = seqNo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (accRAWGBuilder_ == null) {
          result.accRAWG_ = accRAWG_;
        } else {
          result.accRAWG_ = accRAWGBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (gyrRAWDpsBuilder_ == null) {
          result.gyrRAWDps_ = gyrRAWDps_;
        } else {
          result.gyrRAWDps_ = gyrRAWDpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (magRAWUTBuilder_ == null) {
          result.magRAWUT_ = magRAWUT_;
        } else {
          result.magRAWUT_ = magRAWUTBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (kalman9AXISQuatBuilder_ == null) {
          result.kalman9AXISQuat_ = kalman9AXISQuat_;
        } else {
          result.kalman9AXISQuat_ = kalman9AXISQuatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (kalman6AXISAGQuatBuilder_ == null) {
          result.kalman6AXISAGQuat_ = kalman6AXISAGQuat_;
        } else {
          result.kalman6AXISAGQuat_ = kalman6AXISAGQuatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (vGYROQuatBuilder_ == null) {
          result.vGYROQuat_ = vGYROQuat_;
        } else {
          result.vGYROQuat_ = vGYROQuatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (vGYROSpeedRpsBuilder_ == null) {
          result.vGYROSpeedRps_ = vGYROSpeedRps_;
        } else {
          result.vGYROSpeedRps_ = vGYROSpeedRpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (mouse3DEulerBuilder_ == null) {
          result.mouse3DEuler_ = mouse3DEuler_;
        } else {
          result.mouse3DEuler_ = mouse3DEulerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.magOritentationDeg_ = magOritentationDeg_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.motion_ = motion_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.peak_ = peak_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.peakMotion_ = peakMotion_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.intStat_ = intStat_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (accRegMapArrayBuilder_ == null) {
          result.accRegMapArray_ = accRegMapArray_;
        } else {
          result.accRegMapArray_ = accRegMapArrayBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (gyrRegMapArrayBuilder_ == null) {
          result.gyrRegMapArray_ = gyrRegMapArray_;
        } else {
          result.gyrRegMapArray_ = gyrRegMapArrayBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (magRegMapArrayBuilder_ == null) {
          result.magRegMapArray_ = magRegMapArray_;
        } else {
          result.magRegMapArray_ = magRegMapArrayBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPacket) {
          return mergeFrom((StnEggPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPacket other) {
        if (other == StnEggPacket.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasSeqNo()) {
          setSeqNo(other.getSeqNo());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasAccRAWG()) {
          mergeAccRAWG(other.getAccRAWG());
        }
        if (other.hasGyrRAWDps()) {
          mergeGyrRAWDps(other.getGyrRAWDps());
        }
        if (other.hasMagRAWUT()) {
          mergeMagRAWUT(other.getMagRAWUT());
        }
        if (other.hasKalman9AXISQuat()) {
          mergeKalman9AXISQuat(other.getKalman9AXISQuat());
        }
        if (other.hasKalman6AXISAGQuat()) {
          mergeKalman6AXISAGQuat(other.getKalman6AXISAGQuat());
        }
        if (other.hasVGYROQuat()) {
          mergeVGYROQuat(other.getVGYROQuat());
        }
        if (other.hasVGYROSpeedRps()) {
          mergeVGYROSpeedRps(other.getVGYROSpeedRps());
        }
        if (other.hasMouse3DEuler()) {
          mergeMouse3DEuler(other.getMouse3DEuler());
        }
        if (other.hasMagOritentationDeg()) {
          setMagOritentationDeg(other.getMagOritentationDeg());
        }
        if (other.hasMotion()) {
          setMotion(other.getMotion());
        }
        if (other.hasPeak()) {
          setPeak(other.getPeak());
        }
        if (other.hasPeakMotion()) {
          setPeakMotion(other.getPeakMotion());
        }
        if (other.hasIntStat()) {
          setIntStat(other.getIntStat());
        }
        if (other.hasAccRegMapArray()) {
          mergeAccRegMapArray(other.getAccRegMapArray());
        }
        if (other.hasGyrRegMapArray()) {
          mergeGyrRegMapArray(other.getGyrRegMapArray());
        }
        if (other.hasMagRegMapArray()) {
          mergeMagRegMapArray(other.getMagRegMapArray());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeqNo()) {
          
          return false;
        }
        if (hasAccRAWG()) {
          if (!getAccRAWG().isInitialized()) {
            
            return false;
          }
        }
        if (hasGyrRAWDps()) {
          if (!getGyrRAWDps().isInitialized()) {
            
            return false;
          }
        }
        if (hasMagRAWUT()) {
          if (!getMagRAWUT().isInitialized()) {
            
            return false;
          }
        }
        if (hasKalman9AXISQuat()) {
          if (!getKalman9AXISQuat().isInitialized()) {
            
            return false;
          }
        }
        if (hasKalman6AXISAGQuat()) {
          if (!getKalman6AXISAGQuat().isInitialized()) {
            
            return false;
          }
        }
        if (hasVGYROQuat()) {
          if (!getVGYROQuat().isInitialized()) {
            
            return false;
          }
        }
        if (hasVGYROSpeedRps()) {
          if (!getVGYROSpeedRps().isInitialized()) {
            
            return false;
          }
        }
        if (hasMouse3DEuler()) {
          if (!getMouse3DEuler().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        StnEggPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int size_ ;
      /**
       * <code>optional fixed32 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed32 size = 1;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional fixed32 size = 1;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        onChanged();
        return this;
      }

      private int seqNo_ ;
      /**
       * <code>required fixed32 seqNo = 2;</code>
       */
      public boolean hasSeqNo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required fixed32 seqNo = 2;</code>
       */
      public int getSeqNo() {
        return seqNo_;
      }
      /**
       * <code>required fixed32 seqNo = 2;</code>
       */
      public Builder setSeqNo(int value) {
        bitField0_ |= 0x00000002;
        seqNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 seqNo = 2;</code>
       */
      public Builder clearSeqNo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seqNo_ = 0;
        onChanged();
        return this;
      }

      private int timeStamp_ ;
      /**
       * <code>optional fixed32 timeStamp = 3;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed32 timeStamp = 3;</code>
       */
      public int getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>optional fixed32 timeStamp = 3;</code>
       */
      public Builder setTimeStamp(int value) {
        bitField0_ |= 0x00000004;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 timeStamp = 3;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeStamp_ = 0;
        onChanged();
        return this;
      }

      private Float3 accRAWG_ = Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder> accRAWGBuilder_;
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public boolean hasAccRAWG() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Float3 getAccRAWG() {
        if (accRAWGBuilder_ == null) {
          return accRAWG_;
        } else {
          return accRAWGBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Builder setAccRAWG(Float3 value) {
        if (accRAWGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accRAWG_ = value;
          onChanged();
        } else {
          accRAWGBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Builder setAccRAWG(
          Float3.Builder builderForValue) {
        if (accRAWGBuilder_ == null) {
          accRAWG_ = builderForValue.build();
          onChanged();
        } else {
          accRAWGBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Builder mergeAccRAWG(Float3 value) {
        if (accRAWGBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              accRAWG_ != Float3.getDefaultInstance()) {
            accRAWG_ =
              Float3.newBuilder(accRAWG_).mergeFrom(value).buildPartial();
          } else {
            accRAWG_ = value;
          }
          onChanged();
        } else {
          accRAWGBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Builder clearAccRAWG() {
        if (accRAWGBuilder_ == null) {
          accRAWG_ = Float3.getDefaultInstance();
          onChanged();
        } else {
          accRAWGBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Float3.Builder getAccRAWGBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAccRAWGFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      public Float3OrBuilder getAccRAWGOrBuilder() {
        if (accRAWGBuilder_ != null) {
          return accRAWGBuilder_.getMessageOrBuilder();
        } else {
          return accRAWG_;
        }
      }
      /**
       * <code>optional .Float3 accRAW_g = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder>
          getAccRAWGFieldBuilder() {
        if (accRAWGBuilder_ == null) {
          accRAWGBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float3, Float3.Builder, Float3OrBuilder>(
                  getAccRAWG(),
                  getParentForChildren(),
                  isClean());
          accRAWG_ = null;
        }
        return accRAWGBuilder_;
      }

      private Float3 gyrRAWDps_ = Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder> gyrRAWDpsBuilder_;
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public boolean hasGyrRAWDps() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Float3 getGyrRAWDps() {
        if (gyrRAWDpsBuilder_ == null) {
          return gyrRAWDps_;
        } else {
          return gyrRAWDpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Builder setGyrRAWDps(Float3 value) {
        if (gyrRAWDpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gyrRAWDps_ = value;
          onChanged();
        } else {
          gyrRAWDpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Builder setGyrRAWDps(
          Float3.Builder builderForValue) {
        if (gyrRAWDpsBuilder_ == null) {
          gyrRAWDps_ = builderForValue.build();
          onChanged();
        } else {
          gyrRAWDpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Builder mergeGyrRAWDps(Float3 value) {
        if (gyrRAWDpsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              gyrRAWDps_ != Float3.getDefaultInstance()) {
            gyrRAWDps_ =
              Float3.newBuilder(gyrRAWDps_).mergeFrom(value).buildPartial();
          } else {
            gyrRAWDps_ = value;
          }
          onChanged();
        } else {
          gyrRAWDpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Builder clearGyrRAWDps() {
        if (gyrRAWDpsBuilder_ == null) {
          gyrRAWDps_ = Float3.getDefaultInstance();
          onChanged();
        } else {
          gyrRAWDpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Float3.Builder getGyrRAWDpsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGyrRAWDpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      public Float3OrBuilder getGyrRAWDpsOrBuilder() {
        if (gyrRAWDpsBuilder_ != null) {
          return gyrRAWDpsBuilder_.getMessageOrBuilder();
        } else {
          return gyrRAWDps_;
        }
      }
      /**
       * <code>optional .Float3 gyrRAW_dps = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder>
          getGyrRAWDpsFieldBuilder() {
        if (gyrRAWDpsBuilder_ == null) {
          gyrRAWDpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float3, Float3.Builder, Float3OrBuilder>(
                  getGyrRAWDps(),
                  getParentForChildren(),
                  isClean());
          gyrRAWDps_ = null;
        }
        return gyrRAWDpsBuilder_;
      }

      private Float3 magRAWUT_ = Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder> magRAWUTBuilder_;
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public boolean hasMagRAWUT() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Float3 getMagRAWUT() {
        if (magRAWUTBuilder_ == null) {
          return magRAWUT_;
        } else {
          return magRAWUTBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Builder setMagRAWUT(Float3 value) {
        if (magRAWUTBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          magRAWUT_ = value;
          onChanged();
        } else {
          magRAWUTBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Builder setMagRAWUT(
          Float3.Builder builderForValue) {
        if (magRAWUTBuilder_ == null) {
          magRAWUT_ = builderForValue.build();
          onChanged();
        } else {
          magRAWUTBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Builder mergeMagRAWUT(Float3 value) {
        if (magRAWUTBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              magRAWUT_ != Float3.getDefaultInstance()) {
            magRAWUT_ =
              Float3.newBuilder(magRAWUT_).mergeFrom(value).buildPartial();
          } else {
            magRAWUT_ = value;
          }
          onChanged();
        } else {
          magRAWUTBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Builder clearMagRAWUT() {
        if (magRAWUTBuilder_ == null) {
          magRAWUT_ = Float3.getDefaultInstance();
          onChanged();
        } else {
          magRAWUTBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Float3.Builder getMagRAWUTBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getMagRAWUTFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      public Float3OrBuilder getMagRAWUTOrBuilder() {
        if (magRAWUTBuilder_ != null) {
          return magRAWUTBuilder_.getMessageOrBuilder();
        } else {
          return magRAWUT_;
        }
      }
      /**
       * <code>optional .Float3 magRAW_uT = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder>
          getMagRAWUTFieldBuilder() {
        if (magRAWUTBuilder_ == null) {
          magRAWUTBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float3, Float3.Builder, Float3OrBuilder>(
                  getMagRAWUT(),
                  getParentForChildren(),
                  isClean());
          magRAWUT_ = null;
        }
        return magRAWUTBuilder_;
      }

      private Float4 kalman9AXISQuat_ = Float4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float4, Float4.Builder, Float4OrBuilder> kalman9AXISQuatBuilder_;
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public boolean hasKalman9AXISQuat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Float4 getKalman9AXISQuat() {
        if (kalman9AXISQuatBuilder_ == null) {
          return kalman9AXISQuat_;
        } else {
          return kalman9AXISQuatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Builder setKalman9AXISQuat(Float4 value) {
        if (kalman9AXISQuatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kalman9AXISQuat_ = value;
          onChanged();
        } else {
          kalman9AXISQuatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Builder setKalman9AXISQuat(
          Float4.Builder builderForValue) {
        if (kalman9AXISQuatBuilder_ == null) {
          kalman9AXISQuat_ = builderForValue.build();
          onChanged();
        } else {
          kalman9AXISQuatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Builder mergeKalman9AXISQuat(Float4 value) {
        if (kalman9AXISQuatBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              kalman9AXISQuat_ != Float4.getDefaultInstance()) {
            kalman9AXISQuat_ =
              Float4.newBuilder(kalman9AXISQuat_).mergeFrom(value).buildPartial();
          } else {
            kalman9AXISQuat_ = value;
          }
          onChanged();
        } else {
          kalman9AXISQuatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Builder clearKalman9AXISQuat() {
        if (kalman9AXISQuatBuilder_ == null) {
          kalman9AXISQuat_ = Float4.getDefaultInstance();
          onChanged();
        } else {
          kalman9AXISQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Float4.Builder getKalman9AXISQuatBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getKalman9AXISQuatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      public Float4OrBuilder getKalman9AXISQuatOrBuilder() {
        if (kalman9AXISQuatBuilder_ != null) {
          return kalman9AXISQuatBuilder_.getMessageOrBuilder();
        } else {
          return kalman9AXISQuat_;
        }
      }
      /**
       * <code>optional .Float4 Kalman_9AXIS_quat = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float4, Float4.Builder, Float4OrBuilder>
          getKalman9AXISQuatFieldBuilder() {
        if (kalman9AXISQuatBuilder_ == null) {
          kalman9AXISQuatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float4, Float4.Builder, Float4OrBuilder>(
                  getKalman9AXISQuat(),
                  getParentForChildren(),
                  isClean());
          kalman9AXISQuat_ = null;
        }
        return kalman9AXISQuatBuilder_;
      }

      private Float4 kalman6AXISAGQuat_ = Float4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float4, Float4.Builder, Float4OrBuilder> kalman6AXISAGQuatBuilder_;
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public boolean hasKalman6AXISAGQuat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Float4 getKalman6AXISAGQuat() {
        if (kalman6AXISAGQuatBuilder_ == null) {
          return kalman6AXISAGQuat_;
        } else {
          return kalman6AXISAGQuatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Builder setKalman6AXISAGQuat(Float4 value) {
        if (kalman6AXISAGQuatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kalman6AXISAGQuat_ = value;
          onChanged();
        } else {
          kalman6AXISAGQuatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Builder setKalman6AXISAGQuat(
          Float4.Builder builderForValue) {
        if (kalman6AXISAGQuatBuilder_ == null) {
          kalman6AXISAGQuat_ = builderForValue.build();
          onChanged();
        } else {
          kalman6AXISAGQuatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Builder mergeKalman6AXISAGQuat(Float4 value) {
        if (kalman6AXISAGQuatBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              kalman6AXISAGQuat_ != Float4.getDefaultInstance()) {
            kalman6AXISAGQuat_ =
              Float4.newBuilder(kalman6AXISAGQuat_).mergeFrom(value).buildPartial();
          } else {
            kalman6AXISAGQuat_ = value;
          }
          onChanged();
        } else {
          kalman6AXISAGQuatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Builder clearKalman6AXISAGQuat() {
        if (kalman6AXISAGQuatBuilder_ == null) {
          kalman6AXISAGQuat_ = Float4.getDefaultInstance();
          onChanged();
        } else {
          kalman6AXISAGQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Float4.Builder getKalman6AXISAGQuatBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getKalman6AXISAGQuatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      public Float4OrBuilder getKalman6AXISAGQuatOrBuilder() {
        if (kalman6AXISAGQuatBuilder_ != null) {
          return kalman6AXISAGQuatBuilder_.getMessageOrBuilder();
        } else {
          return kalman6AXISAGQuat_;
        }
      }
      /**
       * <code>optional .Float4 Kalman_6AXIS_AG_quat = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float4, Float4.Builder, Float4OrBuilder>
          getKalman6AXISAGQuatFieldBuilder() {
        if (kalman6AXISAGQuatBuilder_ == null) {
          kalman6AXISAGQuatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float4, Float4.Builder, Float4OrBuilder>(
                  getKalman6AXISAGQuat(),
                  getParentForChildren(),
                  isClean());
          kalman6AXISAGQuat_ = null;
        }
        return kalman6AXISAGQuatBuilder_;
      }

      private Float4 vGYROQuat_ = Float4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float4, Float4.Builder, Float4OrBuilder> vGYROQuatBuilder_;
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public boolean hasVGYROQuat() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Float4 getVGYROQuat() {
        if (vGYROQuatBuilder_ == null) {
          return vGYROQuat_;
        } else {
          return vGYROQuatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Builder setVGYROQuat(Float4 value) {
        if (vGYROQuatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vGYROQuat_ = value;
          onChanged();
        } else {
          vGYROQuatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Builder setVGYROQuat(
          Float4.Builder builderForValue) {
        if (vGYROQuatBuilder_ == null) {
          vGYROQuat_ = builderForValue.build();
          onChanged();
        } else {
          vGYROQuatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Builder mergeVGYROQuat(Float4 value) {
        if (vGYROQuatBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              vGYROQuat_ != Float4.getDefaultInstance()) {
            vGYROQuat_ =
              Float4.newBuilder(vGYROQuat_).mergeFrom(value).buildPartial();
          } else {
            vGYROQuat_ = value;
          }
          onChanged();
        } else {
          vGYROQuatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Builder clearVGYROQuat() {
        if (vGYROQuatBuilder_ == null) {
          vGYROQuat_ = Float4.getDefaultInstance();
          onChanged();
        } else {
          vGYROQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Float4.Builder getVGYROQuatBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getVGYROQuatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      public Float4OrBuilder getVGYROQuatOrBuilder() {
        if (vGYROQuatBuilder_ != null) {
          return vGYROQuatBuilder_.getMessageOrBuilder();
        } else {
          return vGYROQuat_;
        }
      }
      /**
       * <code>optional .Float4 VGYRO_quat = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float4, Float4.Builder, Float4OrBuilder>
          getVGYROQuatFieldBuilder() {
        if (vGYROQuatBuilder_ == null) {
          vGYROQuatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float4, Float4.Builder, Float4OrBuilder>(
                  getVGYROQuat(),
                  getParentForChildren(),
                  isClean());
          vGYROQuat_ = null;
        }
        return vGYROQuatBuilder_;
      }

      private Float3 vGYROSpeedRps_ = Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder> vGYROSpeedRpsBuilder_;
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public boolean hasVGYROSpeedRps() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Float3 getVGYROSpeedRps() {
        if (vGYROSpeedRpsBuilder_ == null) {
          return vGYROSpeedRps_;
        } else {
          return vGYROSpeedRpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Builder setVGYROSpeedRps(Float3 value) {
        if (vGYROSpeedRpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vGYROSpeedRps_ = value;
          onChanged();
        } else {
          vGYROSpeedRpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Builder setVGYROSpeedRps(
          Float3.Builder builderForValue) {
        if (vGYROSpeedRpsBuilder_ == null) {
          vGYROSpeedRps_ = builderForValue.build();
          onChanged();
        } else {
          vGYROSpeedRpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Builder mergeVGYROSpeedRps(Float3 value) {
        if (vGYROSpeedRpsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              vGYROSpeedRps_ != Float3.getDefaultInstance()) {
            vGYROSpeedRps_ =
              Float3.newBuilder(vGYROSpeedRps_).mergeFrom(value).buildPartial();
          } else {
            vGYROSpeedRps_ = value;
          }
          onChanged();
        } else {
          vGYROSpeedRpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Builder clearVGYROSpeedRps() {
        if (vGYROSpeedRpsBuilder_ == null) {
          vGYROSpeedRps_ = Float3.getDefaultInstance();
          onChanged();
        } else {
          vGYROSpeedRpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Float3.Builder getVGYROSpeedRpsBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getVGYROSpeedRpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      public Float3OrBuilder getVGYROSpeedRpsOrBuilder() {
        if (vGYROSpeedRpsBuilder_ != null) {
          return vGYROSpeedRpsBuilder_.getMessageOrBuilder();
        } else {
          return vGYROSpeedRps_;
        }
      }
      /**
       * <code>optional .Float3 VGYRO_Speed_rps = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder>
          getVGYROSpeedRpsFieldBuilder() {
        if (vGYROSpeedRpsBuilder_ == null) {
          vGYROSpeedRpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float3, Float3.Builder, Float3OrBuilder>(
                  getVGYROSpeedRps(),
                  getParentForChildren(),
                  isClean());
          vGYROSpeedRps_ = null;
        }
        return vGYROSpeedRpsBuilder_;
      }

      private Float3 mouse3DEuler_ = Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder> mouse3DEulerBuilder_;
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public boolean hasMouse3DEuler() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Float3 getMouse3DEuler() {
        if (mouse3DEulerBuilder_ == null) {
          return mouse3DEuler_;
        } else {
          return mouse3DEulerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Builder setMouse3DEuler(Float3 value) {
        if (mouse3DEulerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mouse3DEuler_ = value;
          onChanged();
        } else {
          mouse3DEulerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Builder setMouse3DEuler(
          Float3.Builder builderForValue) {
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEuler_ = builderForValue.build();
          onChanged();
        } else {
          mouse3DEulerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Builder mergeMouse3DEuler(Float3 value) {
        if (mouse3DEulerBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              mouse3DEuler_ != Float3.getDefaultInstance()) {
            mouse3DEuler_ =
              Float3.newBuilder(mouse3DEuler_).mergeFrom(value).buildPartial();
          } else {
            mouse3DEuler_ = value;
          }
          onChanged();
        } else {
          mouse3DEulerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Builder clearMouse3DEuler() {
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEuler_ = Float3.getDefaultInstance();
          onChanged();
        } else {
          mouse3DEulerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Float3.Builder getMouse3DEulerBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getMouse3DEulerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      public Float3OrBuilder getMouse3DEulerOrBuilder() {
        if (mouse3DEulerBuilder_ != null) {
          return mouse3DEulerBuilder_.getMessageOrBuilder();
        } else {
          return mouse3DEuler_;
        }
      }
      /**
       * <code>optional .Float3 Mouse3D_euler = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Float3, Float3.Builder, Float3OrBuilder>
          getMouse3DEulerFieldBuilder() {
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEulerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Float3, Float3.Builder, Float3OrBuilder>(
                  getMouse3DEuler(),
                  getParentForChildren(),
                  isClean());
          mouse3DEuler_ = null;
        }
        return mouse3DEulerBuilder_;
      }

      private float magOritentationDeg_ ;
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public boolean hasMagOritentationDeg() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public float getMagOritentationDeg() {
        return magOritentationDeg_;
      }
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public Builder setMagOritentationDeg(float value) {
        bitField0_ |= 0x00000800;
        magOritentationDeg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public Builder clearMagOritentationDeg() {
        bitField0_ = (bitField0_ & ~0x00000800);
        magOritentationDeg_ = 0F;
        onChanged();
        return this;
      }

      private int motion_ ;
      /**
       * <code>optional fixed32 motion = 13;</code>
       */
      public boolean hasMotion() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional fixed32 motion = 13;</code>
       */
      public int getMotion() {
        return motion_;
      }
      /**
       * <code>optional fixed32 motion = 13;</code>
       */
      public Builder setMotion(int value) {
        bitField0_ |= 0x00001000;
        motion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 motion = 13;</code>
       */
      public Builder clearMotion() {
        bitField0_ = (bitField0_ & ~0x00001000);
        motion_ = 0;
        onChanged();
        return this;
      }

      private int peak_ ;
      /**
       * <code>optional fixed32 peak = 14;</code>
       */
      public boolean hasPeak() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional fixed32 peak = 14;</code>
       */
      public int getPeak() {
        return peak_;
      }
      /**
       * <code>optional fixed32 peak = 14;</code>
       */
      public Builder setPeak(int value) {
        bitField0_ |= 0x00002000;
        peak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 peak = 14;</code>
       */
      public Builder clearPeak() {
        bitField0_ = (bitField0_ & ~0x00002000);
        peak_ = 0;
        onChanged();
        return this;
      }

      private int peakMotion_ ;
      /**
       * <code>optional fixed32 peakMotion = 15;</code>
       */
      public boolean hasPeakMotion() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional fixed32 peakMotion = 15;</code>
       */
      public int getPeakMotion() {
        return peakMotion_;
      }
      /**
       * <code>optional fixed32 peakMotion = 15;</code>
       */
      public Builder setPeakMotion(int value) {
        bitField0_ |= 0x00004000;
        peakMotion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 peakMotion = 15;</code>
       */
      public Builder clearPeakMotion() {
        bitField0_ = (bitField0_ & ~0x00004000);
        peakMotion_ = 0;
        onChanged();
        return this;
      }

      private int intStat_ ;
      /**
       * <code>optional fixed32 intStat = 16;</code>
       *
       * <pre>
       * bit:0 
       * </pre>
       */
      public boolean hasIntStat() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional fixed32 intStat = 16;</code>
       *
       * <pre>
       * bit:0 
       * </pre>
       */
      public int getIntStat() {
        return intStat_;
      }
      /**
       * <code>optional fixed32 intStat = 16;</code>
       *
       * <pre>
       * bit:0 
       * </pre>
       */
      public Builder setIntStat(int value) {
        bitField0_ |= 0x00008000;
        intStat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 intStat = 16;</code>
       *
       * <pre>
       * bit:0 
       * </pre>
       */
      public Builder clearIntStat() {
        bitField0_ = (bitField0_ & ~0x00008000);
        intStat_ = 0;
        onChanged();
        return this;
      }

      private RegiMap accRegMapArray_ = RegiMap.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          RegiMap, RegiMap.Builder, RegiMapOrBuilder> accRegMapArrayBuilder_;
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public boolean hasAccRegMapArray() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public RegiMap getAccRegMapArray() {
        if (accRegMapArrayBuilder_ == null) {
          return accRegMapArray_;
        } else {
          return accRegMapArrayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public Builder setAccRegMapArray(RegiMap value) {
        if (accRegMapArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accRegMapArray_ = value;
          onChanged();
        } else {
          accRegMapArrayBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public Builder setAccRegMapArray(
          RegiMap.Builder builderForValue) {
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArray_ = builderForValue.build();
          onChanged();
        } else {
          accRegMapArrayBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public Builder mergeAccRegMapArray(RegiMap value) {
        if (accRegMapArrayBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              accRegMapArray_ != RegiMap.getDefaultInstance()) {
            accRegMapArray_ =
              RegiMap.newBuilder(accRegMapArray_).mergeFrom(value).buildPartial();
          } else {
            accRegMapArray_ = value;
          }
          onChanged();
        } else {
          accRegMapArrayBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public Builder clearAccRegMapArray() {
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArray_ = RegiMap.getDefaultInstance();
          onChanged();
        } else {
          accRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public RegiMap.Builder getAccRegMapArrayBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getAccRegMapArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      public RegiMapOrBuilder getAccRegMapArrayOrBuilder() {
        if (accRegMapArrayBuilder_ != null) {
          return accRegMapArrayBuilder_.getMessageOrBuilder();
        } else {
          return accRegMapArray_;
        }
      }
      /**
       * <code>optional .RegiMap accRegMap_array = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          RegiMap, RegiMap.Builder, RegiMapOrBuilder>
          getAccRegMapArrayFieldBuilder() {
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              RegiMap, RegiMap.Builder, RegiMapOrBuilder>(
                  getAccRegMapArray(),
                  getParentForChildren(),
                  isClean());
          accRegMapArray_ = null;
        }
        return accRegMapArrayBuilder_;
      }

      private RegiMap gyrRegMapArray_ = RegiMap.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          RegiMap, RegiMap.Builder, RegiMapOrBuilder> gyrRegMapArrayBuilder_;
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public boolean hasGyrRegMapArray() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public RegiMap getGyrRegMapArray() {
        if (gyrRegMapArrayBuilder_ == null) {
          return gyrRegMapArray_;
        } else {
          return gyrRegMapArrayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public Builder setGyrRegMapArray(RegiMap value) {
        if (gyrRegMapArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gyrRegMapArray_ = value;
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public Builder setGyrRegMapArray(
          RegiMap.Builder builderForValue) {
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArray_ = builderForValue.build();
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public Builder mergeGyrRegMapArray(RegiMap value) {
        if (gyrRegMapArrayBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              gyrRegMapArray_ != RegiMap.getDefaultInstance()) {
            gyrRegMapArray_ =
              RegiMap.newBuilder(gyrRegMapArray_).mergeFrom(value).buildPartial();
          } else {
            gyrRegMapArray_ = value;
          }
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public Builder clearGyrRegMapArray() {
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArray_ = RegiMap.getDefaultInstance();
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public RegiMap.Builder getGyrRegMapArrayBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getGyrRegMapArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      public RegiMapOrBuilder getGyrRegMapArrayOrBuilder() {
        if (gyrRegMapArrayBuilder_ != null) {
          return gyrRegMapArrayBuilder_.getMessageOrBuilder();
        } else {
          return gyrRegMapArray_;
        }
      }
      /**
       * <code>optional .RegiMap gyrRegMap_array = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          RegiMap, RegiMap.Builder, RegiMapOrBuilder>
          getGyrRegMapArrayFieldBuilder() {
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              RegiMap, RegiMap.Builder, RegiMapOrBuilder>(
                  getGyrRegMapArray(),
                  getParentForChildren(),
                  isClean());
          gyrRegMapArray_ = null;
        }
        return gyrRegMapArrayBuilder_;
      }

      private RegiMap magRegMapArray_ = RegiMap.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          RegiMap, RegiMap.Builder, RegiMapOrBuilder> magRegMapArrayBuilder_;
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public boolean hasMagRegMapArray() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public RegiMap getMagRegMapArray() {
        if (magRegMapArrayBuilder_ == null) {
          return magRegMapArray_;
        } else {
          return magRegMapArrayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public Builder setMagRegMapArray(RegiMap value) {
        if (magRegMapArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          magRegMapArray_ = value;
          onChanged();
        } else {
          magRegMapArrayBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public Builder setMagRegMapArray(
          RegiMap.Builder builderForValue) {
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArray_ = builderForValue.build();
          onChanged();
        } else {
          magRegMapArrayBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public Builder mergeMagRegMapArray(RegiMap value) {
        if (magRegMapArrayBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              magRegMapArray_ != RegiMap.getDefaultInstance()) {
            magRegMapArray_ =
              RegiMap.newBuilder(magRegMapArray_).mergeFrom(value).buildPartial();
          } else {
            magRegMapArray_ = value;
          }
          onChanged();
        } else {
          magRegMapArrayBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public Builder clearMagRegMapArray() {
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArray_ = RegiMap.getDefaultInstance();
          onChanged();
        } else {
          magRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public RegiMap.Builder getMagRegMapArrayBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getMagRegMapArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      public RegiMapOrBuilder getMagRegMapArrayOrBuilder() {
        if (magRegMapArrayBuilder_ != null) {
          return magRegMapArrayBuilder_.getMessageOrBuilder();
        } else {
          return magRegMapArray_;
        }
      }
      /**
       * <code>optional .RegiMap magRegMap_array = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          RegiMap, RegiMap.Builder, RegiMapOrBuilder>
          getMagRegMapArrayFieldBuilder() {
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              RegiMap, RegiMap.Builder, RegiMapOrBuilder>(
                  getMagRegMapArray(),
                  getParentForChildren(),
                  isClean());
          magRegMapArray_ = null;
        }
        return magRegMapArrayBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:StnEggPacket)
    }

    static {
      defaultInstance = new StnEggPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StnEggPacket)
  }

  public interface Float4OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Float4)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float f1 = 1;</code>
     */
    boolean hasF1();
    /**
     * <code>required float f1 = 1;</code>
     */
    float getF1();

    /**
     * <code>required float f2 = 2;</code>
     */
    boolean hasF2();
    /**
     * <code>required float f2 = 2;</code>
     */
    float getF2();

    /**
     * <code>required float f3 = 3;</code>
     */
    boolean hasF3();
    /**
     * <code>required float f3 = 3;</code>
     */
    float getF3();

    /**
     * <code>required float f4 = 4;</code>
     */
    boolean hasF4();
    /**
     * <code>required float f4 = 4;</code>
     */
    float getF4();
  }
  /**
   * Protobuf type {@code Float4}
   */
  public static final class Float4 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Float4)
      Float4OrBuilder {
    // Use Float4.newBuilder() to construct.
    private Float4(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Float4(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Float4 defaultInstance;
    public static Float4 getDefaultInstance() {
      return defaultInstance;
    }

    public Float4 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Float4(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              f1_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              f2_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              f3_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              f4_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StnPacket.internal_static_Float4_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StnPacket.internal_static_Float4_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Float4.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Float4> PARSER =
        new com.google.protobuf.AbstractParser<Float4>() {
      public Float4 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Float4(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Float4> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int F1_FIELD_NUMBER = 1;
    private float f1_;
    /**
     * <code>required float f1 = 1;</code>
     */
    public boolean hasF1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float f1 = 1;</code>
     */
    public float getF1() {
      return f1_;
    }

    public static final int F2_FIELD_NUMBER = 2;
    private float f2_;
    /**
     * <code>required float f2 = 2;</code>
     */
    public boolean hasF2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float f2 = 2;</code>
     */
    public float getF2() {
      return f2_;
    }

    public static final int F3_FIELD_NUMBER = 3;
    private float f3_;
    /**
     * <code>required float f3 = 3;</code>
     */
    public boolean hasF3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float f3 = 3;</code>
     */
    public float getF3() {
      return f3_;
    }

    public static final int F4_FIELD_NUMBER = 4;
    private float f4_;
    /**
     * <code>required float f4 = 4;</code>
     */
    public boolean hasF4() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float f4 = 4;</code>
     */
    public float getF4() {
      return f4_;
    }

    private void initFields() {
      f1_ = 0F;
      f2_ = 0F;
      f3_ = 0F;
      f4_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasF1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, f3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, f4_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, f3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, f4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Float4 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Float4 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Float4 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Float4 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Float4 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Float4 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Float4 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Float4 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Float4 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Float4 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Float4 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Float4}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Float4)
        Float4OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return StnPacket.internal_static_Float4_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return StnPacket.internal_static_Float4_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Float4.class, Builder.class);
      }

      // Construct using demo.sensors.se.com.ssdemo.StnPacket.Float4.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        f1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        f2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        f3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        f4_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return StnPacket.internal_static_Float4_descriptor;
      }

      public Float4 getDefaultInstanceForType() {
        return Float4.getDefaultInstance();
      }

      public Float4 build() {
        Float4 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Float4 buildPartial() {
        Float4 result = new Float4(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.f1_ = f1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.f2_ = f2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.f3_ = f3_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.f4_ = f4_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Float4) {
          return mergeFrom((Float4)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Float4 other) {
        if (other == Float4.getDefaultInstance()) return this;
        if (other.hasF1()) {
          setF1(other.getF1());
        }
        if (other.hasF2()) {
          setF2(other.getF2());
        }
        if (other.hasF3()) {
          setF3(other.getF3());
        }
        if (other.hasF4()) {
          setF4(other.getF4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasF1()) {
          
          return false;
        }
        if (!hasF2()) {
          
          return false;
        }
        if (!hasF3()) {
          
          return false;
        }
        if (!hasF4()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Float4 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Float4) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float f1_ ;
      /**
       * <code>required float f1 = 1;</code>
       */
      public boolean hasF1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public float getF1() {
        return f1_;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder setF1(float value) {
        bitField0_ |= 0x00000001;
        f1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder clearF1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        f1_ = 0F;
        onChanged();
        return this;
      }

      private float f2_ ;
      /**
       * <code>required float f2 = 2;</code>
       */
      public boolean hasF2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public float getF2() {
        return f2_;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder setF2(float value) {
        bitField0_ |= 0x00000002;
        f2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder clearF2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        f2_ = 0F;
        onChanged();
        return this;
      }

      private float f3_ ;
      /**
       * <code>required float f3 = 3;</code>
       */
      public boolean hasF3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public float getF3() {
        return f3_;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder setF3(float value) {
        bitField0_ |= 0x00000004;
        f3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder clearF3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        f3_ = 0F;
        onChanged();
        return this;
      }

      private float f4_ ;
      /**
       * <code>required float f4 = 4;</code>
       */
      public boolean hasF4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float f4 = 4;</code>
       */
      public float getF4() {
        return f4_;
      }
      /**
       * <code>required float f4 = 4;</code>
       */
      public Builder setF4(float value) {
        bitField0_ |= 0x00000008;
        f4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f4 = 4;</code>
       */
      public Builder clearF4() {
        bitField0_ = (bitField0_ & ~0x00000008);
        f4_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Float4)
    }

    static {
      defaultInstance = new Float4(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Float4)
  }

  public interface Float3OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Float3)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float f1 = 1;</code>
     */
    boolean hasF1();
    /**
     * <code>required float f1 = 1;</code>
     */
    float getF1();

    /**
     * <code>required float f2 = 2;</code>
     */
    boolean hasF2();
    /**
     * <code>required float f2 = 2;</code>
     */
    float getF2();

    /**
     * <code>required float f3 = 3;</code>
     */
    boolean hasF3();
    /**
     * <code>required float f3 = 3;</code>
     */
    float getF3();
  }
  /**
   * Protobuf type {@code Float3}
   */
  public static final class Float3 extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Float3)
      Float3OrBuilder {
    // Use Float3.newBuilder() to construct.
    private Float3(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Float3(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Float3 defaultInstance;
    public static Float3 getDefaultInstance() {
      return defaultInstance;
    }

    public Float3 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Float3(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              f1_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              f2_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              f3_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StnPacket.internal_static_Float3_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StnPacket.internal_static_Float3_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Float3.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Float3> PARSER =
        new com.google.protobuf.AbstractParser<Float3>() {
      public Float3 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Float3(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Float3> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int F1_FIELD_NUMBER = 1;
    private float f1_;
    /**
     * <code>required float f1 = 1;</code>
     */
    public boolean hasF1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float f1 = 1;</code>
     */
    public float getF1() {
      return f1_;
    }

    public static final int F2_FIELD_NUMBER = 2;
    private float f2_;
    /**
     * <code>required float f2 = 2;</code>
     */
    public boolean hasF2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float f2 = 2;</code>
     */
    public float getF2() {
      return f2_;
    }

    public static final int F3_FIELD_NUMBER = 3;
    private float f3_;
    /**
     * <code>required float f3 = 3;</code>
     */
    public boolean hasF3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float f3 = 3;</code>
     */
    public float getF3() {
      return f3_;
    }

    private void initFields() {
      f1_ = 0F;
      f2_ = 0F;
      f3_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasF1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, f3_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, f3_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Float3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Float3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Float3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Float3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Float3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Float3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Float3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Float3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Float3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Float3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Float3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Float3}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Float3)
        Float3OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return StnPacket.internal_static_Float3_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return StnPacket.internal_static_Float3_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Float3.class, Builder.class);
      }

      // Construct using demo.sensors.se.com.ssdemo.StnPacket.Float3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        f1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        f2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        f3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return StnPacket.internal_static_Float3_descriptor;
      }

      public Float3 getDefaultInstanceForType() {
        return Float3.getDefaultInstance();
      }

      public Float3 build() {
        Float3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Float3 buildPartial() {
        Float3 result = new Float3(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.f1_ = f1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.f2_ = f2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.f3_ = f3_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Float3) {
          return mergeFrom((Float3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Float3 other) {
        if (other == Float3.getDefaultInstance()) return this;
        if (other.hasF1()) {
          setF1(other.getF1());
        }
        if (other.hasF2()) {
          setF2(other.getF2());
        }
        if (other.hasF3()) {
          setF3(other.getF3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasF1()) {
          
          return false;
        }
        if (!hasF2()) {
          
          return false;
        }
        if (!hasF3()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Float3 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Float3) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float f1_ ;
      /**
       * <code>required float f1 = 1;</code>
       */
      public boolean hasF1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public float getF1() {
        return f1_;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder setF1(float value) {
        bitField0_ |= 0x00000001;
        f1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder clearF1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        f1_ = 0F;
        onChanged();
        return this;
      }

      private float f2_ ;
      /**
       * <code>required float f2 = 2;</code>
       */
      public boolean hasF2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public float getF2() {
        return f2_;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder setF2(float value) {
        bitField0_ |= 0x00000002;
        f2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder clearF2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        f2_ = 0F;
        onChanged();
        return this;
      }

      private float f3_ ;
      /**
       * <code>required float f3 = 3;</code>
       */
      public boolean hasF3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public float getF3() {
        return f3_;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder setF3(float value) {
        bitField0_ |= 0x00000004;
        f3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder clearF3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        f3_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Float3)
    }

    static {
      defaultInstance = new Float3(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Float3)
  }

  public interface RegiMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RegiMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated fixed32 data_byte = 1;</code>
     */
    java.util.List<Integer> getDataByteList();
    /**
     * <code>repeated fixed32 data_byte = 1;</code>
     */
    int getDataByteCount();
    /**
     * <code>repeated fixed32 data_byte = 1;</code>
     */
    int getDataByte(int index);
  }
  /**
   * Protobuf type {@code RegiMap}
   */
  public static final class RegiMap extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:RegiMap)
      RegiMapOrBuilder {
    // Use RegiMap.newBuilder() to construct.
    private RegiMap(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegiMap(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegiMap defaultInstance;
    public static RegiMap getDefaultInstance() {
      return defaultInstance;
    }

    public RegiMap getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegiMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dataByte_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              dataByte_.add(input.readFixed32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dataByte_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dataByte_.add(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dataByte_ = java.util.Collections.unmodifiableList(dataByte_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StnPacket.internal_static_RegiMap_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StnPacket.internal_static_RegiMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RegiMap.class, Builder.class);
    }

    public static com.google.protobuf.Parser<RegiMap> PARSER =
        new com.google.protobuf.AbstractParser<RegiMap>() {
      public RegiMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegiMap(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<RegiMap> getParserForType() {
      return PARSER;
    }

    public static final int DATA_BYTE_FIELD_NUMBER = 1;
    private java.util.List<Integer> dataByte_;
    /**
     * <code>repeated fixed32 data_byte = 1;</code>
     */
    public java.util.List<Integer>
        getDataByteList() {
      return dataByte_;
    }
    /**
     * <code>repeated fixed32 data_byte = 1;</code>
     */
    public int getDataByteCount() {
      return dataByte_.size();
    }
    /**
     * <code>repeated fixed32 data_byte = 1;</code>
     */
    public int getDataByte(int index) {
      return dataByte_.get(index);
    }

    private void initFields() {
      dataByte_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < dataByte_.size(); i++) {
        output.writeFixed32(1, dataByte_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getDataByteList().size();
        size += dataSize;
        size += 1 * getDataByteList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static RegiMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegiMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegiMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegiMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegiMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RegiMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static RegiMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static RegiMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static RegiMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RegiMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RegiMap prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RegiMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RegiMap)
        RegiMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return StnPacket.internal_static_RegiMap_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return StnPacket.internal_static_RegiMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RegiMap.class, Builder.class);
      }

      // Construct using demo.sensors.se.com.ssdemo.StnPacket.RegiMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dataByte_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return StnPacket.internal_static_RegiMap_descriptor;
      }

      public RegiMap getDefaultInstanceForType() {
        return RegiMap.getDefaultInstance();
      }

      public RegiMap build() {
        RegiMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RegiMap buildPartial() {
        RegiMap result = new RegiMap(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dataByte_ = java.util.Collections.unmodifiableList(dataByte_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dataByte_ = dataByte_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RegiMap) {
          return mergeFrom((RegiMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RegiMap other) {
        if (other == RegiMap.getDefaultInstance()) return this;
        if (!other.dataByte_.isEmpty()) {
          if (dataByte_.isEmpty()) {
            dataByte_ = other.dataByte_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDataByteIsMutable();
            dataByte_.addAll(other.dataByte_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RegiMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RegiMap) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Integer> dataByte_ = java.util.Collections.emptyList();
      private void ensureDataByteIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dataByte_ = new java.util.ArrayList<Integer>(dataByte_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public java.util.List<Integer>
          getDataByteList() {
        return java.util.Collections.unmodifiableList(dataByte_);
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public int getDataByteCount() {
        return dataByte_.size();
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public int getDataByte(int index) {
        return dataByte_.get(index);
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public Builder setDataByte(
          int index, int value) {
        ensureDataByteIsMutable();
        dataByte_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public Builder addDataByte(int value) {
        ensureDataByteIsMutable();
        dataByte_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public Builder addAllDataByte(
          Iterable<? extends Integer> values) {
        ensureDataByteIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataByte_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 data_byte = 1;</code>
       */
      public Builder clearDataByte() {
        dataByte_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RegiMap)
    }

    static {
      defaultInstance = new RegiMap(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RegiMap)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_StnEggPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StnEggPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Float4_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Float4_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Float3_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Float3_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RegiMap_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RegiMap_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017stnEggPkt.proto\"\205\004\n\014StnEggPacket\022\014\n\004si" +
      "ze\030\001 \001(\007\022\r\n\005seqNo\030\002 \002(\007\022\021\n\ttimeStamp\030\003 \001" +
      "(\007\022\031\n\010accRAW_g\030\004 \001(\0132\007.Float3\022\033\n\ngyrRAW_" +
      "dps\030\005 \001(\0132\007.Float3\022\032\n\tmagRAW_uT\030\006 \001(\0132\007." +
      "Float3\022\"\n\021Kalman_9AXIS_quat\030\007 \001(\0132\007.Floa" +
      "t4\022%\n\024Kalman_6AXIS_AG_quat\030\010 \001(\0132\007.Float" +
      "4\022\033\n\nVGYRO_quat\030\t \001(\0132\007.Float4\022 \n\017VGYRO_" +
      "Speed_rps\030\n \001(\0132\007.Float3\022\036\n\rMouse3D_eule" +
      "r\030\013 \001(\0132\007.Float3\022\033\n\023magOritentation_deg\030" +
      "\014 \001(\002\022\016\n\006motion\030\r \001(\007\022\014\n\004peak\030\016 \001(\007\022\022\n\np",
      "eakMotion\030\017 \001(\007\022\017\n\007intStat\030\020 \001(\007\022!\n\017accR" +
      "egMap_array\030\021 \001(\0132\010.RegiMap\022!\n\017gyrRegMap" +
      "_array\030\022 \001(\0132\010.RegiMap\022!\n\017magRegMap_arra" +
      "y\030\023 \001(\0132\010.RegiMap\"8\n\006Float4\022\n\n\002f1\030\001 \002(\002\022" +
      "\n\n\002f2\030\002 \002(\002\022\n\n\002f3\030\003 \002(\002\022\n\n\002f4\030\004 \002(\002\",\n\006F" +
      "loat3\022\n\n\002f1\030\001 \002(\002\022\n\n\002f2\030\002 \002(\002\022\n\n\002f3\030\003 \002(" +
      "\002\"\034\n\007RegiMap\022\021\n\tdata_byte\030\001 \003(\007B\'\n\032demo." +
      "sensors.se.com.ssdemoB\tStnPacket"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_StnEggPacket_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_StnEggPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_StnEggPacket_descriptor,
        new String[] { "Size", "SeqNo", "TimeStamp", "AccRAWG", "GyrRAWDps", "MagRAWUT", "Kalman9AXISQuat", "Kalman6AXISAGQuat", "VGYROQuat", "VGYROSpeedRps", "Mouse3DEuler", "MagOritentationDeg", "Motion", "Peak", "PeakMotion", "IntStat", "AccRegMapArray", "GyrRegMapArray", "MagRegMapArray", });
    internal_static_Float4_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Float4_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Float4_descriptor,
        new String[] { "F1", "F2", "F3", "F4", });
    internal_static_Float3_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Float3_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Float3_descriptor,
        new String[] { "F1", "F2", "F3", });
    internal_static_RegiMap_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_RegiMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_RegiMap_descriptor,
        new String[] { "DataByte", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
