package com.standingegg.band.util;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stnEggPkt.proto

public final class StnEggPkt {
  private StnEggPkt() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface StnEggPacketOrBuilder extends
          // @@protoc_insertion_point(interface_extends:StnEggPacket)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>optional int32 size = 1;</code>
     */
    int getSize();

    /**
     * <code>optional int32 seqNo = 2;</code>
     */
    boolean hasSeqNo();
    /**
     * <code>optional int32 seqNo = 2;</code>
     */
    int getSeqNo();

    /**
     * <code>optional int32 timeStamp = 3;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>optional int32 timeStamp = 3;</code>
     */
    int getTimeStamp();

    /**
     * <code>optional .Float3 acceleroData_g = 4;</code>
     */
    boolean hasAcceleroDataG();
    /**
     * <code>optional .Float3 acceleroData_g = 4;</code>
     */
    StnEggPkt.Float3 getAcceleroDataG();
    /**
     * <code>optional .Float3 acceleroData_g = 4;</code>
     */
    StnEggPkt.Float3OrBuilder getAcceleroDataGOrBuilder();

    /**
     * <code>optional .Float3 gyroData_dps = 5;</code>
     */
    boolean hasGyroDataDps();
    /**
     * <code>optional .Float3 gyroData_dps = 5;</code>
     */
    StnEggPkt.Float3 getGyroDataDps();
    /**
     * <code>optional .Float3 gyroData_dps = 5;</code>
     */
    StnEggPkt.Float3OrBuilder getGyroDataDpsOrBuilder();

    /**
     * <code>optional .Float3 magData_uT = 6;</code>
     */
    boolean hasMagDataUT();
    /**
     * <code>optional .Float3 magData_uT = 6;</code>
     */
    StnEggPkt.Float3 getMagDataUT();
    /**
     * <code>optional .Float3 magData_uT = 6;</code>
     */
    StnEggPkt.Float3OrBuilder getMagDataUTOrBuilder();

    /**
     * <code>optional .Float4 kalman9Axes_quat = 7;</code>
     */
    boolean hasKalman9AxesQuat();
    /**
     * <code>optional .Float4 kalman9Axes_quat = 7;</code>
     */
    StnEggPkt.Float4 getKalman9AxesQuat();
    /**
     * <code>optional .Float4 kalman9Axes_quat = 7;</code>
     */
    StnEggPkt.Float4OrBuilder getKalman9AxesQuatOrBuilder();

    /**
     * <code>optional .Float4 kalman6Axes_quat = 8;</code>
     */
    boolean hasKalman6AxesQuat();
    /**
     * <code>optional .Float4 kalman6Axes_quat = 8;</code>
     */
    StnEggPkt.Float4 getKalman6AxesQuat();
    /**
     * <code>optional .Float4 kalman6Axes_quat = 8;</code>
     */
    StnEggPkt.Float4OrBuilder getKalman6AxesQuatOrBuilder();

    /**
     * <code>optional .Float4 virtualGyro_quat = 9;</code>
     */
    boolean hasVirtualGyroQuat();
    /**
     * <code>optional .Float4 virtualGyro_quat = 9;</code>
     */
    StnEggPkt.Float4 getVirtualGyroQuat();
    /**
     * <code>optional .Float4 virtualGyro_quat = 9;</code>
     */
    StnEggPkt.Float4OrBuilder getVirtualGyroQuatOrBuilder();

    /**
     * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
     */
    boolean hasVirtualGyroSpeedRps();
    /**
     * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
     */
    StnEggPkt.Float3 getVirtualGyroSpeedRps();
    /**
     * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
     */
    StnEggPkt.Float3OrBuilder getVirtualGyroSpeedRpsOrBuilder();

    /**
     * <code>optional .Float3 mouse3D_euler = 11;</code>
     */
    boolean hasMouse3DEuler();
    /**
     * <code>optional .Float3 mouse3D_euler = 11;</code>
     */
    StnEggPkt.Float3 getMouse3DEuler();
    /**
     * <code>optional .Float3 mouse3D_euler = 11;</code>
     */
    StnEggPkt.Float3OrBuilder getMouse3DEulerOrBuilder();

    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    boolean hasMagOritentationDeg();
    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    float getMagOritentationDeg();

    /**
     * <code>optional int32 motion = 13;</code>
     */
    boolean hasMotion();
    /**
     * <code>optional int32 motion = 13;</code>
     */
    int getMotion();

    /**
     * <code>optional int32 peakNumber = 14;</code>
     */
    boolean hasPeakNumber();
    /**
     * <code>optional int32 peakNumber = 14;</code>
     */
    int getPeakNumber();

    /**
     * <code>optional int32 peakMotion = 15;</code>
     */
    boolean hasPeakMotion();
    /**
     * <code>optional int32 peakMotion = 15;</code>
     */
    int getPeakMotion();

    /**
     * <code>optional int32 interruptStatistics = 16;</code>
     *
     * <pre>
     * bit:0
     * </pre>
     */
    boolean hasInterruptStatistics();
    /**
     * <code>optional int32 interruptStatistics = 16;</code>
     *
     * <pre>
     * bit:0
     * </pre>
     */
    int getInterruptStatistics();

    /**
     * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
     */
    boolean hasAccRegMapArray();
    /**
     * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
     */
    StnEggPkt.RegiMapAccelGyro getAccRegMapArray();
    /**
     * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
     */
    StnEggPkt.RegiMapAccelGyroOrBuilder getAccRegMapArrayOrBuilder();

    /**
     * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
     */
    boolean hasGyrRegMapArray();
    /**
     * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
     */
    StnEggPkt.RegiMapAccelGyro getGyrRegMapArray();
    /**
     * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
     */
    StnEggPkt.RegiMapAccelGyroOrBuilder getGyrRegMapArrayOrBuilder();

    /**
     * <code>optional .RegiMapMag magRegMap_array = 19;</code>
     */
    boolean hasMagRegMapArray();
    /**
     * <code>optional .RegiMapMag magRegMap_array = 19;</code>
     */
    StnEggPkt.RegiMapMag getMagRegMapArray();
    /**
     * <code>optional .RegiMapMag magRegMap_array = 19;</code>
     */
    StnEggPkt.RegiMapMagOrBuilder getMagRegMapArrayOrBuilder();

    /**
     * <code>optional int32 accTemp = 20;</code>
     */
    boolean hasAccTemp();
    /**
     * <code>optional int32 accTemp = 20;</code>
     */
    int getAccTemp();

    /**
     * <code>optional int32 gyrTemp = 21;</code>
     */
    boolean hasGyrTemp();
    /**
     * <code>optional int32 gyrTemp = 21;</code>
     */
    int getGyrTemp();

    /**
     * <code>optional int32 magTemp = 22;</code>
     */
    boolean hasMagTemp();
    /**
     * <code>optional int32 magTemp = 22;</code>
     */
    int getMagTemp();

    /**
     * <code>optional uint32 userUint01 = 23;</code>
     */
    boolean hasUserUint01();
    /**
     * <code>optional uint32 userUint01 = 23;</code>
     */
    int getUserUint01();

    /**
     * <code>optional uint32 userUint02 = 24;</code>
     */
    boolean hasUserUint02();
    /**
     * <code>optional uint32 userUint02 = 24;</code>
     */
    int getUserUint02();

    /**
     * <code>optional uint32 userUint03 = 25;</code>
     */
    boolean hasUserUint03();
    /**
     * <code>optional uint32 userUint03 = 25;</code>
     */
    int getUserUint03();

    /**
     * <code>optional uint32 userUint04 = 26;</code>
     */
    boolean hasUserUint04();
    /**
     * <code>optional uint32 userUint04 = 26;</code>
     */
    int getUserUint04();

    /**
     * <code>optional uint32 userUint05 = 27;</code>
     */
    boolean hasUserUint05();
    /**
     * <code>optional uint32 userUint05 = 27;</code>
     */
    int getUserUint05();

    /**
     * <code>optional uint32 userUint06 = 28;</code>
     */
    boolean hasUserUint06();
    /**
     * <code>optional uint32 userUint06 = 28;</code>
     */
    int getUserUint06();

    /**
     * <code>optional uint32 userUint07 = 29;</code>
     */
    boolean hasUserUint07();
    /**
     * <code>optional uint32 userUint07 = 29;</code>
     */
    int getUserUint07();

    /**
     * <code>optional uint32 userUint08 = 30;</code>
     */
    boolean hasUserUint08();
    /**
     * <code>optional uint32 userUint08 = 30;</code>
     */
    int getUserUint08();

    /**
     * <code>optional uint32 userUint09 = 31;</code>
     */
    boolean hasUserUint09();
    /**
     * <code>optional uint32 userUint09 = 31;</code>
     */
    int getUserUint09();

    /**
     * <code>optional uint32 userUint10 = 32;</code>
     */
    boolean hasUserUint10();
    /**
     * <code>optional uint32 userUint10 = 32;</code>
     */
    int getUserUint10();

    /**
     * <code>optional int32 userInt01 = 33;</code>
     */
    boolean hasUserInt01();
    /**
     * <code>optional int32 userInt01 = 33;</code>
     */
    int getUserInt01();

    /**
     * <code>optional int32 userInt02 = 34;</code>
     */
    boolean hasUserInt02();
    /**
     * <code>optional int32 userInt02 = 34;</code>
     */
    int getUserInt02();

    /**
     * <code>optional int32 userInt03 = 35;</code>
     */
    boolean hasUserInt03();
    /**
     * <code>optional int32 userInt03 = 35;</code>
     */
    int getUserInt03();

    /**
     * <code>optional int32 userInt04 = 36;</code>
     */
    boolean hasUserInt04();
    /**
     * <code>optional int32 userInt04 = 36;</code>
     */
    int getUserInt04();

    /**
     * <code>optional int32 userInt05 = 37;</code>
     */
    boolean hasUserInt05();
    /**
     * <code>optional int32 userInt05 = 37;</code>
     */
    int getUserInt05();

    /**
     * <code>optional int32 userInt06 = 38;</code>
     */
    boolean hasUserInt06();
    /**
     * <code>optional int32 userInt06 = 38;</code>
     */
    int getUserInt06();

    /**
     * <code>optional int32 userInt07 = 39;</code>
     */
    boolean hasUserInt07();
    /**
     * <code>optional int32 userInt07 = 39;</code>
     */
    int getUserInt07();

    /**
     * <code>optional int32 userInt08 = 40;</code>
     */
    boolean hasUserInt08();
    /**
     * <code>optional int32 userInt08 = 40;</code>
     */
    int getUserInt08();

    /**
     * <code>optional int32 userInt09 = 41;</code>
     */
    boolean hasUserInt09();
    /**
     * <code>optional int32 userInt09 = 41;</code>
     */
    int getUserInt09();

    /**
     * <code>optional int32 userInt10 = 42;</code>
     */
    boolean hasUserInt10();
    /**
     * <code>optional int32 userInt10 = 42;</code>
     */
    int getUserInt10();

    /**
     * <code>optional float userFloat01 = 43;</code>
     */
    boolean hasUserFloat01();
    /**
     * <code>optional float userFloat01 = 43;</code>
     */
    float getUserFloat01();

    /**
     * <code>optional float userFloat02 = 44;</code>
     */
    boolean hasUserFloat02();
    /**
     * <code>optional float userFloat02 = 44;</code>
     */
    float getUserFloat02();

    /**
     * <code>optional float userFloat03 = 45;</code>
     */
    boolean hasUserFloat03();
    /**
     * <code>optional float userFloat03 = 45;</code>
     */
    float getUserFloat03();

    /**
     * <code>optional float userFloat04 = 46;</code>
     */
    boolean hasUserFloat04();
    /**
     * <code>optional float userFloat04 = 46;</code>
     */
    float getUserFloat04();

    /**
     * <code>optional float userFloat05 = 47;</code>
     */
    boolean hasUserFloat05();
    /**
     * <code>optional float userFloat05 = 47;</code>
     */
    float getUserFloat05();

    /**
     * <code>optional float userFloat06 = 48;</code>
     */
    boolean hasUserFloat06();
    /**
     * <code>optional float userFloat06 = 48;</code>
     */
    float getUserFloat06();

    /**
     * <code>optional float userFloat07 = 49;</code>
     */
    boolean hasUserFloat07();
    /**
     * <code>optional float userFloat07 = 49;</code>
     */
    float getUserFloat07();

    /**
     * <code>optional float userFloat08 = 50;</code>
     */
    boolean hasUserFloat08();
    /**
     * <code>optional float userFloat08 = 50;</code>
     */
    float getUserFloat08();

    /**
     * <code>optional float userFloat09 = 51;</code>
     */
    boolean hasUserFloat09();
    /**
     * <code>optional float userFloat09 = 51;</code>
     */
    float getUserFloat09();

    /**
     * <code>optional float userFloat10 = 52;</code>
     */
    boolean hasUserFloat10();
    /**
     * <code>optional float userFloat10 = 52;</code>
     */
    float getUserFloat10();

    /**
     * <code>optional int32 gesture = 53;</code>
     */
    boolean hasGesture();
    /**
     * <code>optional int32 gesture = 53;</code>
     */
    int getGesture();

    /**
     * <code>optional int32 mouseClick = 54;</code>
     */
    boolean hasMouseClick();
    /**
     * <code>optional int32 mouseClick = 54;</code>
     */
    int getMouseClick();

    /**
     * <code>optional .Float3 gait_pos = 55;</code>
     */
    boolean hasGaitPos();
    /**
     * <code>optional .Float3 gait_pos = 55;</code>
     */
    StnEggPkt.Float3 getGaitPos();
    /**
     * <code>optional .Float3 gait_pos = 55;</code>
     */
    StnEggPkt.Float3OrBuilder getGaitPosOrBuilder();

    /**
     * <code>optional bool gait_zupt = 56;</code>
     */
    boolean hasGaitZupt();
    /**
     * <code>optional bool gait_zupt = 56;</code>
     */
    boolean getGaitZupt();

    /**
     * <code>optional int32 inputCommandWho = 57;</code>
     */
    boolean hasInputCommandWho();
    /**
     * <code>optional int32 inputCommandWho = 57;</code>
     */
    int getInputCommandWho();

    /**
     * <code>optional int32 inputCommandWhat = 58;</code>
     */
    boolean hasInputCommandWhat();
    /**
     * <code>optional int32 inputCommandWhat = 58;</code>
     */
    int getInputCommandWhat();

    /**
     * <code>optional int32 inputCommandValue = 59;</code>
     */
    boolean hasInputCommandValue();
    /**
     * <code>optional int32 inputCommandValue = 59;</code>
     */
    int getInputCommandValue();

    /**
     * <code>optional int32 sespFunctionalityType = 60;</code>
     */
    boolean hasSespFunctionalityType();
    /**
     * <code>optional int32 sespFunctionalityType = 60;</code>
     */
    int getSespFunctionalityType();

    /**
     * <code>optional int32 sespFrequency = 61;</code>
     */
    boolean hasSespFrequency();
    /**
     * <code>optional int32 sespFrequency = 61;</code>
     */
    int getSespFrequency();

    /**
     * <code>optional int32 sespUnit = 62;</code>
     */
    boolean hasSespUnit();
    /**
     * <code>optional int32 sespUnit = 62;</code>
     */
    int getSespUnit();

    /**
     * <code>optional int32 sespSentOutsideBoard = 63;</code>
     */
    boolean hasSespSentOutsideBoard();
    /**
     * <code>optional int32 sespSentOutsideBoard = 63;</code>
     */
    int getSespSentOutsideBoard();

    /**
     * <code>optional uint32 serpCommand = 64;</code>
     */
    boolean hasSerpCommand();
    /**
     * <code>optional uint32 serpCommand = 64;</code>
     */
    int getSerpCommand();

    /**
     * <code>optional .Gait gait = 65;</code>
     */
    boolean hasGait();
    /**
     * <code>optional .Gait gait = 65;</code>
     */
    StnEggPkt.Gait getGait();
    /**
     * <code>optional .Gait gait = 65;</code>
     */
    StnEggPkt.GaitOrBuilder getGaitOrBuilder();

    /**
     * <code>optional .Date date = 66;</code>
     */
    boolean hasDate();
    /**
     * <code>optional .Date date = 66;</code>
     */
    StnEggPkt.Date getDate();
    /**
     * <code>optional .Date date = 66;</code>
     */
    StnEggPkt.DateOrBuilder getDateOrBuilder();

    /**
     * <code>optional .Physique physique = 67;</code>
     */
    boolean hasPhysique();
    /**
     * <code>optional .Physique physique = 67;</code>
     */
    StnEggPkt.Physique getPhysique();
    /**
     * <code>optional .Physique physique = 67;</code>
     */
    StnEggPkt.PhysiqueOrBuilder getPhysiqueOrBuilder();

    /**
     * <code>optional int32 durationMinutes = 68;</code>
     */
    boolean hasDurationMinutes();
    /**
     * <code>optional int32 durationMinutes = 68;</code>
     */
    int getDurationMinutes();

    /**
     * <code>optional int32 calories = 69;</code>
     */
    boolean hasCalories();
    /**
     * <code>optional int32 calories = 69;</code>
     */
    int getCalories();

    /**
     * <code>optional int32 distanceMeters = 70;</code>
     */
    boolean hasDistanceMeters();
    /**
     * <code>optional int32 distanceMeters = 70;</code>
     */
    int getDistanceMeters();

    /**
     * <code>optional int32 ledColor = 71;</code>
     */
    boolean hasLedColor();
    /**
     * <code>optional int32 ledColor = 71;</code>
     */
    int getLedColor();

    /**
     * <code>optional int32 count = 72;</code>
     */
    boolean hasCount();
    /**
     * <code>optional int32 count = 72;</code>
     */
    int getCount();

    /**
     * <code>optional uint32 durationSeconds = 73;</code>
     */
    boolean hasDurationSeconds();
    /**
     * <code>optional uint32 durationSeconds = 73;</code>
     */
    int getDurationSeconds();

    /**
     * <code>optional uint32 hearthRate = 74;</code>
     */
    boolean hasHearthRate();
    /**
     * <code>optional uint32 hearthRate = 74;</code>
     */
    int getHearthRate();

    /**
     * <code>optional uint32 battery = 75;</code>
     */
    boolean hasBattery();
    /**
     * <code>optional uint32 battery = 75;</code>
     */
    int getBattery();
  }
  /**
   * Protobuf type {@code StnEggPacket}
   */
  public static final class StnEggPacket extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:StnEggPacket)
          StnEggPacketOrBuilder {
    // Use StnEggPacket.newBuilder() to construct.
    private StnEggPacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StnEggPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StnEggPacket defaultInstance;
    public static StnEggPacket getDefaultInstance() {
      return defaultInstance;
    }

    public StnEggPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StnEggPacket(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seqNo_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeStamp_ = input.readInt32();
              break;
            }
            case 34: {
              StnEggPkt.Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = acceleroDataG_.toBuilder();
              }
              acceleroDataG_ = input.readMessage(StnEggPkt.Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(acceleroDataG_);
                acceleroDataG_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              StnEggPkt.Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = gyroDataDps_.toBuilder();
              }
              gyroDataDps_ = input.readMessage(StnEggPkt.Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gyroDataDps_);
                gyroDataDps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              StnEggPkt.Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = magDataUT_.toBuilder();
              }
              magDataUT_ = input.readMessage(StnEggPkt.Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(magDataUT_);
                magDataUT_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              StnEggPkt.Float4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = kalman9AxesQuat_.toBuilder();
              }
              kalman9AxesQuat_ = input.readMessage(StnEggPkt.Float4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kalman9AxesQuat_);
                kalman9AxesQuat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              StnEggPkt.Float4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = kalman6AxesQuat_.toBuilder();
              }
              kalman6AxesQuat_ = input.readMessage(StnEggPkt.Float4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kalman6AxesQuat_);
                kalman6AxesQuat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              StnEggPkt.Float4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = virtualGyroQuat_.toBuilder();
              }
              virtualGyroQuat_ = input.readMessage(StnEggPkt.Float4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(virtualGyroQuat_);
                virtualGyroQuat_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              StnEggPkt.Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = virtualGyroSpeedRps_.toBuilder();
              }
              virtualGyroSpeedRps_ = input.readMessage(StnEggPkt.Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(virtualGyroSpeedRps_);
                virtualGyroSpeedRps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              StnEggPkt.Float3.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = mouse3DEuler_.toBuilder();
              }
              mouse3DEuler_ = input.readMessage(StnEggPkt.Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mouse3DEuler_);
                mouse3DEuler_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              magOritentationDeg_ = input.readFloat();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              motion_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              peakNumber_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              peakMotion_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              interruptStatistics_ = input.readInt32();
              break;
            }
            case 138: {
              StnEggPkt.RegiMapAccelGyro.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = accRegMapArray_.toBuilder();
              }
              accRegMapArray_ = input.readMessage(StnEggPkt.RegiMapAccelGyro.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accRegMapArray_);
                accRegMapArray_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 146: {
              StnEggPkt.RegiMapAccelGyro.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = gyrRegMapArray_.toBuilder();
              }
              gyrRegMapArray_ = input.readMessage(StnEggPkt.RegiMapAccelGyro.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gyrRegMapArray_);
                gyrRegMapArray_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 154: {
              StnEggPkt.RegiMapMag.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = magRegMapArray_.toBuilder();
              }
              magRegMapArray_ = input.readMessage(StnEggPkt.RegiMapMag.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(magRegMapArray_);
                magRegMapArray_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              accTemp_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              gyrTemp_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              magTemp_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              userUint01_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              userUint02_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              userUint03_ = input.readUInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              userUint04_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              userUint05_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              userUint06_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              userUint07_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              userUint08_ = input.readUInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              userUint09_ = input.readUInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              userUint10_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              userInt01_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              userInt02_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              userInt03_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              userInt04_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              userInt05_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              userInt06_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              userInt07_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              userInt08_ = input.readInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              userInt09_ = input.readInt32();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              userInt10_ = input.readInt32();
              break;
            }
            case 349: {
              bitField1_ |= 0x00000400;
              userFloat01_ = input.readFloat();
              break;
            }
            case 357: {
              bitField1_ |= 0x00000800;
              userFloat02_ = input.readFloat();
              break;
            }
            case 365: {
              bitField1_ |= 0x00001000;
              userFloat03_ = input.readFloat();
              break;
            }
            case 373: {
              bitField1_ |= 0x00002000;
              userFloat04_ = input.readFloat();
              break;
            }
            case 381: {
              bitField1_ |= 0x00004000;
              userFloat05_ = input.readFloat();
              break;
            }
            case 389: {
              bitField1_ |= 0x00008000;
              userFloat06_ = input.readFloat();
              break;
            }
            case 397: {
              bitField1_ |= 0x00010000;
              userFloat07_ = input.readFloat();
              break;
            }
            case 405: {
              bitField1_ |= 0x00020000;
              userFloat08_ = input.readFloat();
              break;
            }
            case 413: {
              bitField1_ |= 0x00040000;
              userFloat09_ = input.readFloat();
              break;
            }
            case 421: {
              bitField1_ |= 0x00080000;
              userFloat10_ = input.readFloat();
              break;
            }
            case 424: {
              bitField1_ |= 0x00100000;
              gesture_ = input.readInt32();
              break;
            }
            case 432: {
              bitField1_ |= 0x00200000;
              mouseClick_ = input.readInt32();
              break;
            }
            case 442: {
              StnEggPkt.Float3.Builder subBuilder = null;
              if (((bitField1_ & 0x00400000) == 0x00400000)) {
                subBuilder = gaitPos_.toBuilder();
              }
              gaitPos_ = input.readMessage(StnEggPkt.Float3.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gaitPos_);
                gaitPos_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00400000;
              break;
            }
            case 448: {
              bitField1_ |= 0x00800000;
              gaitZupt_ = input.readBool();
              break;
            }
            case 456: {
              bitField1_ |= 0x01000000;
              inputCommandWho_ = input.readInt32();
              break;
            }
            case 464: {
              bitField1_ |= 0x02000000;
              inputCommandWhat_ = input.readInt32();
              break;
            }
            case 472: {
              bitField1_ |= 0x04000000;
              inputCommandValue_ = input.readInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              sespFunctionalityType_ = input.readInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              sespFrequency_ = input.readInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              sespUnit_ = input.readInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x40000000;
              sespSentOutsideBoard_ = input.readInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              serpCommand_ = input.readUInt32();
              break;
            }
            case 522: {
              StnEggPkt.Gait.Builder subBuilder = null;
              if (((bitField2_ & 0x00000001) == 0x00000001)) {
                subBuilder = gait_.toBuilder();
              }
              gait_ = input.readMessage(StnEggPkt.Gait.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gait_);
                gait_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000001;
              break;
            }
            case 530: {
              StnEggPkt.Date.Builder subBuilder = null;
              if (((bitField2_ & 0x00000002) == 0x00000002)) {
                subBuilder = date_.toBuilder();
              }
              date_ = input.readMessage(StnEggPkt.Date.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(date_);
                date_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000002;
              break;
            }
            case 538: {
              StnEggPkt.Physique.Builder subBuilder = null;
              if (((bitField2_ & 0x00000004) == 0x00000004)) {
                subBuilder = physique_.toBuilder();
              }
              physique_ = input.readMessage(StnEggPkt.Physique.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(physique_);
                physique_ = subBuilder.buildPartial();
              }
              bitField2_ |= 0x00000004;
              break;
            }
            case 544: {
              bitField2_ |= 0x00000008;
              durationMinutes_ = input.readInt32();
              break;
            }
            case 552: {
              bitField2_ |= 0x00000010;
              calories_ = input.readInt32();
              break;
            }
            case 560: {
              bitField2_ |= 0x00000020;
              distanceMeters_ = input.readInt32();
              break;
            }
            case 568: {
              bitField2_ |= 0x00000040;
              ledColor_ = input.readInt32();
              break;
            }
            case 576: {
              bitField2_ |= 0x00000080;
              count_ = input.readInt32();
              break;
            }
            case 584: {
              bitField2_ |= 0x00000100;
              durationSeconds_ = input.readUInt32();
              break;
            }
            case 592: {
              bitField2_ |= 0x00000200;
              hearthRate_ = input.readUInt32();
              break;
            }
            case 600: {
              bitField2_ |= 0x00000400;
              battery_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_StnEggPacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_StnEggPacket_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.StnEggPacket.class, StnEggPkt.StnEggPacket.Builder.class);
    }

    public static com.google.protobuf.Parser<StnEggPacket> PARSER =
            new com.google.protobuf.AbstractParser<StnEggPacket>() {
              public StnEggPacket parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new StnEggPacket(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<StnEggPacket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int SIZE_FIELD_NUMBER = 1;
    private int size_;
    /**
     * <code>optional int32 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 size = 1;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int SEQNO_FIELD_NUMBER = 2;
    private int seqNo_;
    /**
     * <code>optional int32 seqNo = 2;</code>
     */
    public boolean hasSeqNo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seqNo = 2;</code>
     */
    public int getSeqNo() {
      return seqNo_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private int timeStamp_;
    /**
     * <code>optional int32 timeStamp = 3;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 timeStamp = 3;</code>
     */
    public int getTimeStamp() {
      return timeStamp_;
    }

    public static final int ACCELERODATA_G_FIELD_NUMBER = 4;
    private StnEggPkt.Float3 acceleroDataG_;
    /**
     * <code>optional .Float3 acceleroData_g = 4;</code>
     */
    public boolean hasAcceleroDataG() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Float3 acceleroData_g = 4;</code>
     */
    public StnEggPkt.Float3 getAcceleroDataG() {
      return acceleroDataG_;
    }
    /**
     * <code>optional .Float3 acceleroData_g = 4;</code>
     */
    public StnEggPkt.Float3OrBuilder getAcceleroDataGOrBuilder() {
      return acceleroDataG_;
    }

    public static final int GYRODATA_DPS_FIELD_NUMBER = 5;
    private StnEggPkt.Float3 gyroDataDps_;
    /**
     * <code>optional .Float3 gyroData_dps = 5;</code>
     */
    public boolean hasGyroDataDps() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .Float3 gyroData_dps = 5;</code>
     */
    public StnEggPkt.Float3 getGyroDataDps() {
      return gyroDataDps_;
    }
    /**
     * <code>optional .Float3 gyroData_dps = 5;</code>
     */
    public StnEggPkt.Float3OrBuilder getGyroDataDpsOrBuilder() {
      return gyroDataDps_;
    }

    public static final int MAGDATA_UT_FIELD_NUMBER = 6;
    private StnEggPkt.Float3 magDataUT_;
    /**
     * <code>optional .Float3 magData_uT = 6;</code>
     */
    public boolean hasMagDataUT() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .Float3 magData_uT = 6;</code>
     */
    public StnEggPkt.Float3 getMagDataUT() {
      return magDataUT_;
    }
    /**
     * <code>optional .Float3 magData_uT = 6;</code>
     */
    public StnEggPkt.Float3OrBuilder getMagDataUTOrBuilder() {
      return magDataUT_;
    }

    public static final int KALMAN9AXES_QUAT_FIELD_NUMBER = 7;
    private StnEggPkt.Float4 kalman9AxesQuat_;
    /**
     * <code>optional .Float4 kalman9Axes_quat = 7;</code>
     */
    public boolean hasKalman9AxesQuat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .Float4 kalman9Axes_quat = 7;</code>
     */
    public StnEggPkt.Float4 getKalman9AxesQuat() {
      return kalman9AxesQuat_;
    }
    /**
     * <code>optional .Float4 kalman9Axes_quat = 7;</code>
     */
    public StnEggPkt.Float4OrBuilder getKalman9AxesQuatOrBuilder() {
      return kalman9AxesQuat_;
    }

    public static final int KALMAN6AXES_QUAT_FIELD_NUMBER = 8;
    private StnEggPkt.Float4 kalman6AxesQuat_;
    /**
     * <code>optional .Float4 kalman6Axes_quat = 8;</code>
     */
    public boolean hasKalman6AxesQuat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .Float4 kalman6Axes_quat = 8;</code>
     */
    public StnEggPkt.Float4 getKalman6AxesQuat() {
      return kalman6AxesQuat_;
    }
    /**
     * <code>optional .Float4 kalman6Axes_quat = 8;</code>
     */
    public StnEggPkt.Float4OrBuilder getKalman6AxesQuatOrBuilder() {
      return kalman6AxesQuat_;
    }

    public static final int VIRTUALGYRO_QUAT_FIELD_NUMBER = 9;
    private StnEggPkt.Float4 virtualGyroQuat_;
    /**
     * <code>optional .Float4 virtualGyro_quat = 9;</code>
     */
    public boolean hasVirtualGyroQuat() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .Float4 virtualGyro_quat = 9;</code>
     */
    public StnEggPkt.Float4 getVirtualGyroQuat() {
      return virtualGyroQuat_;
    }
    /**
     * <code>optional .Float4 virtualGyro_quat = 9;</code>
     */
    public StnEggPkt.Float4OrBuilder getVirtualGyroQuatOrBuilder() {
      return virtualGyroQuat_;
    }

    public static final int VIRTUALGYRO_SPEED_RPS_FIELD_NUMBER = 10;
    private StnEggPkt.Float3 virtualGyroSpeedRps_;
    /**
     * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
     */
    public boolean hasVirtualGyroSpeedRps() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
     */
    public StnEggPkt.Float3 getVirtualGyroSpeedRps() {
      return virtualGyroSpeedRps_;
    }
    /**
     * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
     */
    public StnEggPkt.Float3OrBuilder getVirtualGyroSpeedRpsOrBuilder() {
      return virtualGyroSpeedRps_;
    }

    public static final int MOUSE3D_EULER_FIELD_NUMBER = 11;
    private StnEggPkt.Float3 mouse3DEuler_;
    /**
     * <code>optional .Float3 mouse3D_euler = 11;</code>
     */
    public boolean hasMouse3DEuler() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .Float3 mouse3D_euler = 11;</code>
     */
    public StnEggPkt.Float3 getMouse3DEuler() {
      return mouse3DEuler_;
    }
    /**
     * <code>optional .Float3 mouse3D_euler = 11;</code>
     */
    public StnEggPkt.Float3OrBuilder getMouse3DEulerOrBuilder() {
      return mouse3DEuler_;
    }

    public static final int MAGORITENTATION_DEG_FIELD_NUMBER = 12;
    private float magOritentationDeg_;
    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    public boolean hasMagOritentationDeg() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float magOritentation_deg = 12;</code>
     */
    public float getMagOritentationDeg() {
      return magOritentationDeg_;
    }

    public static final int MOTION_FIELD_NUMBER = 13;
    private int motion_;
    /**
     * <code>optional int32 motion = 13;</code>
     */
    public boolean hasMotion() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 motion = 13;</code>
     */
    public int getMotion() {
      return motion_;
    }

    public static final int PEAKNUMBER_FIELD_NUMBER = 14;
    private int peakNumber_;
    /**
     * <code>optional int32 peakNumber = 14;</code>
     */
    public boolean hasPeakNumber() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 peakNumber = 14;</code>
     */
    public int getPeakNumber() {
      return peakNumber_;
    }

    public static final int PEAKMOTION_FIELD_NUMBER = 15;
    private int peakMotion_;
    /**
     * <code>optional int32 peakMotion = 15;</code>
     */
    public boolean hasPeakMotion() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 peakMotion = 15;</code>
     */
    public int getPeakMotion() {
      return peakMotion_;
    }

    public static final int INTERRUPTSTATISTICS_FIELD_NUMBER = 16;
    private int interruptStatistics_;
    /**
     * <code>optional int32 interruptStatistics = 16;</code>
     *
     * <pre>
     * bit:0
     * </pre>
     */
    public boolean hasInterruptStatistics() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 interruptStatistics = 16;</code>
     *
     * <pre>
     * bit:0
     * </pre>
     */
    public int getInterruptStatistics() {
      return interruptStatistics_;
    }

    public static final int ACCREGMAP_ARRAY_FIELD_NUMBER = 17;
    private StnEggPkt.RegiMapAccelGyro accRegMapArray_;
    /**
     * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
     */
    public boolean hasAccRegMapArray() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
     */
    public StnEggPkt.RegiMapAccelGyro getAccRegMapArray() {
      return accRegMapArray_;
    }
    /**
     * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
     */
    public StnEggPkt.RegiMapAccelGyroOrBuilder getAccRegMapArrayOrBuilder() {
      return accRegMapArray_;
    }

    public static final int GYRREGMAP_ARRAY_FIELD_NUMBER = 18;
    private StnEggPkt.RegiMapAccelGyro gyrRegMapArray_;
    /**
     * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
     */
    public boolean hasGyrRegMapArray() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
     */
    public StnEggPkt.RegiMapAccelGyro getGyrRegMapArray() {
      return gyrRegMapArray_;
    }
    /**
     * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
     */
    public StnEggPkt.RegiMapAccelGyroOrBuilder getGyrRegMapArrayOrBuilder() {
      return gyrRegMapArray_;
    }

    public static final int MAGREGMAP_ARRAY_FIELD_NUMBER = 19;
    private StnEggPkt.RegiMapMag magRegMapArray_;
    /**
     * <code>optional .RegiMapMag magRegMap_array = 19;</code>
     */
    public boolean hasMagRegMapArray() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .RegiMapMag magRegMap_array = 19;</code>
     */
    public StnEggPkt.RegiMapMag getMagRegMapArray() {
      return magRegMapArray_;
    }
    /**
     * <code>optional .RegiMapMag magRegMap_array = 19;</code>
     */
    public StnEggPkt.RegiMapMagOrBuilder getMagRegMapArrayOrBuilder() {
      return magRegMapArray_;
    }

    public static final int ACCTEMP_FIELD_NUMBER = 20;
    private int accTemp_;
    /**
     * <code>optional int32 accTemp = 20;</code>
     */
    public boolean hasAccTemp() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 accTemp = 20;</code>
     */
    public int getAccTemp() {
      return accTemp_;
    }

    public static final int GYRTEMP_FIELD_NUMBER = 21;
    private int gyrTemp_;
    /**
     * <code>optional int32 gyrTemp = 21;</code>
     */
    public boolean hasGyrTemp() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 gyrTemp = 21;</code>
     */
    public int getGyrTemp() {
      return gyrTemp_;
    }

    public static final int MAGTEMP_FIELD_NUMBER = 22;
    private int magTemp_;
    /**
     * <code>optional int32 magTemp = 22;</code>
     */
    public boolean hasMagTemp() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 magTemp = 22;</code>
     */
    public int getMagTemp() {
      return magTemp_;
    }

    public static final int USERUINT01_FIELD_NUMBER = 23;
    private int userUint01_;
    /**
     * <code>optional uint32 userUint01 = 23;</code>
     */
    public boolean hasUserUint01() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 userUint01 = 23;</code>
     */
    public int getUserUint01() {
      return userUint01_;
    }

    public static final int USERUINT02_FIELD_NUMBER = 24;
    private int userUint02_;
    /**
     * <code>optional uint32 userUint02 = 24;</code>
     */
    public boolean hasUserUint02() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint32 userUint02 = 24;</code>
     */
    public int getUserUint02() {
      return userUint02_;
    }

    public static final int USERUINT03_FIELD_NUMBER = 25;
    private int userUint03_;
    /**
     * <code>optional uint32 userUint03 = 25;</code>
     */
    public boolean hasUserUint03() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional uint32 userUint03 = 25;</code>
     */
    public int getUserUint03() {
      return userUint03_;
    }

    public static final int USERUINT04_FIELD_NUMBER = 26;
    private int userUint04_;
    /**
     * <code>optional uint32 userUint04 = 26;</code>
     */
    public boolean hasUserUint04() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 userUint04 = 26;</code>
     */
    public int getUserUint04() {
      return userUint04_;
    }

    public static final int USERUINT05_FIELD_NUMBER = 27;
    private int userUint05_;
    /**
     * <code>optional uint32 userUint05 = 27;</code>
     */
    public boolean hasUserUint05() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 userUint05 = 27;</code>
     */
    public int getUserUint05() {
      return userUint05_;
    }

    public static final int USERUINT06_FIELD_NUMBER = 28;
    private int userUint06_;
    /**
     * <code>optional uint32 userUint06 = 28;</code>
     */
    public boolean hasUserUint06() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 userUint06 = 28;</code>
     */
    public int getUserUint06() {
      return userUint06_;
    }

    public static final int USERUINT07_FIELD_NUMBER = 29;
    private int userUint07_;
    /**
     * <code>optional uint32 userUint07 = 29;</code>
     */
    public boolean hasUserUint07() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 userUint07 = 29;</code>
     */
    public int getUserUint07() {
      return userUint07_;
    }

    public static final int USERUINT08_FIELD_NUMBER = 30;
    private int userUint08_;
    /**
     * <code>optional uint32 userUint08 = 30;</code>
     */
    public boolean hasUserUint08() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint32 userUint08 = 30;</code>
     */
    public int getUserUint08() {
      return userUint08_;
    }

    public static final int USERUINT09_FIELD_NUMBER = 31;
    private int userUint09_;
    /**
     * <code>optional uint32 userUint09 = 31;</code>
     */
    public boolean hasUserUint09() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint32 userUint09 = 31;</code>
     */
    public int getUserUint09() {
      return userUint09_;
    }

    public static final int USERUINT10_FIELD_NUMBER = 32;
    private int userUint10_;
    /**
     * <code>optional uint32 userUint10 = 32;</code>
     */
    public boolean hasUserUint10() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 userUint10 = 32;</code>
     */
    public int getUserUint10() {
      return userUint10_;
    }

    public static final int USERINT01_FIELD_NUMBER = 33;
    private int userInt01_;
    /**
     * <code>optional int32 userInt01 = 33;</code>
     */
    public boolean hasUserInt01() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 userInt01 = 33;</code>
     */
    public int getUserInt01() {
      return userInt01_;
    }

    public static final int USERINT02_FIELD_NUMBER = 34;
    private int userInt02_;
    /**
     * <code>optional int32 userInt02 = 34;</code>
     */
    public boolean hasUserInt02() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 userInt02 = 34;</code>
     */
    public int getUserInt02() {
      return userInt02_;
    }

    public static final int USERINT03_FIELD_NUMBER = 35;
    private int userInt03_;
    /**
     * <code>optional int32 userInt03 = 35;</code>
     */
    public boolean hasUserInt03() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 userInt03 = 35;</code>
     */
    public int getUserInt03() {
      return userInt03_;
    }

    public static final int USERINT04_FIELD_NUMBER = 36;
    private int userInt04_;
    /**
     * <code>optional int32 userInt04 = 36;</code>
     */
    public boolean hasUserInt04() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 userInt04 = 36;</code>
     */
    public int getUserInt04() {
      return userInt04_;
    }

    public static final int USERINT05_FIELD_NUMBER = 37;
    private int userInt05_;
    /**
     * <code>optional int32 userInt05 = 37;</code>
     */
    public boolean hasUserInt05() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 userInt05 = 37;</code>
     */
    public int getUserInt05() {
      return userInt05_;
    }

    public static final int USERINT06_FIELD_NUMBER = 38;
    private int userInt06_;
    /**
     * <code>optional int32 userInt06 = 38;</code>
     */
    public boolean hasUserInt06() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 userInt06 = 38;</code>
     */
    public int getUserInt06() {
      return userInt06_;
    }

    public static final int USERINT07_FIELD_NUMBER = 39;
    private int userInt07_;
    /**
     * <code>optional int32 userInt07 = 39;</code>
     */
    public boolean hasUserInt07() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 userInt07 = 39;</code>
     */
    public int getUserInt07() {
      return userInt07_;
    }

    public static final int USERINT08_FIELD_NUMBER = 40;
    private int userInt08_;
    /**
     * <code>optional int32 userInt08 = 40;</code>
     */
    public boolean hasUserInt08() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 userInt08 = 40;</code>
     */
    public int getUserInt08() {
      return userInt08_;
    }

    public static final int USERINT09_FIELD_NUMBER = 41;
    private int userInt09_;
    /**
     * <code>optional int32 userInt09 = 41;</code>
     */
    public boolean hasUserInt09() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 userInt09 = 41;</code>
     */
    public int getUserInt09() {
      return userInt09_;
    }

    public static final int USERINT10_FIELD_NUMBER = 42;
    private int userInt10_;
    /**
     * <code>optional int32 userInt10 = 42;</code>
     */
    public boolean hasUserInt10() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 userInt10 = 42;</code>
     */
    public int getUserInt10() {
      return userInt10_;
    }

    public static final int USERFLOAT01_FIELD_NUMBER = 43;
    private float userFloat01_;
    /**
     * <code>optional float userFloat01 = 43;</code>
     */
    public boolean hasUserFloat01() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float userFloat01 = 43;</code>
     */
    public float getUserFloat01() {
      return userFloat01_;
    }

    public static final int USERFLOAT02_FIELD_NUMBER = 44;
    private float userFloat02_;
    /**
     * <code>optional float userFloat02 = 44;</code>
     */
    public boolean hasUserFloat02() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float userFloat02 = 44;</code>
     */
    public float getUserFloat02() {
      return userFloat02_;
    }

    public static final int USERFLOAT03_FIELD_NUMBER = 45;
    private float userFloat03_;
    /**
     * <code>optional float userFloat03 = 45;</code>
     */
    public boolean hasUserFloat03() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float userFloat03 = 45;</code>
     */
    public float getUserFloat03() {
      return userFloat03_;
    }

    public static final int USERFLOAT04_FIELD_NUMBER = 46;
    private float userFloat04_;
    /**
     * <code>optional float userFloat04 = 46;</code>
     */
    public boolean hasUserFloat04() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float userFloat04 = 46;</code>
     */
    public float getUserFloat04() {
      return userFloat04_;
    }

    public static final int USERFLOAT05_FIELD_NUMBER = 47;
    private float userFloat05_;
    /**
     * <code>optional float userFloat05 = 47;</code>
     */
    public boolean hasUserFloat05() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float userFloat05 = 47;</code>
     */
    public float getUserFloat05() {
      return userFloat05_;
    }

    public static final int USERFLOAT06_FIELD_NUMBER = 48;
    private float userFloat06_;
    /**
     * <code>optional float userFloat06 = 48;</code>
     */
    public boolean hasUserFloat06() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float userFloat06 = 48;</code>
     */
    public float getUserFloat06() {
      return userFloat06_;
    }

    public static final int USERFLOAT07_FIELD_NUMBER = 49;
    private float userFloat07_;
    /**
     * <code>optional float userFloat07 = 49;</code>
     */
    public boolean hasUserFloat07() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float userFloat07 = 49;</code>
     */
    public float getUserFloat07() {
      return userFloat07_;
    }

    public static final int USERFLOAT08_FIELD_NUMBER = 50;
    private float userFloat08_;
    /**
     * <code>optional float userFloat08 = 50;</code>
     */
    public boolean hasUserFloat08() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional float userFloat08 = 50;</code>
     */
    public float getUserFloat08() {
      return userFloat08_;
    }

    public static final int USERFLOAT09_FIELD_NUMBER = 51;
    private float userFloat09_;
    /**
     * <code>optional float userFloat09 = 51;</code>
     */
    public boolean hasUserFloat09() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional float userFloat09 = 51;</code>
     */
    public float getUserFloat09() {
      return userFloat09_;
    }

    public static final int USERFLOAT10_FIELD_NUMBER = 52;
    private float userFloat10_;
    /**
     * <code>optional float userFloat10 = 52;</code>
     */
    public boolean hasUserFloat10() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional float userFloat10 = 52;</code>
     */
    public float getUserFloat10() {
      return userFloat10_;
    }

    public static final int GESTURE_FIELD_NUMBER = 53;
    private int gesture_;
    /**
     * <code>optional int32 gesture = 53;</code>
     */
    public boolean hasGesture() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 gesture = 53;</code>
     */
    public int getGesture() {
      return gesture_;
    }

    public static final int MOUSECLICK_FIELD_NUMBER = 54;
    private int mouseClick_;
    /**
     * <code>optional int32 mouseClick = 54;</code>
     */
    public boolean hasMouseClick() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 mouseClick = 54;</code>
     */
    public int getMouseClick() {
      return mouseClick_;
    }

    public static final int GAIT_POS_FIELD_NUMBER = 55;
    private StnEggPkt.Float3 gaitPos_;
    /**
     * <code>optional .Float3 gait_pos = 55;</code>
     */
    public boolean hasGaitPos() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .Float3 gait_pos = 55;</code>
     */
    public StnEggPkt.Float3 getGaitPos() {
      return gaitPos_;
    }
    /**
     * <code>optional .Float3 gait_pos = 55;</code>
     */
    public StnEggPkt.Float3OrBuilder getGaitPosOrBuilder() {
      return gaitPos_;
    }

    public static final int GAIT_ZUPT_FIELD_NUMBER = 56;
    private boolean gaitZupt_;
    /**
     * <code>optional bool gait_zupt = 56;</code>
     */
    public boolean hasGaitZupt() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional bool gait_zupt = 56;</code>
     */
    public boolean getGaitZupt() {
      return gaitZupt_;
    }

    public static final int INPUTCOMMANDWHO_FIELD_NUMBER = 57;
    private int inputCommandWho_;
    /**
     * <code>optional int32 inputCommandWho = 57;</code>
     */
    public boolean hasInputCommandWho() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int32 inputCommandWho = 57;</code>
     */
    public int getInputCommandWho() {
      return inputCommandWho_;
    }

    public static final int INPUTCOMMANDWHAT_FIELD_NUMBER = 58;
    private int inputCommandWhat_;
    /**
     * <code>optional int32 inputCommandWhat = 58;</code>
     */
    public boolean hasInputCommandWhat() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int32 inputCommandWhat = 58;</code>
     */
    public int getInputCommandWhat() {
      return inputCommandWhat_;
    }

    public static final int INPUTCOMMANDVALUE_FIELD_NUMBER = 59;
    private int inputCommandValue_;
    /**
     * <code>optional int32 inputCommandValue = 59;</code>
     */
    public boolean hasInputCommandValue() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int32 inputCommandValue = 59;</code>
     */
    public int getInputCommandValue() {
      return inputCommandValue_;
    }

    public static final int SESPFUNCTIONALITYTYPE_FIELD_NUMBER = 60;
    private int sespFunctionalityType_;
    /**
     * <code>optional int32 sespFunctionalityType = 60;</code>
     */
    public boolean hasSespFunctionalityType() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 sespFunctionalityType = 60;</code>
     */
    public int getSespFunctionalityType() {
      return sespFunctionalityType_;
    }

    public static final int SESPFREQUENCY_FIELD_NUMBER = 61;
    private int sespFrequency_;
    /**
     * <code>optional int32 sespFrequency = 61;</code>
     */
    public boolean hasSespFrequency() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional int32 sespFrequency = 61;</code>
     */
    public int getSespFrequency() {
      return sespFrequency_;
    }

    public static final int SESPUNIT_FIELD_NUMBER = 62;
    private int sespUnit_;
    /**
     * <code>optional int32 sespUnit = 62;</code>
     */
    public boolean hasSespUnit() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 sespUnit = 62;</code>
     */
    public int getSespUnit() {
      return sespUnit_;
    }

    public static final int SESPSENTOUTSIDEBOARD_FIELD_NUMBER = 63;
    private int sespSentOutsideBoard_;
    /**
     * <code>optional int32 sespSentOutsideBoard = 63;</code>
     */
    public boolean hasSespSentOutsideBoard() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 sespSentOutsideBoard = 63;</code>
     */
    public int getSespSentOutsideBoard() {
      return sespSentOutsideBoard_;
    }

    public static final int SERPCOMMAND_FIELD_NUMBER = 64;
    private int serpCommand_;
    /**
     * <code>optional uint32 serpCommand = 64;</code>
     */
    public boolean hasSerpCommand() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 serpCommand = 64;</code>
     */
    public int getSerpCommand() {
      return serpCommand_;
    }

    public static final int GAIT_FIELD_NUMBER = 65;
    private StnEggPkt.Gait gait_;
    /**
     * <code>optional .Gait gait = 65;</code>
     */
    public boolean hasGait() {
      return ((bitField2_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Gait gait = 65;</code>
     */
    public StnEggPkt.Gait getGait() {
      return gait_;
    }
    /**
     * <code>optional .Gait gait = 65;</code>
     */
    public StnEggPkt.GaitOrBuilder getGaitOrBuilder() {
      return gait_;
    }

    public static final int DATE_FIELD_NUMBER = 66;
    private StnEggPkt.Date date_;
    /**
     * <code>optional .Date date = 66;</code>
     */
    public boolean hasDate() {
      return ((bitField2_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Date date = 66;</code>
     */
    public StnEggPkt.Date getDate() {
      return date_;
    }
    /**
     * <code>optional .Date date = 66;</code>
     */
    public StnEggPkt.DateOrBuilder getDateOrBuilder() {
      return date_;
    }

    public static final int PHYSIQUE_FIELD_NUMBER = 67;
    private StnEggPkt.Physique physique_;
    /**
     * <code>optional .Physique physique = 67;</code>
     */
    public boolean hasPhysique() {
      return ((bitField2_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Physique physique = 67;</code>
     */
    public StnEggPkt.Physique getPhysique() {
      return physique_;
    }
    /**
     * <code>optional .Physique physique = 67;</code>
     */
    public StnEggPkt.PhysiqueOrBuilder getPhysiqueOrBuilder() {
      return physique_;
    }

    public static final int DURATIONMINUTES_FIELD_NUMBER = 68;
    private int durationMinutes_;
    /**
     * <code>optional int32 durationMinutes = 68;</code>
     */
    public boolean hasDurationMinutes() {
      return ((bitField2_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 durationMinutes = 68;</code>
     */
    public int getDurationMinutes() {
      return durationMinutes_;
    }

    public static final int CALORIES_FIELD_NUMBER = 69;
    private int calories_;
    /**
     * <code>optional int32 calories = 69;</code>
     */
    public boolean hasCalories() {
      return ((bitField2_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 calories = 69;</code>
     */
    public int getCalories() {
      return calories_;
    }

    public static final int DISTANCEMETERS_FIELD_NUMBER = 70;
    private int distanceMeters_;
    /**
     * <code>optional int32 distanceMeters = 70;</code>
     */
    public boolean hasDistanceMeters() {
      return ((bitField2_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 distanceMeters = 70;</code>
     */
    public int getDistanceMeters() {
      return distanceMeters_;
    }

    public static final int LEDCOLOR_FIELD_NUMBER = 71;
    private int ledColor_;
    /**
     * <code>optional int32 ledColor = 71;</code>
     */
    public boolean hasLedColor() {
      return ((bitField2_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 ledColor = 71;</code>
     */
    public int getLedColor() {
      return ledColor_;
    }

    public static final int COUNT_FIELD_NUMBER = 72;
    private int count_;
    /**
     * <code>optional int32 count = 72;</code>
     */
    public boolean hasCount() {
      return ((bitField2_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 count = 72;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int DURATIONSECONDS_FIELD_NUMBER = 73;
    private int durationSeconds_;
    /**
     * <code>optional uint32 durationSeconds = 73;</code>
     */
    public boolean hasDurationSeconds() {
      return ((bitField2_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 durationSeconds = 73;</code>
     */
    public int getDurationSeconds() {
      return durationSeconds_;
    }

    public static final int HEARTHRATE_FIELD_NUMBER = 74;
    private int hearthRate_;
    /**
     * <code>optional uint32 hearthRate = 74;</code>
     */
    public boolean hasHearthRate() {
      return ((bitField2_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 hearthRate = 74;</code>
     */
    public int getHearthRate() {
      return hearthRate_;
    }

    public static final int BATTERY_FIELD_NUMBER = 75;
    private int battery_;
    /**
     * <code>optional uint32 battery = 75;</code>
     */
    public boolean hasBattery() {
      return ((bitField2_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 battery = 75;</code>
     */
    public int getBattery() {
      return battery_;
    }

    private void initFields() {
      size_ = 0;
      seqNo_ = 0;
      timeStamp_ = 0;
      acceleroDataG_ = StnEggPkt.Float3.getDefaultInstance();
      gyroDataDps_ = StnEggPkt.Float3.getDefaultInstance();
      magDataUT_ = StnEggPkt.Float3.getDefaultInstance();
      kalman9AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
      kalman6AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
      virtualGyroQuat_ = StnEggPkt.Float4.getDefaultInstance();
      virtualGyroSpeedRps_ = StnEggPkt.Float3.getDefaultInstance();
      mouse3DEuler_ = StnEggPkt.Float3.getDefaultInstance();
      magOritentationDeg_ = 0F;
      motion_ = 0;
      peakNumber_ = 0;
      peakMotion_ = 0;
      interruptStatistics_ = 0;
      accRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
      gyrRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
      magRegMapArray_ = StnEggPkt.RegiMapMag.getDefaultInstance();
      accTemp_ = 0;
      gyrTemp_ = 0;
      magTemp_ = 0;
      userUint01_ = 0;
      userUint02_ = 0;
      userUint03_ = 0;
      userUint04_ = 0;
      userUint05_ = 0;
      userUint06_ = 0;
      userUint07_ = 0;
      userUint08_ = 0;
      userUint09_ = 0;
      userUint10_ = 0;
      userInt01_ = 0;
      userInt02_ = 0;
      userInt03_ = 0;
      userInt04_ = 0;
      userInt05_ = 0;
      userInt06_ = 0;
      userInt07_ = 0;
      userInt08_ = 0;
      userInt09_ = 0;
      userInt10_ = 0;
      userFloat01_ = 0F;
      userFloat02_ = 0F;
      userFloat03_ = 0F;
      userFloat04_ = 0F;
      userFloat05_ = 0F;
      userFloat06_ = 0F;
      userFloat07_ = 0F;
      userFloat08_ = 0F;
      userFloat09_ = 0F;
      userFloat10_ = 0F;
      gesture_ = 0;
      mouseClick_ = 0;
      gaitPos_ = StnEggPkt.Float3.getDefaultInstance();
      gaitZupt_ = false;
      inputCommandWho_ = 0;
      inputCommandWhat_ = 0;
      inputCommandValue_ = 0;
      sespFunctionalityType_ = 0;
      sespFrequency_ = 0;
      sespUnit_ = 0;
      sespSentOutsideBoard_ = 0;
      serpCommand_ = 0;
      gait_ = StnEggPkt.Gait.getDefaultInstance();
      date_ = StnEggPkt.Date.getDefaultInstance();
      physique_ = StnEggPkt.Physique.getDefaultInstance();
      durationMinutes_ = 0;
      calories_ = 0;
      distanceMeters_ = 0;
      ledColor_ = 0;
      count_ = 0;
      durationSeconds_ = 0;
      hearthRate_ = 0;
      battery_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasAcceleroDataG()) {
        if (!getAcceleroDataG().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGyroDataDps()) {
        if (!getGyroDataDps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMagDataUT()) {
        if (!getMagDataUT().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKalman9AxesQuat()) {
        if (!getKalman9AxesQuat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKalman6AxesQuat()) {
        if (!getKalman6AxesQuat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVirtualGyroQuat()) {
        if (!getVirtualGyroQuat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVirtualGyroSpeedRps()) {
        if (!getVirtualGyroSpeedRps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMouse3DEuler()) {
        if (!getMouse3DEuler().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAccRegMapArray()) {
        if (!getAccRegMapArray().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGyrRegMapArray()) {
        if (!getGyrRegMapArray().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMagRegMapArray()) {
        if (!getMagRegMapArray().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGaitPos()) {
        if (!getGaitPos().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDate()) {
        if (!getDate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPhysique()) {
        if (!getPhysique().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seqNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, timeStamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, acceleroDataG_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, gyroDataDps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, magDataUT_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, kalman9AxesQuat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, kalman6AxesQuat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, virtualGyroQuat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, virtualGyroSpeedRps_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, mouse3DEuler_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, magOritentationDeg_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, motion_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, peakNumber_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, peakMotion_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, interruptStatistics_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, accRegMapArray_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(18, gyrRegMapArray_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, magRegMapArray_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, accTemp_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, gyrTemp_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, magTemp_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(23, userUint01_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(24, userUint02_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(25, userUint03_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(26, userUint04_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(27, userUint05_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(28, userUint06_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(29, userUint07_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(30, userUint08_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(31, userUint09_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(32, userUint10_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, userInt01_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, userInt02_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, userInt03_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, userInt04_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, userInt05_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, userInt06_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, userInt07_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, userInt08_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(41, userInt09_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(42, userInt10_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(43, userFloat01_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(44, userFloat02_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(45, userFloat03_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(46, userFloat04_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(47, userFloat05_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(48, userFloat06_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(49, userFloat07_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(50, userFloat08_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(51, userFloat09_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(52, userFloat10_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(53, gesture_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(54, mouseClick_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(55, gaitPos_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeBool(56, gaitZupt_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(57, inputCommandWho_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(58, inputCommandWhat_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(59, inputCommandValue_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(60, sespFunctionalityType_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(61, sespFrequency_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(62, sespUnit_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(63, sespSentOutsideBoard_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(64, serpCommand_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(65, gait_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(66, date_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(67, physique_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(68, durationMinutes_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(69, calories_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(70, distanceMeters_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(71, ledColor_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(72, count_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(73, durationSeconds_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(74, hearthRate_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(75, battery_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, seqNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, timeStamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, acceleroDataG_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(5, gyroDataDps_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, magDataUT_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, kalman9AxesQuat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(8, kalman6AxesQuat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(9, virtualGyroQuat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(10, virtualGyroSpeedRps_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(11, mouse3DEuler_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(12, magOritentationDeg_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(13, motion_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(14, peakNumber_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(15, peakMotion_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(16, interruptStatistics_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(17, accRegMapArray_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(18, gyrRegMapArray_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(19, magRegMapArray_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(20, accTemp_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(21, gyrTemp_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(22, magTemp_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(23, userUint01_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(24, userUint02_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(25, userUint03_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(26, userUint04_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(27, userUint05_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(28, userUint06_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(29, userUint07_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(30, userUint08_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(31, userUint09_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(32, userUint10_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(33, userInt01_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(34, userInt02_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(35, userInt03_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(36, userInt04_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(37, userInt05_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(38, userInt06_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(39, userInt07_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(40, userInt08_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(41, userInt09_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(42, userInt10_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(43, userFloat01_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(44, userFloat02_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(45, userFloat03_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(46, userFloat04_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(47, userFloat05_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(48, userFloat06_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(49, userFloat07_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(50, userFloat08_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(51, userFloat09_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(52, userFloat10_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(53, gesture_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(54, mouseClick_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(55, gaitPos_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(56, gaitZupt_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(57, inputCommandWho_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(58, inputCommandWhat_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(59, inputCommandValue_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(60, sespFunctionalityType_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(61, sespFrequency_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(62, sespUnit_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(63, sespSentOutsideBoard_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(64, serpCommand_);
      }
      if (((bitField2_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(65, gait_);
      }
      if (((bitField2_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(66, date_);
      }
      if (((bitField2_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(67, physique_);
      }
      if (((bitField2_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(68, durationMinutes_);
      }
      if (((bitField2_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(69, calories_);
      }
      if (((bitField2_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(70, distanceMeters_);
      }
      if (((bitField2_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(71, ledColor_);
      }
      if (((bitField2_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(72, count_);
      }
      if (((bitField2_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(73, durationSeconds_);
      }
      if (((bitField2_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(74, hearthRate_);
      }
      if (((bitField2_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(75, battery_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.StnEggPacket parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.StnEggPacket parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.StnEggPacket parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.StnEggPacket parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.StnEggPacket parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.StnEggPacket parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.StnEggPacket parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.StnEggPacket parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.StnEggPacket parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.StnEggPacket parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.StnEggPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code StnEggPacket}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:StnEggPacket)
            StnEggPkt.StnEggPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_StnEggPacket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_StnEggPacket_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.StnEggPacket.class, StnEggPkt.StnEggPacket.Builder.class);
      }

      // Construct using StnEggPkt.StnEggPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAcceleroDataGFieldBuilder();
          getGyroDataDpsFieldBuilder();
          getMagDataUTFieldBuilder();
          getKalman9AxesQuatFieldBuilder();
          getKalman6AxesQuatFieldBuilder();
          getVirtualGyroQuatFieldBuilder();
          getVirtualGyroSpeedRpsFieldBuilder();
          getMouse3DEulerFieldBuilder();
          getAccRegMapArrayFieldBuilder();
          getGyrRegMapArrayFieldBuilder();
          getMagRegMapArrayFieldBuilder();
          getGaitPosFieldBuilder();
          getGaitFieldBuilder();
          getDateFieldBuilder();
          getPhysiqueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        seqNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (acceleroDataGBuilder_ == null) {
          acceleroDataG_ = StnEggPkt.Float3.getDefaultInstance();
        } else {
          acceleroDataGBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (gyroDataDpsBuilder_ == null) {
          gyroDataDps_ = StnEggPkt.Float3.getDefaultInstance();
        } else {
          gyroDataDpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (magDataUTBuilder_ == null) {
          magDataUT_ = StnEggPkt.Float3.getDefaultInstance();
        } else {
          magDataUTBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (kalman9AxesQuatBuilder_ == null) {
          kalman9AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
        } else {
          kalman9AxesQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (kalman6AxesQuatBuilder_ == null) {
          kalman6AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
        } else {
          kalman6AxesQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (virtualGyroQuatBuilder_ == null) {
          virtualGyroQuat_ = StnEggPkt.Float4.getDefaultInstance();
        } else {
          virtualGyroQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (virtualGyroSpeedRpsBuilder_ == null) {
          virtualGyroSpeedRps_ = StnEggPkt.Float3.getDefaultInstance();
        } else {
          virtualGyroSpeedRpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEuler_ = StnEggPkt.Float3.getDefaultInstance();
        } else {
          mouse3DEulerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        magOritentationDeg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        motion_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        peakNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        peakMotion_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        interruptStatistics_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
        } else {
          accRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
        } else {
          gyrRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArray_ = StnEggPkt.RegiMapMag.getDefaultInstance();
        } else {
          magRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        accTemp_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        gyrTemp_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        magTemp_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        userUint01_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        userUint02_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        userUint03_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        userUint04_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        userUint05_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        userUint06_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        userUint07_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        userUint08_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        userUint09_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        userUint10_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        userInt01_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        userInt02_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        userInt03_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        userInt04_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        userInt05_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        userInt06_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        userInt07_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        userInt08_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        userInt09_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        userInt10_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        userFloat01_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000400);
        userFloat02_ = 0F;
        bitField1_ = (bitField1_ & ~0x00000800);
        userFloat03_ = 0F;
        bitField1_ = (bitField1_ & ~0x00001000);
        userFloat04_ = 0F;
        bitField1_ = (bitField1_ & ~0x00002000);
        userFloat05_ = 0F;
        bitField1_ = (bitField1_ & ~0x00004000);
        userFloat06_ = 0F;
        bitField1_ = (bitField1_ & ~0x00008000);
        userFloat07_ = 0F;
        bitField1_ = (bitField1_ & ~0x00010000);
        userFloat08_ = 0F;
        bitField1_ = (bitField1_ & ~0x00020000);
        userFloat09_ = 0F;
        bitField1_ = (bitField1_ & ~0x00040000);
        userFloat10_ = 0F;
        bitField1_ = (bitField1_ & ~0x00080000);
        gesture_ = 0;
        bitField1_ = (bitField1_ & ~0x00100000);
        mouseClick_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        if (gaitPosBuilder_ == null) {
          gaitPos_ = StnEggPkt.Float3.getDefaultInstance();
        } else {
          gaitPosBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00400000);
        gaitZupt_ = false;
        bitField1_ = (bitField1_ & ~0x00800000);
        inputCommandWho_ = 0;
        bitField1_ = (bitField1_ & ~0x01000000);
        inputCommandWhat_ = 0;
        bitField1_ = (bitField1_ & ~0x02000000);
        inputCommandValue_ = 0;
        bitField1_ = (bitField1_ & ~0x04000000);
        sespFunctionalityType_ = 0;
        bitField1_ = (bitField1_ & ~0x08000000);
        sespFrequency_ = 0;
        bitField1_ = (bitField1_ & ~0x10000000);
        sespUnit_ = 0;
        bitField1_ = (bitField1_ & ~0x20000000);
        sespSentOutsideBoard_ = 0;
        bitField1_ = (bitField1_ & ~0x40000000);
        serpCommand_ = 0;
        bitField1_ = (bitField1_ & ~0x80000000);
        if (gaitBuilder_ == null) {
          gait_ = StnEggPkt.Gait.getDefaultInstance();
        } else {
          gaitBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000001);
        if (dateBuilder_ == null) {
          date_ = StnEggPkt.Date.getDefaultInstance();
        } else {
          dateBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000002);
        if (physiqueBuilder_ == null) {
          physique_ = StnEggPkt.Physique.getDefaultInstance();
        } else {
          physiqueBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000004);
        durationMinutes_ = 0;
        bitField2_ = (bitField2_ & ~0x00000008);
        calories_ = 0;
        bitField2_ = (bitField2_ & ~0x00000010);
        distanceMeters_ = 0;
        bitField2_ = (bitField2_ & ~0x00000020);
        ledColor_ = 0;
        bitField2_ = (bitField2_ & ~0x00000040);
        count_ = 0;
        bitField2_ = (bitField2_ & ~0x00000080);
        durationSeconds_ = 0;
        bitField2_ = (bitField2_ & ~0x00000100);
        hearthRate_ = 0;
        bitField2_ = (bitField2_ & ~0x00000200);
        battery_ = 0;
        bitField2_ = (bitField2_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_StnEggPacket_descriptor;
      }

      public StnEggPkt.StnEggPacket getDefaultInstanceForType() {
        return StnEggPkt.StnEggPacket.getDefaultInstance();
      }

      public StnEggPkt.StnEggPacket build() {
        StnEggPkt.StnEggPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.StnEggPacket buildPartial() {
        StnEggPkt.StnEggPacket result = new StnEggPkt.StnEggPacket(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        int to_bitField2_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seqNo_ = seqNo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (acceleroDataGBuilder_ == null) {
          result.acceleroDataG_ = acceleroDataG_;
        } else {
          result.acceleroDataG_ = acceleroDataGBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (gyroDataDpsBuilder_ == null) {
          result.gyroDataDps_ = gyroDataDps_;
        } else {
          result.gyroDataDps_ = gyroDataDpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (magDataUTBuilder_ == null) {
          result.magDataUT_ = magDataUT_;
        } else {
          result.magDataUT_ = magDataUTBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (kalman9AxesQuatBuilder_ == null) {
          result.kalman9AxesQuat_ = kalman9AxesQuat_;
        } else {
          result.kalman9AxesQuat_ = kalman9AxesQuatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (kalman6AxesQuatBuilder_ == null) {
          result.kalman6AxesQuat_ = kalman6AxesQuat_;
        } else {
          result.kalman6AxesQuat_ = kalman6AxesQuatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (virtualGyroQuatBuilder_ == null) {
          result.virtualGyroQuat_ = virtualGyroQuat_;
        } else {
          result.virtualGyroQuat_ = virtualGyroQuatBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (virtualGyroSpeedRpsBuilder_ == null) {
          result.virtualGyroSpeedRps_ = virtualGyroSpeedRps_;
        } else {
          result.virtualGyroSpeedRps_ = virtualGyroSpeedRpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (mouse3DEulerBuilder_ == null) {
          result.mouse3DEuler_ = mouse3DEuler_;
        } else {
          result.mouse3DEuler_ = mouse3DEulerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.magOritentationDeg_ = magOritentationDeg_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.motion_ = motion_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.peakNumber_ = peakNumber_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.peakMotion_ = peakMotion_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.interruptStatistics_ = interruptStatistics_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (accRegMapArrayBuilder_ == null) {
          result.accRegMapArray_ = accRegMapArray_;
        } else {
          result.accRegMapArray_ = accRegMapArrayBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (gyrRegMapArrayBuilder_ == null) {
          result.gyrRegMapArray_ = gyrRegMapArray_;
        } else {
          result.gyrRegMapArray_ = gyrRegMapArrayBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (magRegMapArrayBuilder_ == null) {
          result.magRegMapArray_ = magRegMapArray_;
        } else {
          result.magRegMapArray_ = magRegMapArrayBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.accTemp_ = accTemp_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.gyrTemp_ = gyrTemp_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.magTemp_ = magTemp_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.userUint01_ = userUint01_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.userUint02_ = userUint02_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.userUint03_ = userUint03_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.userUint04_ = userUint04_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.userUint05_ = userUint05_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.userUint06_ = userUint06_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.userUint07_ = userUint07_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.userUint08_ = userUint08_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.userUint09_ = userUint09_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.userUint10_ = userUint10_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.userInt01_ = userInt01_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.userInt02_ = userInt02_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.userInt03_ = userInt03_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.userInt04_ = userInt04_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.userInt05_ = userInt05_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.userInt06_ = userInt06_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.userInt07_ = userInt07_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.userInt08_ = userInt08_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.userInt09_ = userInt09_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.userInt10_ = userInt10_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.userFloat01_ = userFloat01_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.userFloat02_ = userFloat02_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.userFloat03_ = userFloat03_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.userFloat04_ = userFloat04_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.userFloat05_ = userFloat05_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.userFloat06_ = userFloat06_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.userFloat07_ = userFloat07_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.userFloat08_ = userFloat08_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.userFloat09_ = userFloat09_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.userFloat10_ = userFloat10_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.gesture_ = gesture_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.mouseClick_ = mouseClick_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        if (gaitPosBuilder_ == null) {
          result.gaitPos_ = gaitPos_;
        } else {
          result.gaitPos_ = gaitPosBuilder_.build();
        }
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.gaitZupt_ = gaitZupt_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.inputCommandWho_ = inputCommandWho_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.inputCommandWhat_ = inputCommandWhat_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.inputCommandValue_ = inputCommandValue_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.sespFunctionalityType_ = sespFunctionalityType_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.sespFrequency_ = sespFrequency_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.sespUnit_ = sespUnit_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.sespSentOutsideBoard_ = sespSentOutsideBoard_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.serpCommand_ = serpCommand_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField2_ |= 0x00000001;
        }
        if (gaitBuilder_ == null) {
          result.gait_ = gait_;
        } else {
          result.gait_ = gaitBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField2_ |= 0x00000002;
        }
        if (dateBuilder_ == null) {
          result.date_ = date_;
        } else {
          result.date_ = dateBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField2_ |= 0x00000004;
        }
        if (physiqueBuilder_ == null) {
          result.physique_ = physique_;
        } else {
          result.physique_ = physiqueBuilder_.build();
        }
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField2_ |= 0x00000008;
        }
        result.durationMinutes_ = durationMinutes_;
        if (((from_bitField2_ & 0x00000010) == 0x00000010)) {
          to_bitField2_ |= 0x00000010;
        }
        result.calories_ = calories_;
        if (((from_bitField2_ & 0x00000020) == 0x00000020)) {
          to_bitField2_ |= 0x00000020;
        }
        result.distanceMeters_ = distanceMeters_;
        if (((from_bitField2_ & 0x00000040) == 0x00000040)) {
          to_bitField2_ |= 0x00000040;
        }
        result.ledColor_ = ledColor_;
        if (((from_bitField2_ & 0x00000080) == 0x00000080)) {
          to_bitField2_ |= 0x00000080;
        }
        result.count_ = count_;
        if (((from_bitField2_ & 0x00000100) == 0x00000100)) {
          to_bitField2_ |= 0x00000100;
        }
        result.durationSeconds_ = durationSeconds_;
        if (((from_bitField2_ & 0x00000200) == 0x00000200)) {
          to_bitField2_ |= 0x00000200;
        }
        result.hearthRate_ = hearthRate_;
        if (((from_bitField2_ & 0x00000400) == 0x00000400)) {
          to_bitField2_ |= 0x00000400;
        }
        result.battery_ = battery_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.bitField2_ = to_bitField2_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.StnEggPacket) {
          return mergeFrom((StnEggPkt.StnEggPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.StnEggPacket other) {
        if (other == StnEggPkt.StnEggPacket.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasSeqNo()) {
          setSeqNo(other.getSeqNo());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasAcceleroDataG()) {
          mergeAcceleroDataG(other.getAcceleroDataG());
        }
        if (other.hasGyroDataDps()) {
          mergeGyroDataDps(other.getGyroDataDps());
        }
        if (other.hasMagDataUT()) {
          mergeMagDataUT(other.getMagDataUT());
        }
        if (other.hasKalman9AxesQuat()) {
          mergeKalman9AxesQuat(other.getKalman9AxesQuat());
        }
        if (other.hasKalman6AxesQuat()) {
          mergeKalman6AxesQuat(other.getKalman6AxesQuat());
        }
        if (other.hasVirtualGyroQuat()) {
          mergeVirtualGyroQuat(other.getVirtualGyroQuat());
        }
        if (other.hasVirtualGyroSpeedRps()) {
          mergeVirtualGyroSpeedRps(other.getVirtualGyroSpeedRps());
        }
        if (other.hasMouse3DEuler()) {
          mergeMouse3DEuler(other.getMouse3DEuler());
        }
        if (other.hasMagOritentationDeg()) {
          setMagOritentationDeg(other.getMagOritentationDeg());
        }
        if (other.hasMotion()) {
          setMotion(other.getMotion());
        }
        if (other.hasPeakNumber()) {
          setPeakNumber(other.getPeakNumber());
        }
        if (other.hasPeakMotion()) {
          setPeakMotion(other.getPeakMotion());
        }
        if (other.hasInterruptStatistics()) {
          setInterruptStatistics(other.getInterruptStatistics());
        }
        if (other.hasAccRegMapArray()) {
          mergeAccRegMapArray(other.getAccRegMapArray());
        }
        if (other.hasGyrRegMapArray()) {
          mergeGyrRegMapArray(other.getGyrRegMapArray());
        }
        if (other.hasMagRegMapArray()) {
          mergeMagRegMapArray(other.getMagRegMapArray());
        }
        if (other.hasAccTemp()) {
          setAccTemp(other.getAccTemp());
        }
        if (other.hasGyrTemp()) {
          setGyrTemp(other.getGyrTemp());
        }
        if (other.hasMagTemp()) {
          setMagTemp(other.getMagTemp());
        }
        if (other.hasUserUint01()) {
          setUserUint01(other.getUserUint01());
        }
        if (other.hasUserUint02()) {
          setUserUint02(other.getUserUint02());
        }
        if (other.hasUserUint03()) {
          setUserUint03(other.getUserUint03());
        }
        if (other.hasUserUint04()) {
          setUserUint04(other.getUserUint04());
        }
        if (other.hasUserUint05()) {
          setUserUint05(other.getUserUint05());
        }
        if (other.hasUserUint06()) {
          setUserUint06(other.getUserUint06());
        }
        if (other.hasUserUint07()) {
          setUserUint07(other.getUserUint07());
        }
        if (other.hasUserUint08()) {
          setUserUint08(other.getUserUint08());
        }
        if (other.hasUserUint09()) {
          setUserUint09(other.getUserUint09());
        }
        if (other.hasUserUint10()) {
          setUserUint10(other.getUserUint10());
        }
        if (other.hasUserInt01()) {
          setUserInt01(other.getUserInt01());
        }
        if (other.hasUserInt02()) {
          setUserInt02(other.getUserInt02());
        }
        if (other.hasUserInt03()) {
          setUserInt03(other.getUserInt03());
        }
        if (other.hasUserInt04()) {
          setUserInt04(other.getUserInt04());
        }
        if (other.hasUserInt05()) {
          setUserInt05(other.getUserInt05());
        }
        if (other.hasUserInt06()) {
          setUserInt06(other.getUserInt06());
        }
        if (other.hasUserInt07()) {
          setUserInt07(other.getUserInt07());
        }
        if (other.hasUserInt08()) {
          setUserInt08(other.getUserInt08());
        }
        if (other.hasUserInt09()) {
          setUserInt09(other.getUserInt09());
        }
        if (other.hasUserInt10()) {
          setUserInt10(other.getUserInt10());
        }
        if (other.hasUserFloat01()) {
          setUserFloat01(other.getUserFloat01());
        }
        if (other.hasUserFloat02()) {
          setUserFloat02(other.getUserFloat02());
        }
        if (other.hasUserFloat03()) {
          setUserFloat03(other.getUserFloat03());
        }
        if (other.hasUserFloat04()) {
          setUserFloat04(other.getUserFloat04());
        }
        if (other.hasUserFloat05()) {
          setUserFloat05(other.getUserFloat05());
        }
        if (other.hasUserFloat06()) {
          setUserFloat06(other.getUserFloat06());
        }
        if (other.hasUserFloat07()) {
          setUserFloat07(other.getUserFloat07());
        }
        if (other.hasUserFloat08()) {
          setUserFloat08(other.getUserFloat08());
        }
        if (other.hasUserFloat09()) {
          setUserFloat09(other.getUserFloat09());
        }
        if (other.hasUserFloat10()) {
          setUserFloat10(other.getUserFloat10());
        }
        if (other.hasGesture()) {
          setGesture(other.getGesture());
        }
        if (other.hasMouseClick()) {
          setMouseClick(other.getMouseClick());
        }
        if (other.hasGaitPos()) {
          mergeGaitPos(other.getGaitPos());
        }
        if (other.hasGaitZupt()) {
          setGaitZupt(other.getGaitZupt());
        }
        if (other.hasInputCommandWho()) {
          setInputCommandWho(other.getInputCommandWho());
        }
        if (other.hasInputCommandWhat()) {
          setInputCommandWhat(other.getInputCommandWhat());
        }
        if (other.hasInputCommandValue()) {
          setInputCommandValue(other.getInputCommandValue());
        }
        if (other.hasSespFunctionalityType()) {
          setSespFunctionalityType(other.getSespFunctionalityType());
        }
        if (other.hasSespFrequency()) {
          setSespFrequency(other.getSespFrequency());
        }
        if (other.hasSespUnit()) {
          setSespUnit(other.getSespUnit());
        }
        if (other.hasSespSentOutsideBoard()) {
          setSespSentOutsideBoard(other.getSespSentOutsideBoard());
        }
        if (other.hasSerpCommand()) {
          setSerpCommand(other.getSerpCommand());
        }
        if (other.hasGait()) {
          mergeGait(other.getGait());
        }
        if (other.hasDate()) {
          mergeDate(other.getDate());
        }
        if (other.hasPhysique()) {
          mergePhysique(other.getPhysique());
        }
        if (other.hasDurationMinutes()) {
          setDurationMinutes(other.getDurationMinutes());
        }
        if (other.hasCalories()) {
          setCalories(other.getCalories());
        }
        if (other.hasDistanceMeters()) {
          setDistanceMeters(other.getDistanceMeters());
        }
        if (other.hasLedColor()) {
          setLedColor(other.getLedColor());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasDurationSeconds()) {
          setDurationSeconds(other.getDurationSeconds());
        }
        if (other.hasHearthRate()) {
          setHearthRate(other.getHearthRate());
        }
        if (other.hasBattery()) {
          setBattery(other.getBattery());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasAcceleroDataG()) {
          if (!getAcceleroDataG().isInitialized()) {

            return false;
          }
        }
        if (hasGyroDataDps()) {
          if (!getGyroDataDps().isInitialized()) {

            return false;
          }
        }
        if (hasMagDataUT()) {
          if (!getMagDataUT().isInitialized()) {

            return false;
          }
        }
        if (hasKalman9AxesQuat()) {
          if (!getKalman9AxesQuat().isInitialized()) {

            return false;
          }
        }
        if (hasKalman6AxesQuat()) {
          if (!getKalman6AxesQuat().isInitialized()) {

            return false;
          }
        }
        if (hasVirtualGyroQuat()) {
          if (!getVirtualGyroQuat().isInitialized()) {

            return false;
          }
        }
        if (hasVirtualGyroSpeedRps()) {
          if (!getVirtualGyroSpeedRps().isInitialized()) {

            return false;
          }
        }
        if (hasMouse3DEuler()) {
          if (!getMouse3DEuler().isInitialized()) {

            return false;
          }
        }
        if (hasAccRegMapArray()) {
          if (!getAccRegMapArray().isInitialized()) {

            return false;
          }
        }
        if (hasGyrRegMapArray()) {
          if (!getGyrRegMapArray().isInitialized()) {

            return false;
          }
        }
        if (hasMagRegMapArray()) {
          if (!getMagRegMapArray().isInitialized()) {

            return false;
          }
        }
        if (hasGaitPos()) {
          if (!getGaitPos().isInitialized()) {

            return false;
          }
        }
        if (hasDate()) {
          if (!getDate().isInitialized()) {

            return false;
          }
        }
        if (hasPhysique()) {
          if (!getPhysique().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.StnEggPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.StnEggPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private int size_ ;
      /**
       * <code>optional int32 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 size = 1;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional int32 size = 1;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        onChanged();
        return this;
      }

      private int seqNo_ ;
      /**
       * <code>optional int32 seqNo = 2;</code>
       */
      public boolean hasSeqNo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seqNo = 2;</code>
       */
      public int getSeqNo() {
        return seqNo_;
      }
      /**
       * <code>optional int32 seqNo = 2;</code>
       */
      public Builder setSeqNo(int value) {
        bitField0_ |= 0x00000002;
        seqNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seqNo = 2;</code>
       */
      public Builder clearSeqNo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seqNo_ = 0;
        onChanged();
        return this;
      }

      private int timeStamp_ ;
      /**
       * <code>optional int32 timeStamp = 3;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 timeStamp = 3;</code>
       */
      public int getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>optional int32 timeStamp = 3;</code>
       */
      public Builder setTimeStamp(int value) {
        bitField0_ |= 0x00000004;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeStamp = 3;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeStamp_ = 0;
        onChanged();
        return this;
      }

      private StnEggPkt.Float3 acceleroDataG_ = StnEggPkt.Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder> acceleroDataGBuilder_;
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public boolean hasAcceleroDataG() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public StnEggPkt.Float3 getAcceleroDataG() {
        if (acceleroDataGBuilder_ == null) {
          return acceleroDataG_;
        } else {
          return acceleroDataGBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public Builder setAcceleroDataG(StnEggPkt.Float3 value) {
        if (acceleroDataGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acceleroDataG_ = value;
          onChanged();
        } else {
          acceleroDataGBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public Builder setAcceleroDataG(
              StnEggPkt.Float3.Builder builderForValue) {
        if (acceleroDataGBuilder_ == null) {
          acceleroDataG_ = builderForValue.build();
          onChanged();
        } else {
          acceleroDataGBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public Builder mergeAcceleroDataG(StnEggPkt.Float3 value) {
        if (acceleroDataGBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
                  acceleroDataG_ != StnEggPkt.Float3.getDefaultInstance()) {
            acceleroDataG_ =
                    StnEggPkt.Float3.newBuilder(acceleroDataG_).mergeFrom(value).buildPartial();
          } else {
            acceleroDataG_ = value;
          }
          onChanged();
        } else {
          acceleroDataGBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public Builder clearAcceleroDataG() {
        if (acceleroDataGBuilder_ == null) {
          acceleroDataG_ = StnEggPkt.Float3.getDefaultInstance();
          onChanged();
        } else {
          acceleroDataGBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public StnEggPkt.Float3.Builder getAcceleroDataGBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAcceleroDataGFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      public StnEggPkt.Float3OrBuilder getAcceleroDataGOrBuilder() {
        if (acceleroDataGBuilder_ != null) {
          return acceleroDataGBuilder_.getMessageOrBuilder();
        } else {
          return acceleroDataG_;
        }
      }
      /**
       * <code>optional .Float3 acceleroData_g = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>
      getAcceleroDataGFieldBuilder() {
        if (acceleroDataGBuilder_ == null) {
          acceleroDataGBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>(
                  getAcceleroDataG(),
                  getParentForChildren(),
                  isClean());
          acceleroDataG_ = null;
        }
        return acceleroDataGBuilder_;
      }

      private StnEggPkt.Float3 gyroDataDps_ = StnEggPkt.Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder> gyroDataDpsBuilder_;
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public boolean hasGyroDataDps() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public StnEggPkt.Float3 getGyroDataDps() {
        if (gyroDataDpsBuilder_ == null) {
          return gyroDataDps_;
        } else {
          return gyroDataDpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public Builder setGyroDataDps(StnEggPkt.Float3 value) {
        if (gyroDataDpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gyroDataDps_ = value;
          onChanged();
        } else {
          gyroDataDpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public Builder setGyroDataDps(
              StnEggPkt.Float3.Builder builderForValue) {
        if (gyroDataDpsBuilder_ == null) {
          gyroDataDps_ = builderForValue.build();
          onChanged();
        } else {
          gyroDataDpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public Builder mergeGyroDataDps(StnEggPkt.Float3 value) {
        if (gyroDataDpsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
                  gyroDataDps_ != StnEggPkt.Float3.getDefaultInstance()) {
            gyroDataDps_ =
                    StnEggPkt.Float3.newBuilder(gyroDataDps_).mergeFrom(value).buildPartial();
          } else {
            gyroDataDps_ = value;
          }
          onChanged();
        } else {
          gyroDataDpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public Builder clearGyroDataDps() {
        if (gyroDataDpsBuilder_ == null) {
          gyroDataDps_ = StnEggPkt.Float3.getDefaultInstance();
          onChanged();
        } else {
          gyroDataDpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public StnEggPkt.Float3.Builder getGyroDataDpsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGyroDataDpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      public StnEggPkt.Float3OrBuilder getGyroDataDpsOrBuilder() {
        if (gyroDataDpsBuilder_ != null) {
          return gyroDataDpsBuilder_.getMessageOrBuilder();
        } else {
          return gyroDataDps_;
        }
      }
      /**
       * <code>optional .Float3 gyroData_dps = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>
      getGyroDataDpsFieldBuilder() {
        if (gyroDataDpsBuilder_ == null) {
          gyroDataDpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>(
                  getGyroDataDps(),
                  getParentForChildren(),
                  isClean());
          gyroDataDps_ = null;
        }
        return gyroDataDpsBuilder_;
      }

      private StnEggPkt.Float3 magDataUT_ = StnEggPkt.Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder> magDataUTBuilder_;
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public boolean hasMagDataUT() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public StnEggPkt.Float3 getMagDataUT() {
        if (magDataUTBuilder_ == null) {
          return magDataUT_;
        } else {
          return magDataUTBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public Builder setMagDataUT(StnEggPkt.Float3 value) {
        if (magDataUTBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          magDataUT_ = value;
          onChanged();
        } else {
          magDataUTBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public Builder setMagDataUT(
              StnEggPkt.Float3.Builder builderForValue) {
        if (magDataUTBuilder_ == null) {
          magDataUT_ = builderForValue.build();
          onChanged();
        } else {
          magDataUTBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public Builder mergeMagDataUT(StnEggPkt.Float3 value) {
        if (magDataUTBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
                  magDataUT_ != StnEggPkt.Float3.getDefaultInstance()) {
            magDataUT_ =
                    StnEggPkt.Float3.newBuilder(magDataUT_).mergeFrom(value).buildPartial();
          } else {
            magDataUT_ = value;
          }
          onChanged();
        } else {
          magDataUTBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public Builder clearMagDataUT() {
        if (magDataUTBuilder_ == null) {
          magDataUT_ = StnEggPkt.Float3.getDefaultInstance();
          onChanged();
        } else {
          magDataUTBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public StnEggPkt.Float3.Builder getMagDataUTBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getMagDataUTFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      public StnEggPkt.Float3OrBuilder getMagDataUTOrBuilder() {
        if (magDataUTBuilder_ != null) {
          return magDataUTBuilder_.getMessageOrBuilder();
        } else {
          return magDataUT_;
        }
      }
      /**
       * <code>optional .Float3 magData_uT = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>
      getMagDataUTFieldBuilder() {
        if (magDataUTBuilder_ == null) {
          magDataUTBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>(
                  getMagDataUT(),
                  getParentForChildren(),
                  isClean());
          magDataUT_ = null;
        }
        return magDataUTBuilder_;
      }

      private StnEggPkt.Float4 kalman9AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder> kalman9AxesQuatBuilder_;
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public boolean hasKalman9AxesQuat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public StnEggPkt.Float4 getKalman9AxesQuat() {
        if (kalman9AxesQuatBuilder_ == null) {
          return kalman9AxesQuat_;
        } else {
          return kalman9AxesQuatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public Builder setKalman9AxesQuat(StnEggPkt.Float4 value) {
        if (kalman9AxesQuatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kalman9AxesQuat_ = value;
          onChanged();
        } else {
          kalman9AxesQuatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public Builder setKalman9AxesQuat(
              StnEggPkt.Float4.Builder builderForValue) {
        if (kalman9AxesQuatBuilder_ == null) {
          kalman9AxesQuat_ = builderForValue.build();
          onChanged();
        } else {
          kalman9AxesQuatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public Builder mergeKalman9AxesQuat(StnEggPkt.Float4 value) {
        if (kalman9AxesQuatBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
                  kalman9AxesQuat_ != StnEggPkt.Float4.getDefaultInstance()) {
            kalman9AxesQuat_ =
                    StnEggPkt.Float4.newBuilder(kalman9AxesQuat_).mergeFrom(value).buildPartial();
          } else {
            kalman9AxesQuat_ = value;
          }
          onChanged();
        } else {
          kalman9AxesQuatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public Builder clearKalman9AxesQuat() {
        if (kalman9AxesQuatBuilder_ == null) {
          kalman9AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
          onChanged();
        } else {
          kalman9AxesQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public StnEggPkt.Float4.Builder getKalman9AxesQuatBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getKalman9AxesQuatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      public StnEggPkt.Float4OrBuilder getKalman9AxesQuatOrBuilder() {
        if (kalman9AxesQuatBuilder_ != null) {
          return kalman9AxesQuatBuilder_.getMessageOrBuilder();
        } else {
          return kalman9AxesQuat_;
        }
      }
      /**
       * <code>optional .Float4 kalman9Axes_quat = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder>
      getKalman9AxesQuatFieldBuilder() {
        if (kalman9AxesQuatBuilder_ == null) {
          kalman9AxesQuatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder>(
                  getKalman9AxesQuat(),
                  getParentForChildren(),
                  isClean());
          kalman9AxesQuat_ = null;
        }
        return kalman9AxesQuatBuilder_;
      }

      private StnEggPkt.Float4 kalman6AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder> kalman6AxesQuatBuilder_;
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public boolean hasKalman6AxesQuat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public StnEggPkt.Float4 getKalman6AxesQuat() {
        if (kalman6AxesQuatBuilder_ == null) {
          return kalman6AxesQuat_;
        } else {
          return kalman6AxesQuatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public Builder setKalman6AxesQuat(StnEggPkt.Float4 value) {
        if (kalman6AxesQuatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kalman6AxesQuat_ = value;
          onChanged();
        } else {
          kalman6AxesQuatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public Builder setKalman6AxesQuat(
              StnEggPkt.Float4.Builder builderForValue) {
        if (kalman6AxesQuatBuilder_ == null) {
          kalman6AxesQuat_ = builderForValue.build();
          onChanged();
        } else {
          kalman6AxesQuatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public Builder mergeKalman6AxesQuat(StnEggPkt.Float4 value) {
        if (kalman6AxesQuatBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
                  kalman6AxesQuat_ != StnEggPkt.Float4.getDefaultInstance()) {
            kalman6AxesQuat_ =
                    StnEggPkt.Float4.newBuilder(kalman6AxesQuat_).mergeFrom(value).buildPartial();
          } else {
            kalman6AxesQuat_ = value;
          }
          onChanged();
        } else {
          kalman6AxesQuatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public Builder clearKalman6AxesQuat() {
        if (kalman6AxesQuatBuilder_ == null) {
          kalman6AxesQuat_ = StnEggPkt.Float4.getDefaultInstance();
          onChanged();
        } else {
          kalman6AxesQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public StnEggPkt.Float4.Builder getKalman6AxesQuatBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getKalman6AxesQuatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      public StnEggPkt.Float4OrBuilder getKalman6AxesQuatOrBuilder() {
        if (kalman6AxesQuatBuilder_ != null) {
          return kalman6AxesQuatBuilder_.getMessageOrBuilder();
        } else {
          return kalman6AxesQuat_;
        }
      }
      /**
       * <code>optional .Float4 kalman6Axes_quat = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder>
      getKalman6AxesQuatFieldBuilder() {
        if (kalman6AxesQuatBuilder_ == null) {
          kalman6AxesQuatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder>(
                  getKalman6AxesQuat(),
                  getParentForChildren(),
                  isClean());
          kalman6AxesQuat_ = null;
        }
        return kalman6AxesQuatBuilder_;
      }

      private StnEggPkt.Float4 virtualGyroQuat_ = StnEggPkt.Float4.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder> virtualGyroQuatBuilder_;
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public boolean hasVirtualGyroQuat() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public StnEggPkt.Float4 getVirtualGyroQuat() {
        if (virtualGyroQuatBuilder_ == null) {
          return virtualGyroQuat_;
        } else {
          return virtualGyroQuatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public Builder setVirtualGyroQuat(StnEggPkt.Float4 value) {
        if (virtualGyroQuatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          virtualGyroQuat_ = value;
          onChanged();
        } else {
          virtualGyroQuatBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public Builder setVirtualGyroQuat(
              StnEggPkt.Float4.Builder builderForValue) {
        if (virtualGyroQuatBuilder_ == null) {
          virtualGyroQuat_ = builderForValue.build();
          onChanged();
        } else {
          virtualGyroQuatBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public Builder mergeVirtualGyroQuat(StnEggPkt.Float4 value) {
        if (virtualGyroQuatBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
                  virtualGyroQuat_ != StnEggPkt.Float4.getDefaultInstance()) {
            virtualGyroQuat_ =
                    StnEggPkt.Float4.newBuilder(virtualGyroQuat_).mergeFrom(value).buildPartial();
          } else {
            virtualGyroQuat_ = value;
          }
          onChanged();
        } else {
          virtualGyroQuatBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public Builder clearVirtualGyroQuat() {
        if (virtualGyroQuatBuilder_ == null) {
          virtualGyroQuat_ = StnEggPkt.Float4.getDefaultInstance();
          onChanged();
        } else {
          virtualGyroQuatBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public StnEggPkt.Float4.Builder getVirtualGyroQuatBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getVirtualGyroQuatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      public StnEggPkt.Float4OrBuilder getVirtualGyroQuatOrBuilder() {
        if (virtualGyroQuatBuilder_ != null) {
          return virtualGyroQuatBuilder_.getMessageOrBuilder();
        } else {
          return virtualGyroQuat_;
        }
      }
      /**
       * <code>optional .Float4 virtualGyro_quat = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder>
      getVirtualGyroQuatFieldBuilder() {
        if (virtualGyroQuatBuilder_ == null) {
          virtualGyroQuatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float4, StnEggPkt.Float4.Builder, StnEggPkt.Float4OrBuilder>(
                  getVirtualGyroQuat(),
                  getParentForChildren(),
                  isClean());
          virtualGyroQuat_ = null;
        }
        return virtualGyroQuatBuilder_;
      }

      private StnEggPkt.Float3 virtualGyroSpeedRps_ = StnEggPkt.Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder> virtualGyroSpeedRpsBuilder_;
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public boolean hasVirtualGyroSpeedRps() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public StnEggPkt.Float3 getVirtualGyroSpeedRps() {
        if (virtualGyroSpeedRpsBuilder_ == null) {
          return virtualGyroSpeedRps_;
        } else {
          return virtualGyroSpeedRpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public Builder setVirtualGyroSpeedRps(StnEggPkt.Float3 value) {
        if (virtualGyroSpeedRpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          virtualGyroSpeedRps_ = value;
          onChanged();
        } else {
          virtualGyroSpeedRpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public Builder setVirtualGyroSpeedRps(
              StnEggPkt.Float3.Builder builderForValue) {
        if (virtualGyroSpeedRpsBuilder_ == null) {
          virtualGyroSpeedRps_ = builderForValue.build();
          onChanged();
        } else {
          virtualGyroSpeedRpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public Builder mergeVirtualGyroSpeedRps(StnEggPkt.Float3 value) {
        if (virtualGyroSpeedRpsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
                  virtualGyroSpeedRps_ != StnEggPkt.Float3.getDefaultInstance()) {
            virtualGyroSpeedRps_ =
                    StnEggPkt.Float3.newBuilder(virtualGyroSpeedRps_).mergeFrom(value).buildPartial();
          } else {
            virtualGyroSpeedRps_ = value;
          }
          onChanged();
        } else {
          virtualGyroSpeedRpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public Builder clearVirtualGyroSpeedRps() {
        if (virtualGyroSpeedRpsBuilder_ == null) {
          virtualGyroSpeedRps_ = StnEggPkt.Float3.getDefaultInstance();
          onChanged();
        } else {
          virtualGyroSpeedRpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public StnEggPkt.Float3.Builder getVirtualGyroSpeedRpsBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getVirtualGyroSpeedRpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      public StnEggPkt.Float3OrBuilder getVirtualGyroSpeedRpsOrBuilder() {
        if (virtualGyroSpeedRpsBuilder_ != null) {
          return virtualGyroSpeedRpsBuilder_.getMessageOrBuilder();
        } else {
          return virtualGyroSpeedRps_;
        }
      }
      /**
       * <code>optional .Float3 virtualGyro_Speed_rps = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>
      getVirtualGyroSpeedRpsFieldBuilder() {
        if (virtualGyroSpeedRpsBuilder_ == null) {
          virtualGyroSpeedRpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>(
                  getVirtualGyroSpeedRps(),
                  getParentForChildren(),
                  isClean());
          virtualGyroSpeedRps_ = null;
        }
        return virtualGyroSpeedRpsBuilder_;
      }

      private StnEggPkt.Float3 mouse3DEuler_ = StnEggPkt.Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder> mouse3DEulerBuilder_;
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public boolean hasMouse3DEuler() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public StnEggPkt.Float3 getMouse3DEuler() {
        if (mouse3DEulerBuilder_ == null) {
          return mouse3DEuler_;
        } else {
          return mouse3DEulerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public Builder setMouse3DEuler(StnEggPkt.Float3 value) {
        if (mouse3DEulerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mouse3DEuler_ = value;
          onChanged();
        } else {
          mouse3DEulerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public Builder setMouse3DEuler(
              StnEggPkt.Float3.Builder builderForValue) {
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEuler_ = builderForValue.build();
          onChanged();
        } else {
          mouse3DEulerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public Builder mergeMouse3DEuler(StnEggPkt.Float3 value) {
        if (mouse3DEulerBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
                  mouse3DEuler_ != StnEggPkt.Float3.getDefaultInstance()) {
            mouse3DEuler_ =
                    StnEggPkt.Float3.newBuilder(mouse3DEuler_).mergeFrom(value).buildPartial();
          } else {
            mouse3DEuler_ = value;
          }
          onChanged();
        } else {
          mouse3DEulerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public Builder clearMouse3DEuler() {
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEuler_ = StnEggPkt.Float3.getDefaultInstance();
          onChanged();
        } else {
          mouse3DEulerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public StnEggPkt.Float3.Builder getMouse3DEulerBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getMouse3DEulerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      public StnEggPkt.Float3OrBuilder getMouse3DEulerOrBuilder() {
        if (mouse3DEulerBuilder_ != null) {
          return mouse3DEulerBuilder_.getMessageOrBuilder();
        } else {
          return mouse3DEuler_;
        }
      }
      /**
       * <code>optional .Float3 mouse3D_euler = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>
      getMouse3DEulerFieldBuilder() {
        if (mouse3DEulerBuilder_ == null) {
          mouse3DEulerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>(
                  getMouse3DEuler(),
                  getParentForChildren(),
                  isClean());
          mouse3DEuler_ = null;
        }
        return mouse3DEulerBuilder_;
      }

      private float magOritentationDeg_ ;
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public boolean hasMagOritentationDeg() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public float getMagOritentationDeg() {
        return magOritentationDeg_;
      }
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public Builder setMagOritentationDeg(float value) {
        bitField0_ |= 0x00000800;
        magOritentationDeg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float magOritentation_deg = 12;</code>
       */
      public Builder clearMagOritentationDeg() {
        bitField0_ = (bitField0_ & ~0x00000800);
        magOritentationDeg_ = 0F;
        onChanged();
        return this;
      }

      private int motion_ ;
      /**
       * <code>optional int32 motion = 13;</code>
       */
      public boolean hasMotion() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 motion = 13;</code>
       */
      public int getMotion() {
        return motion_;
      }
      /**
       * <code>optional int32 motion = 13;</code>
       */
      public Builder setMotion(int value) {
        bitField0_ |= 0x00001000;
        motion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 motion = 13;</code>
       */
      public Builder clearMotion() {
        bitField0_ = (bitField0_ & ~0x00001000);
        motion_ = 0;
        onChanged();
        return this;
      }

      private int peakNumber_ ;
      /**
       * <code>optional int32 peakNumber = 14;</code>
       */
      public boolean hasPeakNumber() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 peakNumber = 14;</code>
       */
      public int getPeakNumber() {
        return peakNumber_;
      }
      /**
       * <code>optional int32 peakNumber = 14;</code>
       */
      public Builder setPeakNumber(int value) {
        bitField0_ |= 0x00002000;
        peakNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 peakNumber = 14;</code>
       */
      public Builder clearPeakNumber() {
        bitField0_ = (bitField0_ & ~0x00002000);
        peakNumber_ = 0;
        onChanged();
        return this;
      }

      private int peakMotion_ ;
      /**
       * <code>optional int32 peakMotion = 15;</code>
       */
      public boolean hasPeakMotion() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 peakMotion = 15;</code>
       */
      public int getPeakMotion() {
        return peakMotion_;
      }
      /**
       * <code>optional int32 peakMotion = 15;</code>
       */
      public Builder setPeakMotion(int value) {
        bitField0_ |= 0x00004000;
        peakMotion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 peakMotion = 15;</code>
       */
      public Builder clearPeakMotion() {
        bitField0_ = (bitField0_ & ~0x00004000);
        peakMotion_ = 0;
        onChanged();
        return this;
      }

      private int interruptStatistics_ ;
      /**
       * <code>optional int32 interruptStatistics = 16;</code>
       *
       * <pre>
       * bit:0
       * </pre>
       */
      public boolean hasInterruptStatistics() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 interruptStatistics = 16;</code>
       *
       * <pre>
       * bit:0
       * </pre>
       */
      public int getInterruptStatistics() {
        return interruptStatistics_;
      }
      /**
       * <code>optional int32 interruptStatistics = 16;</code>
       *
       * <pre>
       * bit:0
       * </pre>
       */
      public Builder setInterruptStatistics(int value) {
        bitField0_ |= 0x00008000;
        interruptStatistics_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 interruptStatistics = 16;</code>
       *
       * <pre>
       * bit:0
       * </pre>
       */
      public Builder clearInterruptStatistics() {
        bitField0_ = (bitField0_ & ~0x00008000);
        interruptStatistics_ = 0;
        onChanged();
        return this;
      }

      private StnEggPkt.RegiMapAccelGyro accRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.RegiMapAccelGyro, StnEggPkt.RegiMapAccelGyro.Builder, StnEggPkt.RegiMapAccelGyroOrBuilder> accRegMapArrayBuilder_;
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public boolean hasAccRegMapArray() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public StnEggPkt.RegiMapAccelGyro getAccRegMapArray() {
        if (accRegMapArrayBuilder_ == null) {
          return accRegMapArray_;
        } else {
          return accRegMapArrayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public Builder setAccRegMapArray(StnEggPkt.RegiMapAccelGyro value) {
        if (accRegMapArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accRegMapArray_ = value;
          onChanged();
        } else {
          accRegMapArrayBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public Builder setAccRegMapArray(
              StnEggPkt.RegiMapAccelGyro.Builder builderForValue) {
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArray_ = builderForValue.build();
          onChanged();
        } else {
          accRegMapArrayBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public Builder mergeAccRegMapArray(StnEggPkt.RegiMapAccelGyro value) {
        if (accRegMapArrayBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
                  accRegMapArray_ != StnEggPkt.RegiMapAccelGyro.getDefaultInstance()) {
            accRegMapArray_ =
                    StnEggPkt.RegiMapAccelGyro.newBuilder(accRegMapArray_).mergeFrom(value).buildPartial();
          } else {
            accRegMapArray_ = value;
          }
          onChanged();
        } else {
          accRegMapArrayBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public Builder clearAccRegMapArray() {
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
          onChanged();
        } else {
          accRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public StnEggPkt.RegiMapAccelGyro.Builder getAccRegMapArrayBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getAccRegMapArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      public StnEggPkt.RegiMapAccelGyroOrBuilder getAccRegMapArrayOrBuilder() {
        if (accRegMapArrayBuilder_ != null) {
          return accRegMapArrayBuilder_.getMessageOrBuilder();
        } else {
          return accRegMapArray_;
        }
      }
      /**
       * <code>optional .RegiMapAccelGyro accRegMap_array = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.RegiMapAccelGyro, StnEggPkt.RegiMapAccelGyro.Builder, StnEggPkt.RegiMapAccelGyroOrBuilder>
      getAccRegMapArrayFieldBuilder() {
        if (accRegMapArrayBuilder_ == null) {
          accRegMapArrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.RegiMapAccelGyro, StnEggPkt.RegiMapAccelGyro.Builder, StnEggPkt.RegiMapAccelGyroOrBuilder>(
                  getAccRegMapArray(),
                  getParentForChildren(),
                  isClean());
          accRegMapArray_ = null;
        }
        return accRegMapArrayBuilder_;
      }

      private StnEggPkt.RegiMapAccelGyro gyrRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.RegiMapAccelGyro, StnEggPkt.RegiMapAccelGyro.Builder, StnEggPkt.RegiMapAccelGyroOrBuilder> gyrRegMapArrayBuilder_;
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public boolean hasGyrRegMapArray() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public StnEggPkt.RegiMapAccelGyro getGyrRegMapArray() {
        if (gyrRegMapArrayBuilder_ == null) {
          return gyrRegMapArray_;
        } else {
          return gyrRegMapArrayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public Builder setGyrRegMapArray(StnEggPkt.RegiMapAccelGyro value) {
        if (gyrRegMapArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gyrRegMapArray_ = value;
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public Builder setGyrRegMapArray(
              StnEggPkt.RegiMapAccelGyro.Builder builderForValue) {
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArray_ = builderForValue.build();
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public Builder mergeGyrRegMapArray(StnEggPkt.RegiMapAccelGyro value) {
        if (gyrRegMapArrayBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
                  gyrRegMapArray_ != StnEggPkt.RegiMapAccelGyro.getDefaultInstance()) {
            gyrRegMapArray_ =
                    StnEggPkt.RegiMapAccelGyro.newBuilder(gyrRegMapArray_).mergeFrom(value).buildPartial();
          } else {
            gyrRegMapArray_ = value;
          }
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public Builder clearGyrRegMapArray() {
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArray_ = StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
          onChanged();
        } else {
          gyrRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public StnEggPkt.RegiMapAccelGyro.Builder getGyrRegMapArrayBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getGyrRegMapArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      public StnEggPkt.RegiMapAccelGyroOrBuilder getGyrRegMapArrayOrBuilder() {
        if (gyrRegMapArrayBuilder_ != null) {
          return gyrRegMapArrayBuilder_.getMessageOrBuilder();
        } else {
          return gyrRegMapArray_;
        }
      }
      /**
       * <code>optional .RegiMapAccelGyro gyrRegMap_array = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.RegiMapAccelGyro, StnEggPkt.RegiMapAccelGyro.Builder, StnEggPkt.RegiMapAccelGyroOrBuilder>
      getGyrRegMapArrayFieldBuilder() {
        if (gyrRegMapArrayBuilder_ == null) {
          gyrRegMapArrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.RegiMapAccelGyro, StnEggPkt.RegiMapAccelGyro.Builder, StnEggPkt.RegiMapAccelGyroOrBuilder>(
                  getGyrRegMapArray(),
                  getParentForChildren(),
                  isClean());
          gyrRegMapArray_ = null;
        }
        return gyrRegMapArrayBuilder_;
      }

      private StnEggPkt.RegiMapMag magRegMapArray_ = StnEggPkt.RegiMapMag.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.RegiMapMag, StnEggPkt.RegiMapMag.Builder, StnEggPkt.RegiMapMagOrBuilder> magRegMapArrayBuilder_;
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public boolean hasMagRegMapArray() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public StnEggPkt.RegiMapMag getMagRegMapArray() {
        if (magRegMapArrayBuilder_ == null) {
          return magRegMapArray_;
        } else {
          return magRegMapArrayBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public Builder setMagRegMapArray(StnEggPkt.RegiMapMag value) {
        if (magRegMapArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          magRegMapArray_ = value;
          onChanged();
        } else {
          magRegMapArrayBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public Builder setMagRegMapArray(
              StnEggPkt.RegiMapMag.Builder builderForValue) {
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArray_ = builderForValue.build();
          onChanged();
        } else {
          magRegMapArrayBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public Builder mergeMagRegMapArray(StnEggPkt.RegiMapMag value) {
        if (magRegMapArrayBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
                  magRegMapArray_ != StnEggPkt.RegiMapMag.getDefaultInstance()) {
            magRegMapArray_ =
                    StnEggPkt.RegiMapMag.newBuilder(magRegMapArray_).mergeFrom(value).buildPartial();
          } else {
            magRegMapArray_ = value;
          }
          onChanged();
        } else {
          magRegMapArrayBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public Builder clearMagRegMapArray() {
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArray_ = StnEggPkt.RegiMapMag.getDefaultInstance();
          onChanged();
        } else {
          magRegMapArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public StnEggPkt.RegiMapMag.Builder getMagRegMapArrayBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getMagRegMapArrayFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      public StnEggPkt.RegiMapMagOrBuilder getMagRegMapArrayOrBuilder() {
        if (magRegMapArrayBuilder_ != null) {
          return magRegMapArrayBuilder_.getMessageOrBuilder();
        } else {
          return magRegMapArray_;
        }
      }
      /**
       * <code>optional .RegiMapMag magRegMap_array = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.RegiMapMag, StnEggPkt.RegiMapMag.Builder, StnEggPkt.RegiMapMagOrBuilder>
      getMagRegMapArrayFieldBuilder() {
        if (magRegMapArrayBuilder_ == null) {
          magRegMapArrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.RegiMapMag, StnEggPkt.RegiMapMag.Builder, StnEggPkt.RegiMapMagOrBuilder>(
                  getMagRegMapArray(),
                  getParentForChildren(),
                  isClean());
          magRegMapArray_ = null;
        }
        return magRegMapArrayBuilder_;
      }

      private int accTemp_ ;
      /**
       * <code>optional int32 accTemp = 20;</code>
       */
      public boolean hasAccTemp() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 accTemp = 20;</code>
       */
      public int getAccTemp() {
        return accTemp_;
      }
      /**
       * <code>optional int32 accTemp = 20;</code>
       */
      public Builder setAccTemp(int value) {
        bitField0_ |= 0x00080000;
        accTemp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 accTemp = 20;</code>
       */
      public Builder clearAccTemp() {
        bitField0_ = (bitField0_ & ~0x00080000);
        accTemp_ = 0;
        onChanged();
        return this;
      }

      private int gyrTemp_ ;
      /**
       * <code>optional int32 gyrTemp = 21;</code>
       */
      public boolean hasGyrTemp() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 gyrTemp = 21;</code>
       */
      public int getGyrTemp() {
        return gyrTemp_;
      }
      /**
       * <code>optional int32 gyrTemp = 21;</code>
       */
      public Builder setGyrTemp(int value) {
        bitField0_ |= 0x00100000;
        gyrTemp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gyrTemp = 21;</code>
       */
      public Builder clearGyrTemp() {
        bitField0_ = (bitField0_ & ~0x00100000);
        gyrTemp_ = 0;
        onChanged();
        return this;
      }

      private int magTemp_ ;
      /**
       * <code>optional int32 magTemp = 22;</code>
       */
      public boolean hasMagTemp() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 magTemp = 22;</code>
       */
      public int getMagTemp() {
        return magTemp_;
      }
      /**
       * <code>optional int32 magTemp = 22;</code>
       */
      public Builder setMagTemp(int value) {
        bitField0_ |= 0x00200000;
        magTemp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 magTemp = 22;</code>
       */
      public Builder clearMagTemp() {
        bitField0_ = (bitField0_ & ~0x00200000);
        magTemp_ = 0;
        onChanged();
        return this;
      }

      private int userUint01_ ;
      /**
       * <code>optional uint32 userUint01 = 23;</code>
       */
      public boolean hasUserUint01() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 userUint01 = 23;</code>
       */
      public int getUserUint01() {
        return userUint01_;
      }
      /**
       * <code>optional uint32 userUint01 = 23;</code>
       */
      public Builder setUserUint01(int value) {
        bitField0_ |= 0x00400000;
        userUint01_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint01 = 23;</code>
       */
      public Builder clearUserUint01() {
        bitField0_ = (bitField0_ & ~0x00400000);
        userUint01_ = 0;
        onChanged();
        return this;
      }

      private int userUint02_ ;
      /**
       * <code>optional uint32 userUint02 = 24;</code>
       */
      public boolean hasUserUint02() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 userUint02 = 24;</code>
       */
      public int getUserUint02() {
        return userUint02_;
      }
      /**
       * <code>optional uint32 userUint02 = 24;</code>
       */
      public Builder setUserUint02(int value) {
        bitField0_ |= 0x00800000;
        userUint02_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint02 = 24;</code>
       */
      public Builder clearUserUint02() {
        bitField0_ = (bitField0_ & ~0x00800000);
        userUint02_ = 0;
        onChanged();
        return this;
      }

      private int userUint03_ ;
      /**
       * <code>optional uint32 userUint03 = 25;</code>
       */
      public boolean hasUserUint03() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 userUint03 = 25;</code>
       */
      public int getUserUint03() {
        return userUint03_;
      }
      /**
       * <code>optional uint32 userUint03 = 25;</code>
       */
      public Builder setUserUint03(int value) {
        bitField0_ |= 0x01000000;
        userUint03_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint03 = 25;</code>
       */
      public Builder clearUserUint03() {
        bitField0_ = (bitField0_ & ~0x01000000);
        userUint03_ = 0;
        onChanged();
        return this;
      }

      private int userUint04_ ;
      /**
       * <code>optional uint32 userUint04 = 26;</code>
       */
      public boolean hasUserUint04() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 userUint04 = 26;</code>
       */
      public int getUserUint04() {
        return userUint04_;
      }
      /**
       * <code>optional uint32 userUint04 = 26;</code>
       */
      public Builder setUserUint04(int value) {
        bitField0_ |= 0x02000000;
        userUint04_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint04 = 26;</code>
       */
      public Builder clearUserUint04() {
        bitField0_ = (bitField0_ & ~0x02000000);
        userUint04_ = 0;
        onChanged();
        return this;
      }

      private int userUint05_ ;
      /**
       * <code>optional uint32 userUint05 = 27;</code>
       */
      public boolean hasUserUint05() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 userUint05 = 27;</code>
       */
      public int getUserUint05() {
        return userUint05_;
      }
      /**
       * <code>optional uint32 userUint05 = 27;</code>
       */
      public Builder setUserUint05(int value) {
        bitField0_ |= 0x04000000;
        userUint05_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint05 = 27;</code>
       */
      public Builder clearUserUint05() {
        bitField0_ = (bitField0_ & ~0x04000000);
        userUint05_ = 0;
        onChanged();
        return this;
      }

      private int userUint06_ ;
      /**
       * <code>optional uint32 userUint06 = 28;</code>
       */
      public boolean hasUserUint06() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 userUint06 = 28;</code>
       */
      public int getUserUint06() {
        return userUint06_;
      }
      /**
       * <code>optional uint32 userUint06 = 28;</code>
       */
      public Builder setUserUint06(int value) {
        bitField0_ |= 0x08000000;
        userUint06_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint06 = 28;</code>
       */
      public Builder clearUserUint06() {
        bitField0_ = (bitField0_ & ~0x08000000);
        userUint06_ = 0;
        onChanged();
        return this;
      }

      private int userUint07_ ;
      /**
       * <code>optional uint32 userUint07 = 29;</code>
       */
      public boolean hasUserUint07() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint32 userUint07 = 29;</code>
       */
      public int getUserUint07() {
        return userUint07_;
      }
      /**
       * <code>optional uint32 userUint07 = 29;</code>
       */
      public Builder setUserUint07(int value) {
        bitField0_ |= 0x10000000;
        userUint07_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint07 = 29;</code>
       */
      public Builder clearUserUint07() {
        bitField0_ = (bitField0_ & ~0x10000000);
        userUint07_ = 0;
        onChanged();
        return this;
      }

      private int userUint08_ ;
      /**
       * <code>optional uint32 userUint08 = 30;</code>
       */
      public boolean hasUserUint08() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint32 userUint08 = 30;</code>
       */
      public int getUserUint08() {
        return userUint08_;
      }
      /**
       * <code>optional uint32 userUint08 = 30;</code>
       */
      public Builder setUserUint08(int value) {
        bitField0_ |= 0x20000000;
        userUint08_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint08 = 30;</code>
       */
      public Builder clearUserUint08() {
        bitField0_ = (bitField0_ & ~0x20000000);
        userUint08_ = 0;
        onChanged();
        return this;
      }

      private int userUint09_ ;
      /**
       * <code>optional uint32 userUint09 = 31;</code>
       */
      public boolean hasUserUint09() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 userUint09 = 31;</code>
       */
      public int getUserUint09() {
        return userUint09_;
      }
      /**
       * <code>optional uint32 userUint09 = 31;</code>
       */
      public Builder setUserUint09(int value) {
        bitField0_ |= 0x40000000;
        userUint09_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint09 = 31;</code>
       */
      public Builder clearUserUint09() {
        bitField0_ = (bitField0_ & ~0x40000000);
        userUint09_ = 0;
        onChanged();
        return this;
      }

      private int userUint10_ ;
      /**
       * <code>optional uint32 userUint10 = 32;</code>
       */
      public boolean hasUserUint10() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 userUint10 = 32;</code>
       */
      public int getUserUint10() {
        return userUint10_;
      }
      /**
       * <code>optional uint32 userUint10 = 32;</code>
       */
      public Builder setUserUint10(int value) {
        bitField0_ |= 0x80000000;
        userUint10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 userUint10 = 32;</code>
       */
      public Builder clearUserUint10() {
        bitField0_ = (bitField0_ & ~0x80000000);
        userUint10_ = 0;
        onChanged();
        return this;
      }

      private int userInt01_ ;
      /**
       * <code>optional int32 userInt01 = 33;</code>
       */
      public boolean hasUserInt01() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 userInt01 = 33;</code>
       */
      public int getUserInt01() {
        return userInt01_;
      }
      /**
       * <code>optional int32 userInt01 = 33;</code>
       */
      public Builder setUserInt01(int value) {
        bitField1_ |= 0x00000001;
        userInt01_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt01 = 33;</code>
       */
      public Builder clearUserInt01() {
        bitField1_ = (bitField1_ & ~0x00000001);
        userInt01_ = 0;
        onChanged();
        return this;
      }

      private int userInt02_ ;
      /**
       * <code>optional int32 userInt02 = 34;</code>
       */
      public boolean hasUserInt02() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 userInt02 = 34;</code>
       */
      public int getUserInt02() {
        return userInt02_;
      }
      /**
       * <code>optional int32 userInt02 = 34;</code>
       */
      public Builder setUserInt02(int value) {
        bitField1_ |= 0x00000002;
        userInt02_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt02 = 34;</code>
       */
      public Builder clearUserInt02() {
        bitField1_ = (bitField1_ & ~0x00000002);
        userInt02_ = 0;
        onChanged();
        return this;
      }

      private int userInt03_ ;
      /**
       * <code>optional int32 userInt03 = 35;</code>
       */
      public boolean hasUserInt03() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 userInt03 = 35;</code>
       */
      public int getUserInt03() {
        return userInt03_;
      }
      /**
       * <code>optional int32 userInt03 = 35;</code>
       */
      public Builder setUserInt03(int value) {
        bitField1_ |= 0x00000004;
        userInt03_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt03 = 35;</code>
       */
      public Builder clearUserInt03() {
        bitField1_ = (bitField1_ & ~0x00000004);
        userInt03_ = 0;
        onChanged();
        return this;
      }

      private int userInt04_ ;
      /**
       * <code>optional int32 userInt04 = 36;</code>
       */
      public boolean hasUserInt04() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 userInt04 = 36;</code>
       */
      public int getUserInt04() {
        return userInt04_;
      }
      /**
       * <code>optional int32 userInt04 = 36;</code>
       */
      public Builder setUserInt04(int value) {
        bitField1_ |= 0x00000008;
        userInt04_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt04 = 36;</code>
       */
      public Builder clearUserInt04() {
        bitField1_ = (bitField1_ & ~0x00000008);
        userInt04_ = 0;
        onChanged();
        return this;
      }

      private int userInt05_ ;
      /**
       * <code>optional int32 userInt05 = 37;</code>
       */
      public boolean hasUserInt05() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 userInt05 = 37;</code>
       */
      public int getUserInt05() {
        return userInt05_;
      }
      /**
       * <code>optional int32 userInt05 = 37;</code>
       */
      public Builder setUserInt05(int value) {
        bitField1_ |= 0x00000010;
        userInt05_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt05 = 37;</code>
       */
      public Builder clearUserInt05() {
        bitField1_ = (bitField1_ & ~0x00000010);
        userInt05_ = 0;
        onChanged();
        return this;
      }

      private int userInt06_ ;
      /**
       * <code>optional int32 userInt06 = 38;</code>
       */
      public boolean hasUserInt06() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 userInt06 = 38;</code>
       */
      public int getUserInt06() {
        return userInt06_;
      }
      /**
       * <code>optional int32 userInt06 = 38;</code>
       */
      public Builder setUserInt06(int value) {
        bitField1_ |= 0x00000020;
        userInt06_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt06 = 38;</code>
       */
      public Builder clearUserInt06() {
        bitField1_ = (bitField1_ & ~0x00000020);
        userInt06_ = 0;
        onChanged();
        return this;
      }

      private int userInt07_ ;
      /**
       * <code>optional int32 userInt07 = 39;</code>
       */
      public boolean hasUserInt07() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 userInt07 = 39;</code>
       */
      public int getUserInt07() {
        return userInt07_;
      }
      /**
       * <code>optional int32 userInt07 = 39;</code>
       */
      public Builder setUserInt07(int value) {
        bitField1_ |= 0x00000040;
        userInt07_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt07 = 39;</code>
       */
      public Builder clearUserInt07() {
        bitField1_ = (bitField1_ & ~0x00000040);
        userInt07_ = 0;
        onChanged();
        return this;
      }

      private int userInt08_ ;
      /**
       * <code>optional int32 userInt08 = 40;</code>
       */
      public boolean hasUserInt08() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 userInt08 = 40;</code>
       */
      public int getUserInt08() {
        return userInt08_;
      }
      /**
       * <code>optional int32 userInt08 = 40;</code>
       */
      public Builder setUserInt08(int value) {
        bitField1_ |= 0x00000080;
        userInt08_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt08 = 40;</code>
       */
      public Builder clearUserInt08() {
        bitField1_ = (bitField1_ & ~0x00000080);
        userInt08_ = 0;
        onChanged();
        return this;
      }

      private int userInt09_ ;
      /**
       * <code>optional int32 userInt09 = 41;</code>
       */
      public boolean hasUserInt09() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 userInt09 = 41;</code>
       */
      public int getUserInt09() {
        return userInt09_;
      }
      /**
       * <code>optional int32 userInt09 = 41;</code>
       */
      public Builder setUserInt09(int value) {
        bitField1_ |= 0x00000100;
        userInt09_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt09 = 41;</code>
       */
      public Builder clearUserInt09() {
        bitField1_ = (bitField1_ & ~0x00000100);
        userInt09_ = 0;
        onChanged();
        return this;
      }

      private int userInt10_ ;
      /**
       * <code>optional int32 userInt10 = 42;</code>
       */
      public boolean hasUserInt10() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 userInt10 = 42;</code>
       */
      public int getUserInt10() {
        return userInt10_;
      }
      /**
       * <code>optional int32 userInt10 = 42;</code>
       */
      public Builder setUserInt10(int value) {
        bitField1_ |= 0x00000200;
        userInt10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userInt10 = 42;</code>
       */
      public Builder clearUserInt10() {
        bitField1_ = (bitField1_ & ~0x00000200);
        userInt10_ = 0;
        onChanged();
        return this;
      }

      private float userFloat01_ ;
      /**
       * <code>optional float userFloat01 = 43;</code>
       */
      public boolean hasUserFloat01() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float userFloat01 = 43;</code>
       */
      public float getUserFloat01() {
        return userFloat01_;
      }
      /**
       * <code>optional float userFloat01 = 43;</code>
       */
      public Builder setUserFloat01(float value) {
        bitField1_ |= 0x00000400;
        userFloat01_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat01 = 43;</code>
       */
      public Builder clearUserFloat01() {
        bitField1_ = (bitField1_ & ~0x00000400);
        userFloat01_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat02_ ;
      /**
       * <code>optional float userFloat02 = 44;</code>
       */
      public boolean hasUserFloat02() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float userFloat02 = 44;</code>
       */
      public float getUserFloat02() {
        return userFloat02_;
      }
      /**
       * <code>optional float userFloat02 = 44;</code>
       */
      public Builder setUserFloat02(float value) {
        bitField1_ |= 0x00000800;
        userFloat02_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat02 = 44;</code>
       */
      public Builder clearUserFloat02() {
        bitField1_ = (bitField1_ & ~0x00000800);
        userFloat02_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat03_ ;
      /**
       * <code>optional float userFloat03 = 45;</code>
       */
      public boolean hasUserFloat03() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float userFloat03 = 45;</code>
       */
      public float getUserFloat03() {
        return userFloat03_;
      }
      /**
       * <code>optional float userFloat03 = 45;</code>
       */
      public Builder setUserFloat03(float value) {
        bitField1_ |= 0x00001000;
        userFloat03_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat03 = 45;</code>
       */
      public Builder clearUserFloat03() {
        bitField1_ = (bitField1_ & ~0x00001000);
        userFloat03_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat04_ ;
      /**
       * <code>optional float userFloat04 = 46;</code>
       */
      public boolean hasUserFloat04() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float userFloat04 = 46;</code>
       */
      public float getUserFloat04() {
        return userFloat04_;
      }
      /**
       * <code>optional float userFloat04 = 46;</code>
       */
      public Builder setUserFloat04(float value) {
        bitField1_ |= 0x00002000;
        userFloat04_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat04 = 46;</code>
       */
      public Builder clearUserFloat04() {
        bitField1_ = (bitField1_ & ~0x00002000);
        userFloat04_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat05_ ;
      /**
       * <code>optional float userFloat05 = 47;</code>
       */
      public boolean hasUserFloat05() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float userFloat05 = 47;</code>
       */
      public float getUserFloat05() {
        return userFloat05_;
      }
      /**
       * <code>optional float userFloat05 = 47;</code>
       */
      public Builder setUserFloat05(float value) {
        bitField1_ |= 0x00004000;
        userFloat05_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat05 = 47;</code>
       */
      public Builder clearUserFloat05() {
        bitField1_ = (bitField1_ & ~0x00004000);
        userFloat05_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat06_ ;
      /**
       * <code>optional float userFloat06 = 48;</code>
       */
      public boolean hasUserFloat06() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float userFloat06 = 48;</code>
       */
      public float getUserFloat06() {
        return userFloat06_;
      }
      /**
       * <code>optional float userFloat06 = 48;</code>
       */
      public Builder setUserFloat06(float value) {
        bitField1_ |= 0x00008000;
        userFloat06_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat06 = 48;</code>
       */
      public Builder clearUserFloat06() {
        bitField1_ = (bitField1_ & ~0x00008000);
        userFloat06_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat07_ ;
      /**
       * <code>optional float userFloat07 = 49;</code>
       */
      public boolean hasUserFloat07() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float userFloat07 = 49;</code>
       */
      public float getUserFloat07() {
        return userFloat07_;
      }
      /**
       * <code>optional float userFloat07 = 49;</code>
       */
      public Builder setUserFloat07(float value) {
        bitField1_ |= 0x00010000;
        userFloat07_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat07 = 49;</code>
       */
      public Builder clearUserFloat07() {
        bitField1_ = (bitField1_ & ~0x00010000);
        userFloat07_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat08_ ;
      /**
       * <code>optional float userFloat08 = 50;</code>
       */
      public boolean hasUserFloat08() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional float userFloat08 = 50;</code>
       */
      public float getUserFloat08() {
        return userFloat08_;
      }
      /**
       * <code>optional float userFloat08 = 50;</code>
       */
      public Builder setUserFloat08(float value) {
        bitField1_ |= 0x00020000;
        userFloat08_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat08 = 50;</code>
       */
      public Builder clearUserFloat08() {
        bitField1_ = (bitField1_ & ~0x00020000);
        userFloat08_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat09_ ;
      /**
       * <code>optional float userFloat09 = 51;</code>
       */
      public boolean hasUserFloat09() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional float userFloat09 = 51;</code>
       */
      public float getUserFloat09() {
        return userFloat09_;
      }
      /**
       * <code>optional float userFloat09 = 51;</code>
       */
      public Builder setUserFloat09(float value) {
        bitField1_ |= 0x00040000;
        userFloat09_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat09 = 51;</code>
       */
      public Builder clearUserFloat09() {
        bitField1_ = (bitField1_ & ~0x00040000);
        userFloat09_ = 0F;
        onChanged();
        return this;
      }

      private float userFloat10_ ;
      /**
       * <code>optional float userFloat10 = 52;</code>
       */
      public boolean hasUserFloat10() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional float userFloat10 = 52;</code>
       */
      public float getUserFloat10() {
        return userFloat10_;
      }
      /**
       * <code>optional float userFloat10 = 52;</code>
       */
      public Builder setUserFloat10(float value) {
        bitField1_ |= 0x00080000;
        userFloat10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float userFloat10 = 52;</code>
       */
      public Builder clearUserFloat10() {
        bitField1_ = (bitField1_ & ~0x00080000);
        userFloat10_ = 0F;
        onChanged();
        return this;
      }

      private int gesture_ ;
      /**
       * <code>optional int32 gesture = 53;</code>
       */
      public boolean hasGesture() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 gesture = 53;</code>
       */
      public int getGesture() {
        return gesture_;
      }
      /**
       * <code>optional int32 gesture = 53;</code>
       */
      public Builder setGesture(int value) {
        bitField1_ |= 0x00100000;
        gesture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gesture = 53;</code>
       */
      public Builder clearGesture() {
        bitField1_ = (bitField1_ & ~0x00100000);
        gesture_ = 0;
        onChanged();
        return this;
      }

      private int mouseClick_ ;
      /**
       * <code>optional int32 mouseClick = 54;</code>
       */
      public boolean hasMouseClick() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 mouseClick = 54;</code>
       */
      public int getMouseClick() {
        return mouseClick_;
      }
      /**
       * <code>optional int32 mouseClick = 54;</code>
       */
      public Builder setMouseClick(int value) {
        bitField1_ |= 0x00200000;
        mouseClick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mouseClick = 54;</code>
       */
      public Builder clearMouseClick() {
        bitField1_ = (bitField1_ & ~0x00200000);
        mouseClick_ = 0;
        onChanged();
        return this;
      }

      private StnEggPkt.Float3 gaitPos_ = StnEggPkt.Float3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder> gaitPosBuilder_;
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public boolean hasGaitPos() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public StnEggPkt.Float3 getGaitPos() {
        if (gaitPosBuilder_ == null) {
          return gaitPos_;
        } else {
          return gaitPosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public Builder setGaitPos(StnEggPkt.Float3 value) {
        if (gaitPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gaitPos_ = value;
          onChanged();
        } else {
          gaitPosBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public Builder setGaitPos(
              StnEggPkt.Float3.Builder builderForValue) {
        if (gaitPosBuilder_ == null) {
          gaitPos_ = builderForValue.build();
          onChanged();
        } else {
          gaitPosBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public Builder mergeGaitPos(StnEggPkt.Float3 value) {
        if (gaitPosBuilder_ == null) {
          if (((bitField1_ & 0x00400000) == 0x00400000) &&
                  gaitPos_ != StnEggPkt.Float3.getDefaultInstance()) {
            gaitPos_ =
                    StnEggPkt.Float3.newBuilder(gaitPos_).mergeFrom(value).buildPartial();
          } else {
            gaitPos_ = value;
          }
          onChanged();
        } else {
          gaitPosBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public Builder clearGaitPos() {
        if (gaitPosBuilder_ == null) {
          gaitPos_ = StnEggPkt.Float3.getDefaultInstance();
          onChanged();
        } else {
          gaitPosBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public StnEggPkt.Float3.Builder getGaitPosBuilder() {
        bitField1_ |= 0x00400000;
        onChanged();
        return getGaitPosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      public StnEggPkt.Float3OrBuilder getGaitPosOrBuilder() {
        if (gaitPosBuilder_ != null) {
          return gaitPosBuilder_.getMessageOrBuilder();
        } else {
          return gaitPos_;
        }
      }
      /**
       * <code>optional .Float3 gait_pos = 55;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>
      getGaitPosFieldBuilder() {
        if (gaitPosBuilder_ == null) {
          gaitPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Float3, StnEggPkt.Float3.Builder, StnEggPkt.Float3OrBuilder>(
                  getGaitPos(),
                  getParentForChildren(),
                  isClean());
          gaitPos_ = null;
        }
        return gaitPosBuilder_;
      }

      private boolean gaitZupt_ ;
      /**
       * <code>optional bool gait_zupt = 56;</code>
       */
      public boolean hasGaitZupt() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional bool gait_zupt = 56;</code>
       */
      public boolean getGaitZupt() {
        return gaitZupt_;
      }
      /**
       * <code>optional bool gait_zupt = 56;</code>
       */
      public Builder setGaitZupt(boolean value) {
        bitField1_ |= 0x00800000;
        gaitZupt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool gait_zupt = 56;</code>
       */
      public Builder clearGaitZupt() {
        bitField1_ = (bitField1_ & ~0x00800000);
        gaitZupt_ = false;
        onChanged();
        return this;
      }

      private int inputCommandWho_ ;
      /**
       * <code>optional int32 inputCommandWho = 57;</code>
       */
      public boolean hasInputCommandWho() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 inputCommandWho = 57;</code>
       */
      public int getInputCommandWho() {
        return inputCommandWho_;
      }
      /**
       * <code>optional int32 inputCommandWho = 57;</code>
       */
      public Builder setInputCommandWho(int value) {
        bitField1_ |= 0x01000000;
        inputCommandWho_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inputCommandWho = 57;</code>
       */
      public Builder clearInputCommandWho() {
        bitField1_ = (bitField1_ & ~0x01000000);
        inputCommandWho_ = 0;
        onChanged();
        return this;
      }

      private int inputCommandWhat_ ;
      /**
       * <code>optional int32 inputCommandWhat = 58;</code>
       */
      public boolean hasInputCommandWhat() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 inputCommandWhat = 58;</code>
       */
      public int getInputCommandWhat() {
        return inputCommandWhat_;
      }
      /**
       * <code>optional int32 inputCommandWhat = 58;</code>
       */
      public Builder setInputCommandWhat(int value) {
        bitField1_ |= 0x02000000;
        inputCommandWhat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inputCommandWhat = 58;</code>
       */
      public Builder clearInputCommandWhat() {
        bitField1_ = (bitField1_ & ~0x02000000);
        inputCommandWhat_ = 0;
        onChanged();
        return this;
      }

      private int inputCommandValue_ ;
      /**
       * <code>optional int32 inputCommandValue = 59;</code>
       */
      public boolean hasInputCommandValue() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 inputCommandValue = 59;</code>
       */
      public int getInputCommandValue() {
        return inputCommandValue_;
      }
      /**
       * <code>optional int32 inputCommandValue = 59;</code>
       */
      public Builder setInputCommandValue(int value) {
        bitField1_ |= 0x04000000;
        inputCommandValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 inputCommandValue = 59;</code>
       */
      public Builder clearInputCommandValue() {
        bitField1_ = (bitField1_ & ~0x04000000);
        inputCommandValue_ = 0;
        onChanged();
        return this;
      }

      private int sespFunctionalityType_ ;
      /**
       * <code>optional int32 sespFunctionalityType = 60;</code>
       */
      public boolean hasSespFunctionalityType() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 sespFunctionalityType = 60;</code>
       */
      public int getSespFunctionalityType() {
        return sespFunctionalityType_;
      }
      /**
       * <code>optional int32 sespFunctionalityType = 60;</code>
       */
      public Builder setSespFunctionalityType(int value) {
        bitField1_ |= 0x08000000;
        sespFunctionalityType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sespFunctionalityType = 60;</code>
       */
      public Builder clearSespFunctionalityType() {
        bitField1_ = (bitField1_ & ~0x08000000);
        sespFunctionalityType_ = 0;
        onChanged();
        return this;
      }

      private int sespFrequency_ ;
      /**
       * <code>optional int32 sespFrequency = 61;</code>
       */
      public boolean hasSespFrequency() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 sespFrequency = 61;</code>
       */
      public int getSespFrequency() {
        return sespFrequency_;
      }
      /**
       * <code>optional int32 sespFrequency = 61;</code>
       */
      public Builder setSespFrequency(int value) {
        bitField1_ |= 0x10000000;
        sespFrequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sespFrequency = 61;</code>
       */
      public Builder clearSespFrequency() {
        bitField1_ = (bitField1_ & ~0x10000000);
        sespFrequency_ = 0;
        onChanged();
        return this;
      }

      private int sespUnit_ ;
      /**
       * <code>optional int32 sespUnit = 62;</code>
       */
      public boolean hasSespUnit() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 sespUnit = 62;</code>
       */
      public int getSespUnit() {
        return sespUnit_;
      }
      /**
       * <code>optional int32 sespUnit = 62;</code>
       */
      public Builder setSespUnit(int value) {
        bitField1_ |= 0x20000000;
        sespUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sespUnit = 62;</code>
       */
      public Builder clearSespUnit() {
        bitField1_ = (bitField1_ & ~0x20000000);
        sespUnit_ = 0;
        onChanged();
        return this;
      }

      private int sespSentOutsideBoard_ ;
      /**
       * <code>optional int32 sespSentOutsideBoard = 63;</code>
       */
      public boolean hasSespSentOutsideBoard() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 sespSentOutsideBoard = 63;</code>
       */
      public int getSespSentOutsideBoard() {
        return sespSentOutsideBoard_;
      }
      /**
       * <code>optional int32 sespSentOutsideBoard = 63;</code>
       */
      public Builder setSespSentOutsideBoard(int value) {
        bitField1_ |= 0x40000000;
        sespSentOutsideBoard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sespSentOutsideBoard = 63;</code>
       */
      public Builder clearSespSentOutsideBoard() {
        bitField1_ = (bitField1_ & ~0x40000000);
        sespSentOutsideBoard_ = 0;
        onChanged();
        return this;
      }

      private int serpCommand_ ;
      /**
       * <code>optional uint32 serpCommand = 64;</code>
       */
      public boolean hasSerpCommand() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 serpCommand = 64;</code>
       */
      public int getSerpCommand() {
        return serpCommand_;
      }
      /**
       * <code>optional uint32 serpCommand = 64;</code>
       */
      public Builder setSerpCommand(int value) {
        bitField1_ |= 0x80000000;
        serpCommand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 serpCommand = 64;</code>
       */
      public Builder clearSerpCommand() {
        bitField1_ = (bitField1_ & ~0x80000000);
        serpCommand_ = 0;
        onChanged();
        return this;
      }

      private StnEggPkt.Gait gait_ = StnEggPkt.Gait.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Gait, StnEggPkt.Gait.Builder, StnEggPkt.GaitOrBuilder> gaitBuilder_;
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public boolean hasGait() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public StnEggPkt.Gait getGait() {
        if (gaitBuilder_ == null) {
          return gait_;
        } else {
          return gaitBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public Builder setGait(StnEggPkt.Gait value) {
        if (gaitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gait_ = value;
          onChanged();
        } else {
          gaitBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public Builder setGait(
              StnEggPkt.Gait.Builder builderForValue) {
        if (gaitBuilder_ == null) {
          gait_ = builderForValue.build();
          onChanged();
        } else {
          gaitBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public Builder mergeGait(StnEggPkt.Gait value) {
        if (gaitBuilder_ == null) {
          if (((bitField2_ & 0x00000001) == 0x00000001) &&
                  gait_ != StnEggPkt.Gait.getDefaultInstance()) {
            gait_ =
                    StnEggPkt.Gait.newBuilder(gait_).mergeFrom(value).buildPartial();
          } else {
            gait_ = value;
          }
          onChanged();
        } else {
          gaitBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public Builder clearGait() {
        if (gaitBuilder_ == null) {
          gait_ = StnEggPkt.Gait.getDefaultInstance();
          onChanged();
        } else {
          gaitBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public StnEggPkt.Gait.Builder getGaitBuilder() {
        bitField2_ |= 0x00000001;
        onChanged();
        return getGaitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      public StnEggPkt.GaitOrBuilder getGaitOrBuilder() {
        if (gaitBuilder_ != null) {
          return gaitBuilder_.getMessageOrBuilder();
        } else {
          return gait_;
        }
      }
      /**
       * <code>optional .Gait gait = 65;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Gait, StnEggPkt.Gait.Builder, StnEggPkt.GaitOrBuilder>
      getGaitFieldBuilder() {
        if (gaitBuilder_ == null) {
          gaitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Gait, StnEggPkt.Gait.Builder, StnEggPkt.GaitOrBuilder>(
                  getGait(),
                  getParentForChildren(),
                  isClean());
          gait_ = null;
        }
        return gaitBuilder_;
      }

      private StnEggPkt.Date date_ = StnEggPkt.Date.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Date, StnEggPkt.Date.Builder, StnEggPkt.DateOrBuilder> dateBuilder_;
      /**
       * <code>optional .Date date = 66;</code>
       */
      public boolean hasDate() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public StnEggPkt.Date getDate() {
        if (dateBuilder_ == null) {
          return date_;
        } else {
          return dateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public Builder setDate(StnEggPkt.Date value) {
        if (dateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          date_ = value;
          onChanged();
        } else {
          dateBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public Builder setDate(
              StnEggPkt.Date.Builder builderForValue) {
        if (dateBuilder_ == null) {
          date_ = builderForValue.build();
          onChanged();
        } else {
          dateBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public Builder mergeDate(StnEggPkt.Date value) {
        if (dateBuilder_ == null) {
          if (((bitField2_ & 0x00000002) == 0x00000002) &&
                  date_ != StnEggPkt.Date.getDefaultInstance()) {
            date_ =
                    StnEggPkt.Date.newBuilder(date_).mergeFrom(value).buildPartial();
          } else {
            date_ = value;
          }
          onChanged();
        } else {
          dateBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public Builder clearDate() {
        if (dateBuilder_ == null) {
          date_ = StnEggPkt.Date.getDefaultInstance();
          onChanged();
        } else {
          dateBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public StnEggPkt.Date.Builder getDateBuilder() {
        bitField2_ |= 0x00000002;
        onChanged();
        return getDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      public StnEggPkt.DateOrBuilder getDateOrBuilder() {
        if (dateBuilder_ != null) {
          return dateBuilder_.getMessageOrBuilder();
        } else {
          return date_;
        }
      }
      /**
       * <code>optional .Date date = 66;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Date, StnEggPkt.Date.Builder, StnEggPkt.DateOrBuilder>
      getDateFieldBuilder() {
        if (dateBuilder_ == null) {
          dateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Date, StnEggPkt.Date.Builder, StnEggPkt.DateOrBuilder>(
                  getDate(),
                  getParentForChildren(),
                  isClean());
          date_ = null;
        }
        return dateBuilder_;
      }

      private StnEggPkt.Physique physique_ = StnEggPkt.Physique.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Physique, StnEggPkt.Physique.Builder, StnEggPkt.PhysiqueOrBuilder> physiqueBuilder_;
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public boolean hasPhysique() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public StnEggPkt.Physique getPhysique() {
        if (physiqueBuilder_ == null) {
          return physique_;
        } else {
          return physiqueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public Builder setPhysique(StnEggPkt.Physique value) {
        if (physiqueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          physique_ = value;
          onChanged();
        } else {
          physiqueBuilder_.setMessage(value);
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public Builder setPhysique(
              StnEggPkt.Physique.Builder builderForValue) {
        if (physiqueBuilder_ == null) {
          physique_ = builderForValue.build();
          onChanged();
        } else {
          physiqueBuilder_.setMessage(builderForValue.build());
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public Builder mergePhysique(StnEggPkt.Physique value) {
        if (physiqueBuilder_ == null) {
          if (((bitField2_ & 0x00000004) == 0x00000004) &&
                  physique_ != StnEggPkt.Physique.getDefaultInstance()) {
            physique_ =
                    StnEggPkt.Physique.newBuilder(physique_).mergeFrom(value).buildPartial();
          } else {
            physique_ = value;
          }
          onChanged();
        } else {
          physiqueBuilder_.mergeFrom(value);
        }
        bitField2_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public Builder clearPhysique() {
        if (physiqueBuilder_ == null) {
          physique_ = StnEggPkt.Physique.getDefaultInstance();
          onChanged();
        } else {
          physiqueBuilder_.clear();
        }
        bitField2_ = (bitField2_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public StnEggPkt.Physique.Builder getPhysiqueBuilder() {
        bitField2_ |= 0x00000004;
        onChanged();
        return getPhysiqueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      public StnEggPkt.PhysiqueOrBuilder getPhysiqueOrBuilder() {
        if (physiqueBuilder_ != null) {
          return physiqueBuilder_.getMessageOrBuilder();
        } else {
          return physique_;
        }
      }
      /**
       * <code>optional .Physique physique = 67;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
              StnEggPkt.Physique, StnEggPkt.Physique.Builder, StnEggPkt.PhysiqueOrBuilder>
      getPhysiqueFieldBuilder() {
        if (physiqueBuilder_ == null) {
          physiqueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  StnEggPkt.Physique, StnEggPkt.Physique.Builder, StnEggPkt.PhysiqueOrBuilder>(
                  getPhysique(),
                  getParentForChildren(),
                  isClean());
          physique_ = null;
        }
        return physiqueBuilder_;
      }

      private int durationMinutes_ ;
      /**
       * <code>optional int32 durationMinutes = 68;</code>
       */
      public boolean hasDurationMinutes() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 durationMinutes = 68;</code>
       */
      public int getDurationMinutes() {
        return durationMinutes_;
      }
      /**
       * <code>optional int32 durationMinutes = 68;</code>
       */
      public Builder setDurationMinutes(int value) {
        bitField2_ |= 0x00000008;
        durationMinutes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 durationMinutes = 68;</code>
       */
      public Builder clearDurationMinutes() {
        bitField2_ = (bitField2_ & ~0x00000008);
        durationMinutes_ = 0;
        onChanged();
        return this;
      }

      private int calories_ ;
      /**
       * <code>optional int32 calories = 69;</code>
       */
      public boolean hasCalories() {
        return ((bitField2_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 calories = 69;</code>
       */
      public int getCalories() {
        return calories_;
      }
      /**
       * <code>optional int32 calories = 69;</code>
       */
      public Builder setCalories(int value) {
        bitField2_ |= 0x00000010;
        calories_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 calories = 69;</code>
       */
      public Builder clearCalories() {
        bitField2_ = (bitField2_ & ~0x00000010);
        calories_ = 0;
        onChanged();
        return this;
      }

      private int distanceMeters_ ;
      /**
       * <code>optional int32 distanceMeters = 70;</code>
       */
      public boolean hasDistanceMeters() {
        return ((bitField2_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 distanceMeters = 70;</code>
       */
      public int getDistanceMeters() {
        return distanceMeters_;
      }
      /**
       * <code>optional int32 distanceMeters = 70;</code>
       */
      public Builder setDistanceMeters(int value) {
        bitField2_ |= 0x00000020;
        distanceMeters_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 distanceMeters = 70;</code>
       */
      public Builder clearDistanceMeters() {
        bitField2_ = (bitField2_ & ~0x00000020);
        distanceMeters_ = 0;
        onChanged();
        return this;
      }

      private int ledColor_ ;
      /**
       * <code>optional int32 ledColor = 71;</code>
       */
      public boolean hasLedColor() {
        return ((bitField2_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 ledColor = 71;</code>
       */
      public int getLedColor() {
        return ledColor_;
      }
      /**
       * <code>optional int32 ledColor = 71;</code>
       */
      public Builder setLedColor(int value) {
        bitField2_ |= 0x00000040;
        ledColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ledColor = 71;</code>
       */
      public Builder clearLedColor() {
        bitField2_ = (bitField2_ & ~0x00000040);
        ledColor_ = 0;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>optional int32 count = 72;</code>
       */
      public boolean hasCount() {
        return ((bitField2_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 count = 72;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional int32 count = 72;</code>
       */
      public Builder setCount(int value) {
        bitField2_ |= 0x00000080;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 count = 72;</code>
       */
      public Builder clearCount() {
        bitField2_ = (bitField2_ & ~0x00000080);
        count_ = 0;
        onChanged();
        return this;
      }

      private int durationSeconds_ ;
      /**
       * <code>optional uint32 durationSeconds = 73;</code>
       */
      public boolean hasDurationSeconds() {
        return ((bitField2_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 durationSeconds = 73;</code>
       */
      public int getDurationSeconds() {
        return durationSeconds_;
      }
      /**
       * <code>optional uint32 durationSeconds = 73;</code>
       */
      public Builder setDurationSeconds(int value) {
        bitField2_ |= 0x00000100;
        durationSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 durationSeconds = 73;</code>
       */
      public Builder clearDurationSeconds() {
        bitField2_ = (bitField2_ & ~0x00000100);
        durationSeconds_ = 0;
        onChanged();
        return this;
      }

      private int hearthRate_ ;
      /**
       * <code>optional uint32 hearthRate = 74;</code>
       */
      public boolean hasHearthRate() {
        return ((bitField2_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 hearthRate = 74;</code>
       */
      public int getHearthRate() {
        return hearthRate_;
      }
      /**
       * <code>optional uint32 hearthRate = 74;</code>
       */
      public Builder setHearthRate(int value) {
        bitField2_ |= 0x00000200;
        hearthRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hearthRate = 74;</code>
       */
      public Builder clearHearthRate() {
        bitField2_ = (bitField2_ & ~0x00000200);
        hearthRate_ = 0;
        onChanged();
        return this;
      }

      private int battery_ ;
      /**
       * <code>optional uint32 battery = 75;</code>
       */
      public boolean hasBattery() {
        return ((bitField2_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 battery = 75;</code>
       */
      public int getBattery() {
        return battery_;
      }
      /**
       * <code>optional uint32 battery = 75;</code>
       */
      public Builder setBattery(int value) {
        bitField2_ |= 0x00000400;
        battery_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battery = 75;</code>
       */
      public Builder clearBattery() {
        bitField2_ = (bitField2_ & ~0x00000400);
        battery_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StnEggPacket)
    }

    static {
      defaultInstance = new StnEggPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StnEggPacket)
  }

  public interface Float4OrBuilder extends
          // @@protoc_insertion_point(interface_extends:Float4)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float f1 = 1;</code>
     */
    boolean hasF1();
    /**
     * <code>required float f1 = 1;</code>
     */
    float getF1();

    /**
     * <code>required float f2 = 2;</code>
     */
    boolean hasF2();
    /**
     * <code>required float f2 = 2;</code>
     */
    float getF2();

    /**
     * <code>required float f3 = 3;</code>
     */
    boolean hasF3();
    /**
     * <code>required float f3 = 3;</code>
     */
    float getF3();

    /**
     * <code>required float f4 = 4;</code>
     */
    boolean hasF4();
    /**
     * <code>required float f4 = 4;</code>
     */
    float getF4();
  }
  /**
   * Protobuf type {@code Float4}
   */
  public static final class Float4 extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:Float4)
          Float4OrBuilder {
    // Use Float4.newBuilder() to construct.
    private Float4(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Float4(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Float4 defaultInstance;
    public static Float4 getDefaultInstance() {
      return defaultInstance;
    }

    public Float4 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Float4(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              f1_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              f2_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              f3_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              f4_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_Float4_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_Float4_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.Float4.class, StnEggPkt.Float4.Builder.class);
    }

    public static com.google.protobuf.Parser<Float4> PARSER =
            new com.google.protobuf.AbstractParser<Float4>() {
              public Float4 parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new Float4(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<Float4> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int F1_FIELD_NUMBER = 1;
    private float f1_;
    /**
     * <code>required float f1 = 1;</code>
     */
    public boolean hasF1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float f1 = 1;</code>
     */
    public float getF1() {
      return f1_;
    }

    public static final int F2_FIELD_NUMBER = 2;
    private float f2_;
    /**
     * <code>required float f2 = 2;</code>
     */
    public boolean hasF2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float f2 = 2;</code>
     */
    public float getF2() {
      return f2_;
    }

    public static final int F3_FIELD_NUMBER = 3;
    private float f3_;
    /**
     * <code>required float f3 = 3;</code>
     */
    public boolean hasF3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float f3 = 3;</code>
     */
    public float getF3() {
      return f3_;
    }

    public static final int F4_FIELD_NUMBER = 4;
    private float f4_;
    /**
     * <code>required float f4 = 4;</code>
     */
    public boolean hasF4() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float f4 = 4;</code>
     */
    public float getF4() {
      return f4_;
    }

    private void initFields() {
      f1_ = 0F;
      f2_ = 0F;
      f3_ = 0F;
      f4_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasF1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, f3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, f4_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(3, f3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(4, f4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.Float4 parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Float4 parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Float4 parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Float4 parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Float4 parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Float4 parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Float4 parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.Float4 parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Float4 parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Float4 parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.Float4 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Float4}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Float4)
            StnEggPkt.Float4OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_Float4_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_Float4_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.Float4.class, StnEggPkt.Float4.Builder.class);
      }

      // Construct using StnEggPkt.Float4.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        f1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        f2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        f3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        f4_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_Float4_descriptor;
      }

      public StnEggPkt.Float4 getDefaultInstanceForType() {
        return StnEggPkt.Float4.getDefaultInstance();
      }

      public StnEggPkt.Float4 build() {
        StnEggPkt.Float4 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.Float4 buildPartial() {
        StnEggPkt.Float4 result = new StnEggPkt.Float4(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.f1_ = f1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.f2_ = f2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.f3_ = f3_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.f4_ = f4_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.Float4) {
          return mergeFrom((StnEggPkt.Float4)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.Float4 other) {
        if (other == StnEggPkt.Float4.getDefaultInstance()) return this;
        if (other.hasF1()) {
          setF1(other.getF1());
        }
        if (other.hasF2()) {
          setF2(other.getF2());
        }
        if (other.hasF3()) {
          setF3(other.getF3());
        }
        if (other.hasF4()) {
          setF4(other.getF4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasF1()) {

          return false;
        }
        if (!hasF2()) {

          return false;
        }
        if (!hasF3()) {

          return false;
        }
        if (!hasF4()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.Float4 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.Float4) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float f1_ ;
      /**
       * <code>required float f1 = 1;</code>
       */
      public boolean hasF1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public float getF1() {
        return f1_;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder setF1(float value) {
        bitField0_ |= 0x00000001;
        f1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder clearF1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        f1_ = 0F;
        onChanged();
        return this;
      }

      private float f2_ ;
      /**
       * <code>required float f2 = 2;</code>
       */
      public boolean hasF2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public float getF2() {
        return f2_;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder setF2(float value) {
        bitField0_ |= 0x00000002;
        f2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder clearF2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        f2_ = 0F;
        onChanged();
        return this;
      }

      private float f3_ ;
      /**
       * <code>required float f3 = 3;</code>
       */
      public boolean hasF3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public float getF3() {
        return f3_;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder setF3(float value) {
        bitField0_ |= 0x00000004;
        f3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder clearF3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        f3_ = 0F;
        onChanged();
        return this;
      }

      private float f4_ ;
      /**
       * <code>required float f4 = 4;</code>
       */
      public boolean hasF4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float f4 = 4;</code>
       */
      public float getF4() {
        return f4_;
      }
      /**
       * <code>required float f4 = 4;</code>
       */
      public Builder setF4(float value) {
        bitField0_ |= 0x00000008;
        f4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f4 = 4;</code>
       */
      public Builder clearF4() {
        bitField0_ = (bitField0_ & ~0x00000008);
        f4_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Float4)
    }

    static {
      defaultInstance = new Float4(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Float4)
  }

  public interface Float3OrBuilder extends
          // @@protoc_insertion_point(interface_extends:Float3)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float f1 = 1;</code>
     */
    boolean hasF1();
    /**
     * <code>required float f1 = 1;</code>
     */
    float getF1();

    /**
     * <code>required float f2 = 2;</code>
     */
    boolean hasF2();
    /**
     * <code>required float f2 = 2;</code>
     */
    float getF2();

    /**
     * <code>required float f3 = 3;</code>
     */
    boolean hasF3();
    /**
     * <code>required float f3 = 3;</code>
     */
    float getF3();
  }
  /**
   * Protobuf type {@code Float3}
   */
  public static final class Float3 extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:Float3)
          Float3OrBuilder {
    // Use Float3.newBuilder() to construct.
    private Float3(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Float3(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Float3 defaultInstance;
    public static Float3 getDefaultInstance() {
      return defaultInstance;
    }

    public Float3 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Float3(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              f1_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              f2_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              f3_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_Float3_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_Float3_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.Float3.class, StnEggPkt.Float3.Builder.class);
    }

    public static com.google.protobuf.Parser<Float3> PARSER =
            new com.google.protobuf.AbstractParser<Float3>() {
              public Float3 parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new Float3(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<Float3> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int F1_FIELD_NUMBER = 1;
    private float f1_;
    /**
     * <code>required float f1 = 1;</code>
     */
    public boolean hasF1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float f1 = 1;</code>
     */
    public float getF1() {
      return f1_;
    }

    public static final int F2_FIELD_NUMBER = 2;
    private float f2_;
    /**
     * <code>required float f2 = 2;</code>
     */
    public boolean hasF2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float f2 = 2;</code>
     */
    public float getF2() {
      return f2_;
    }

    public static final int F3_FIELD_NUMBER = 3;
    private float f3_;
    /**
     * <code>required float f3 = 3;</code>
     */
    public boolean hasF3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float f3 = 3;</code>
     */
    public float getF3() {
      return f3_;
    }

    private void initFields() {
      f1_ = 0F;
      f2_ = 0F;
      f3_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasF1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasF3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, f3_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(1, f1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(2, f2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(3, f3_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.Float3 parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Float3 parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Float3 parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Float3 parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Float3 parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Float3 parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Float3 parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.Float3 parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Float3 parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Float3 parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.Float3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Float3}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Float3)
            StnEggPkt.Float3OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_Float3_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_Float3_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.Float3.class, StnEggPkt.Float3.Builder.class);
      }

      // Construct using StnEggPkt.Float3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        f1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        f2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        f3_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_Float3_descriptor;
      }

      public StnEggPkt.Float3 getDefaultInstanceForType() {
        return StnEggPkt.Float3.getDefaultInstance();
      }

      public StnEggPkt.Float3 build() {
        StnEggPkt.Float3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.Float3 buildPartial() {
        StnEggPkt.Float3 result = new StnEggPkt.Float3(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.f1_ = f1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.f2_ = f2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.f3_ = f3_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.Float3) {
          return mergeFrom((StnEggPkt.Float3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.Float3 other) {
        if (other == StnEggPkt.Float3.getDefaultInstance()) return this;
        if (other.hasF1()) {
          setF1(other.getF1());
        }
        if (other.hasF2()) {
          setF2(other.getF2());
        }
        if (other.hasF3()) {
          setF3(other.getF3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasF1()) {

          return false;
        }
        if (!hasF2()) {

          return false;
        }
        if (!hasF3()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.Float3 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.Float3) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float f1_ ;
      /**
       * <code>required float f1 = 1;</code>
       */
      public boolean hasF1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public float getF1() {
        return f1_;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder setF1(float value) {
        bitField0_ |= 0x00000001;
        f1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f1 = 1;</code>
       */
      public Builder clearF1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        f1_ = 0F;
        onChanged();
        return this;
      }

      private float f2_ ;
      /**
       * <code>required float f2 = 2;</code>
       */
      public boolean hasF2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public float getF2() {
        return f2_;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder setF2(float value) {
        bitField0_ |= 0x00000002;
        f2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f2 = 2;</code>
       */
      public Builder clearF2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        f2_ = 0F;
        onChanged();
        return this;
      }

      private float f3_ ;
      /**
       * <code>required float f3 = 3;</code>
       */
      public boolean hasF3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public float getF3() {
        return f3_;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder setF3(float value) {
        bitField0_ |= 0x00000004;
        f3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float f3 = 3;</code>
       */
      public Builder clearF3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        f3_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Float3)
    }

    static {
      defaultInstance = new Float3(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Float3)
  }

  public interface RegiMapAccelGyroOrBuilder extends
          // @@protoc_insertion_point(interface_extends:RegiMapAccelGyro)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    boolean hasAdr0X00();
    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    int getAdr0X00();

    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    boolean hasAdr0X01();
    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    int getAdr0X01();

    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    boolean hasAdr0X02();
    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    int getAdr0X02();

    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    boolean hasAdr0X03();
    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    int getAdr0X03();

    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    boolean hasAdr0X04();
    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    int getAdr0X04();

    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    boolean hasAdr0X05();
    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    int getAdr0X05();

    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    boolean hasAdr0X06();
    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    int getAdr0X06();

    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    boolean hasAdr0X07();
    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    int getAdr0X07();

    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    boolean hasAdr0X08();
    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    int getAdr0X08();

    /**
     * <code>required int32 adr_0x09 = 10;</code>
     */
    boolean hasAdr0X09();
    /**
     * <code>required int32 adr_0x09 = 10;</code>
     */
    int getAdr0X09();

    /**
     * <code>required int32 adr_0x0A = 11;</code>
     */
    boolean hasAdr0X0A();
    /**
     * <code>required int32 adr_0x0A = 11;</code>
     */
    int getAdr0X0A();

    /**
     * <code>required int32 adr_0x0B = 12;</code>
     */
    boolean hasAdr0X0B();
    /**
     * <code>required int32 adr_0x0B = 12;</code>
     */
    int getAdr0X0B();

    /**
     * <code>required int32 adr_0x0C = 13;</code>
     */
    boolean hasAdr0X0C();
    /**
     * <code>required int32 adr_0x0C = 13;</code>
     */
    int getAdr0X0C();

    /**
     * <code>required int32 adr_0x0D = 14;</code>
     */
    boolean hasAdr0X0D();
    /**
     * <code>required int32 adr_0x0D = 14;</code>
     */
    int getAdr0X0D();

    /**
     * <code>required int32 adr_0x0E = 15;</code>
     */
    boolean hasAdr0X0E();
    /**
     * <code>required int32 adr_0x0E = 15;</code>
     */
    int getAdr0X0E();

    /**
     * <code>required int32 adr_0x0F = 16;</code>
     */
    boolean hasAdr0X0F();
    /**
     * <code>required int32 adr_0x0F = 16;</code>
     */
    int getAdr0X0F();

    /**
     * <code>required int32 adr_0x10 = 17;</code>
     */
    boolean hasAdr0X10();
    /**
     * <code>required int32 adr_0x10 = 17;</code>
     */
    int getAdr0X10();

    /**
     * <code>required int32 adr_0x11 = 18;</code>
     */
    boolean hasAdr0X11();
    /**
     * <code>required int32 adr_0x11 = 18;</code>
     */
    int getAdr0X11();

    /**
     * <code>required int32 adr_0x12 = 19;</code>
     */
    boolean hasAdr0X12();
    /**
     * <code>required int32 adr_0x12 = 19;</code>
     */
    int getAdr0X12();

    /**
     * <code>required int32 adr_0x13 = 20;</code>
     */
    boolean hasAdr0X13();
    /**
     * <code>required int32 adr_0x13 = 20;</code>
     */
    int getAdr0X13();

    /**
     * <code>required int32 adr_0x14 = 21;</code>
     */
    boolean hasAdr0X14();
    /**
     * <code>required int32 adr_0x14 = 21;</code>
     */
    int getAdr0X14();

    /**
     * <code>required int32 adr_0x15 = 22;</code>
     */
    boolean hasAdr0X15();
    /**
     * <code>required int32 adr_0x15 = 22;</code>
     */
    int getAdr0X15();

    /**
     * <code>required int32 adr_0x16 = 23;</code>
     */
    boolean hasAdr0X16();
    /**
     * <code>required int32 adr_0x16 = 23;</code>
     */
    int getAdr0X16();

    /**
     * <code>required int32 adr_0x17 = 24;</code>
     */
    boolean hasAdr0X17();
    /**
     * <code>required int32 adr_0x17 = 24;</code>
     */
    int getAdr0X17();

    /**
     * <code>required int32 adr_0x18 = 25;</code>
     */
    boolean hasAdr0X18();
    /**
     * <code>required int32 adr_0x18 = 25;</code>
     */
    int getAdr0X18();

    /**
     * <code>required int32 adr_0x19 = 26;</code>
     */
    boolean hasAdr0X19();
    /**
     * <code>required int32 adr_0x19 = 26;</code>
     */
    int getAdr0X19();

    /**
     * <code>required int32 adr_0x1A = 27;</code>
     */
    boolean hasAdr0X1A();
    /**
     * <code>required int32 adr_0x1A = 27;</code>
     */
    int getAdr0X1A();

    /**
     * <code>required int32 adr_0x1B = 28;</code>
     */
    boolean hasAdr0X1B();
    /**
     * <code>required int32 adr_0x1B = 28;</code>
     */
    int getAdr0X1B();

    /**
     * <code>required int32 adr_0x1C = 29;</code>
     */
    boolean hasAdr0X1C();
    /**
     * <code>required int32 adr_0x1C = 29;</code>
     */
    int getAdr0X1C();

    /**
     * <code>required int32 adr_0x1D = 30;</code>
     */
    boolean hasAdr0X1D();
    /**
     * <code>required int32 adr_0x1D = 30;</code>
     */
    int getAdr0X1D();

    /**
     * <code>required int32 adr_0x1E = 31;</code>
     */
    boolean hasAdr0X1E();
    /**
     * <code>required int32 adr_0x1E = 31;</code>
     */
    int getAdr0X1E();

    /**
     * <code>required int32 adr_0x1F = 32;</code>
     */
    boolean hasAdr0X1F();
    /**
     * <code>required int32 adr_0x1F = 32;</code>
     */
    int getAdr0X1F();

    /**
     * <code>required int32 adr_0x20 = 33;</code>
     */
    boolean hasAdr0X20();
    /**
     * <code>required int32 adr_0x20 = 33;</code>
     */
    int getAdr0X20();

    /**
     * <code>required int32 adr_0x21 = 34;</code>
     */
    boolean hasAdr0X21();
    /**
     * <code>required int32 adr_0x21 = 34;</code>
     */
    int getAdr0X21();

    /**
     * <code>required int32 adr_0x22 = 35;</code>
     */
    boolean hasAdr0X22();
    /**
     * <code>required int32 adr_0x22 = 35;</code>
     */
    int getAdr0X22();

    /**
     * <code>required int32 adr_0x23 = 36;</code>
     */
    boolean hasAdr0X23();
    /**
     * <code>required int32 adr_0x23 = 36;</code>
     */
    int getAdr0X23();

    /**
     * <code>required int32 adr_0x24 = 37;</code>
     */
    boolean hasAdr0X24();
    /**
     * <code>required int32 adr_0x24 = 37;</code>
     */
    int getAdr0X24();

    /**
     * <code>required int32 adr_0x25 = 38;</code>
     */
    boolean hasAdr0X25();
    /**
     * <code>required int32 adr_0x25 = 38;</code>
     */
    int getAdr0X25();

    /**
     * <code>required int32 adr_0x26 = 39;</code>
     */
    boolean hasAdr0X26();
    /**
     * <code>required int32 adr_0x26 = 39;</code>
     */
    int getAdr0X26();

    /**
     * <code>required int32 adr_0x27 = 40;</code>
     */
    boolean hasAdr0X27();
    /**
     * <code>required int32 adr_0x27 = 40;</code>
     */
    int getAdr0X27();

    /**
     * <code>required int32 adr_0x28 = 41;</code>
     */
    boolean hasAdr0X28();
    /**
     * <code>required int32 adr_0x28 = 41;</code>
     */
    int getAdr0X28();

    /**
     * <code>required int32 adr_0x29 = 42;</code>
     */
    boolean hasAdr0X29();
    /**
     * <code>required int32 adr_0x29 = 42;</code>
     */
    int getAdr0X29();

    /**
     * <code>required int32 adr_0x2A = 43;</code>
     */
    boolean hasAdr0X2A();
    /**
     * <code>required int32 adr_0x2A = 43;</code>
     */
    int getAdr0X2A();

    /**
     * <code>required int32 adr_0x2B = 44;</code>
     */
    boolean hasAdr0X2B();
    /**
     * <code>required int32 adr_0x2B = 44;</code>
     */
    int getAdr0X2B();

    /**
     * <code>required int32 adr_0x2C = 45;</code>
     */
    boolean hasAdr0X2C();
    /**
     * <code>required int32 adr_0x2C = 45;</code>
     */
    int getAdr0X2C();

    /**
     * <code>required int32 adr_0x2D = 46;</code>
     */
    boolean hasAdr0X2D();
    /**
     * <code>required int32 adr_0x2D = 46;</code>
     */
    int getAdr0X2D();

    /**
     * <code>required int32 adr_0x2E = 47;</code>
     */
    boolean hasAdr0X2E();
    /**
     * <code>required int32 adr_0x2E = 47;</code>
     */
    int getAdr0X2E();

    /**
     * <code>required int32 adr_0x2F = 48;</code>
     */
    boolean hasAdr0X2F();
    /**
     * <code>required int32 adr_0x2F = 48;</code>
     */
    int getAdr0X2F();

    /**
     * <code>required int32 adr_0x30 = 49;</code>
     */
    boolean hasAdr0X30();
    /**
     * <code>required int32 adr_0x30 = 49;</code>
     */
    int getAdr0X30();

    /**
     * <code>required int32 adr_0x31 = 50;</code>
     */
    boolean hasAdr0X31();
    /**
     * <code>required int32 adr_0x31 = 50;</code>
     */
    int getAdr0X31();

    /**
     * <code>required int32 adr_0x32 = 51;</code>
     */
    boolean hasAdr0X32();
    /**
     * <code>required int32 adr_0x32 = 51;</code>
     */
    int getAdr0X32();

    /**
     * <code>required int32 adr_0x33 = 52;</code>
     */
    boolean hasAdr0X33();
    /**
     * <code>required int32 adr_0x33 = 52;</code>
     */
    int getAdr0X33();

    /**
     * <code>required int32 adr_0x34 = 53;</code>
     */
    boolean hasAdr0X34();
    /**
     * <code>required int32 adr_0x34 = 53;</code>
     */
    int getAdr0X34();

    /**
     * <code>required int32 adr_0x35 = 54;</code>
     */
    boolean hasAdr0X35();
    /**
     * <code>required int32 adr_0x35 = 54;</code>
     */
    int getAdr0X35();

    /**
     * <code>required int32 adr_0x36 = 55;</code>
     */
    boolean hasAdr0X36();
    /**
     * <code>required int32 adr_0x36 = 55;</code>
     */
    int getAdr0X36();

    /**
     * <code>required int32 adr_0x37 = 56;</code>
     */
    boolean hasAdr0X37();
    /**
     * <code>required int32 adr_0x37 = 56;</code>
     */
    int getAdr0X37();

    /**
     * <code>required int32 adr_0x38 = 57;</code>
     */
    boolean hasAdr0X38();
    /**
     * <code>required int32 adr_0x38 = 57;</code>
     */
    int getAdr0X38();

    /**
     * <code>required int32 adr_0x39 = 58;</code>
     */
    boolean hasAdr0X39();
    /**
     * <code>required int32 adr_0x39 = 58;</code>
     */
    int getAdr0X39();

    /**
     * <code>required int32 adr_0x3A = 59;</code>
     */
    boolean hasAdr0X3A();
    /**
     * <code>required int32 adr_0x3A = 59;</code>
     */
    int getAdr0X3A();

    /**
     * <code>required int32 adr_0x3B = 60;</code>
     */
    boolean hasAdr0X3B();
    /**
     * <code>required int32 adr_0x3B = 60;</code>
     */
    int getAdr0X3B();

    /**
     * <code>required int32 adr_0x3C = 61;</code>
     */
    boolean hasAdr0X3C();
    /**
     * <code>required int32 adr_0x3C = 61;</code>
     */
    int getAdr0X3C();

    /**
     * <code>required int32 adr_0x3D = 62;</code>
     */
    boolean hasAdr0X3D();
    /**
     * <code>required int32 adr_0x3D = 62;</code>
     */
    int getAdr0X3D();

    /**
     * <code>required int32 adr_0x3E = 63;</code>
     */
    boolean hasAdr0X3E();
    /**
     * <code>required int32 adr_0x3E = 63;</code>
     */
    int getAdr0X3E();

    /**
     * <code>required int32 adr_0x3F = 64;</code>
     */
    boolean hasAdr0X3F();
    /**
     * <code>required int32 adr_0x3F = 64;</code>
     */
    int getAdr0X3F();
  }
  /**
   * Protobuf type {@code RegiMapAccelGyro}
   */
  public static final class RegiMapAccelGyro extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:RegiMapAccelGyro)
          RegiMapAccelGyroOrBuilder {
    // Use RegiMapAccelGyro.newBuilder() to construct.
    private RegiMapAccelGyro(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegiMapAccelGyro(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegiMapAccelGyro defaultInstance;
    public static RegiMapAccelGyro getDefaultInstance() {
      return defaultInstance;
    }

    public RegiMapAccelGyro getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegiMapAccelGyro(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              adr0X00_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              adr0X01_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              adr0X02_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              adr0X03_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              adr0X04_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              adr0X05_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              adr0X06_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              adr0X07_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              adr0X08_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              adr0X09_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              adr0X0A_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              adr0X0B_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              adr0X0C_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              adr0X0D_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              adr0X0E_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              adr0X0F_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              adr0X10_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              adr0X11_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              adr0X12_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              adr0X13_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              adr0X14_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              adr0X15_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              adr0X16_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              adr0X17_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              adr0X18_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              adr0X19_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              adr0X1A_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              adr0X1B_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              adr0X1C_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              adr0X1D_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              adr0X1E_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              adr0X1F_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              adr0X20_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              adr0X21_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              adr0X22_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              adr0X23_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              adr0X24_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              adr0X25_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              adr0X26_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              adr0X27_ = input.readInt32();
              break;
            }
            case 328: {
              bitField1_ |= 0x00000100;
              adr0X28_ = input.readInt32();
              break;
            }
            case 336: {
              bitField1_ |= 0x00000200;
              adr0X29_ = input.readInt32();
              break;
            }
            case 344: {
              bitField1_ |= 0x00000400;
              adr0X2A_ = input.readInt32();
              break;
            }
            case 352: {
              bitField1_ |= 0x00000800;
              adr0X2B_ = input.readInt32();
              break;
            }
            case 360: {
              bitField1_ |= 0x00001000;
              adr0X2C_ = input.readInt32();
              break;
            }
            case 368: {
              bitField1_ |= 0x00002000;
              adr0X2D_ = input.readInt32();
              break;
            }
            case 376: {
              bitField1_ |= 0x00004000;
              adr0X2E_ = input.readInt32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00008000;
              adr0X2F_ = input.readInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00010000;
              adr0X30_ = input.readInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00020000;
              adr0X31_ = input.readInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00040000;
              adr0X32_ = input.readInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00080000;
              adr0X33_ = input.readInt32();
              break;
            }
            case 424: {
              bitField1_ |= 0x00100000;
              adr0X34_ = input.readInt32();
              break;
            }
            case 432: {
              bitField1_ |= 0x00200000;
              adr0X35_ = input.readInt32();
              break;
            }
            case 440: {
              bitField1_ |= 0x00400000;
              adr0X36_ = input.readInt32();
              break;
            }
            case 448: {
              bitField1_ |= 0x00800000;
              adr0X37_ = input.readInt32();
              break;
            }
            case 456: {
              bitField1_ |= 0x01000000;
              adr0X38_ = input.readInt32();
              break;
            }
            case 464: {
              bitField1_ |= 0x02000000;
              adr0X39_ = input.readInt32();
              break;
            }
            case 472: {
              bitField1_ |= 0x04000000;
              adr0X3A_ = input.readInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x08000000;
              adr0X3B_ = input.readInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x10000000;
              adr0X3C_ = input.readInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x20000000;
              adr0X3D_ = input.readInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x40000000;
              adr0X3E_ = input.readInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x80000000;
              adr0X3F_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_RegiMapAccelGyro_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_RegiMapAccelGyro_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.RegiMapAccelGyro.class, StnEggPkt.RegiMapAccelGyro.Builder.class);
    }

    public static com.google.protobuf.Parser<RegiMapAccelGyro> PARSER =
            new com.google.protobuf.AbstractParser<RegiMapAccelGyro>() {
              public RegiMapAccelGyro parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new RegiMapAccelGyro(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<RegiMapAccelGyro> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int ADR_0X00_FIELD_NUMBER = 1;
    private int adr0X00_;
    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    public boolean hasAdr0X00() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    public int getAdr0X00() {
      return adr0X00_;
    }

    public static final int ADR_0X01_FIELD_NUMBER = 2;
    private int adr0X01_;
    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    public boolean hasAdr0X01() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    public int getAdr0X01() {
      return adr0X01_;
    }

    public static final int ADR_0X02_FIELD_NUMBER = 3;
    private int adr0X02_;
    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    public boolean hasAdr0X02() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    public int getAdr0X02() {
      return adr0X02_;
    }

    public static final int ADR_0X03_FIELD_NUMBER = 4;
    private int adr0X03_;
    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    public boolean hasAdr0X03() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    public int getAdr0X03() {
      return adr0X03_;
    }

    public static final int ADR_0X04_FIELD_NUMBER = 5;
    private int adr0X04_;
    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    public boolean hasAdr0X04() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    public int getAdr0X04() {
      return adr0X04_;
    }

    public static final int ADR_0X05_FIELD_NUMBER = 6;
    private int adr0X05_;
    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    public boolean hasAdr0X05() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    public int getAdr0X05() {
      return adr0X05_;
    }

    public static final int ADR_0X06_FIELD_NUMBER = 7;
    private int adr0X06_;
    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    public boolean hasAdr0X06() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    public int getAdr0X06() {
      return adr0X06_;
    }

    public static final int ADR_0X07_FIELD_NUMBER = 8;
    private int adr0X07_;
    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    public boolean hasAdr0X07() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    public int getAdr0X07() {
      return adr0X07_;
    }

    public static final int ADR_0X08_FIELD_NUMBER = 9;
    private int adr0X08_;
    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    public boolean hasAdr0X08() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    public int getAdr0X08() {
      return adr0X08_;
    }

    public static final int ADR_0X09_FIELD_NUMBER = 10;
    private int adr0X09_;
    /**
     * <code>required int32 adr_0x09 = 10;</code>
     */
    public boolean hasAdr0X09() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 adr_0x09 = 10;</code>
     */
    public int getAdr0X09() {
      return adr0X09_;
    }

    public static final int ADR_0X0A_FIELD_NUMBER = 11;
    private int adr0X0A_;
    /**
     * <code>required int32 adr_0x0A = 11;</code>
     */
    public boolean hasAdr0X0A() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 adr_0x0A = 11;</code>
     */
    public int getAdr0X0A() {
      return adr0X0A_;
    }

    public static final int ADR_0X0B_FIELD_NUMBER = 12;
    private int adr0X0B_;
    /**
     * <code>required int32 adr_0x0B = 12;</code>
     */
    public boolean hasAdr0X0B() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 adr_0x0B = 12;</code>
     */
    public int getAdr0X0B() {
      return adr0X0B_;
    }

    public static final int ADR_0X0C_FIELD_NUMBER = 13;
    private int adr0X0C_;
    /**
     * <code>required int32 adr_0x0C = 13;</code>
     */
    public boolean hasAdr0X0C() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 adr_0x0C = 13;</code>
     */
    public int getAdr0X0C() {
      return adr0X0C_;
    }

    public static final int ADR_0X0D_FIELD_NUMBER = 14;
    private int adr0X0D_;
    /**
     * <code>required int32 adr_0x0D = 14;</code>
     */
    public boolean hasAdr0X0D() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 adr_0x0D = 14;</code>
     */
    public int getAdr0X0D() {
      return adr0X0D_;
    }

    public static final int ADR_0X0E_FIELD_NUMBER = 15;
    private int adr0X0E_;
    /**
     * <code>required int32 adr_0x0E = 15;</code>
     */
    public boolean hasAdr0X0E() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 adr_0x0E = 15;</code>
     */
    public int getAdr0X0E() {
      return adr0X0E_;
    }

    public static final int ADR_0X0F_FIELD_NUMBER = 16;
    private int adr0X0F_;
    /**
     * <code>required int32 adr_0x0F = 16;</code>
     */
    public boolean hasAdr0X0F() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 adr_0x0F = 16;</code>
     */
    public int getAdr0X0F() {
      return adr0X0F_;
    }

    public static final int ADR_0X10_FIELD_NUMBER = 17;
    private int adr0X10_;
    /**
     * <code>required int32 adr_0x10 = 17;</code>
     */
    public boolean hasAdr0X10() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 adr_0x10 = 17;</code>
     */
    public int getAdr0X10() {
      return adr0X10_;
    }

    public static final int ADR_0X11_FIELD_NUMBER = 18;
    private int adr0X11_;
    /**
     * <code>required int32 adr_0x11 = 18;</code>
     */
    public boolean hasAdr0X11() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 adr_0x11 = 18;</code>
     */
    public int getAdr0X11() {
      return adr0X11_;
    }

    public static final int ADR_0X12_FIELD_NUMBER = 19;
    private int adr0X12_;
    /**
     * <code>required int32 adr_0x12 = 19;</code>
     */
    public boolean hasAdr0X12() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int32 adr_0x12 = 19;</code>
     */
    public int getAdr0X12() {
      return adr0X12_;
    }

    public static final int ADR_0X13_FIELD_NUMBER = 20;
    private int adr0X13_;
    /**
     * <code>required int32 adr_0x13 = 20;</code>
     */
    public boolean hasAdr0X13() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required int32 adr_0x13 = 20;</code>
     */
    public int getAdr0X13() {
      return adr0X13_;
    }

    public static final int ADR_0X14_FIELD_NUMBER = 21;
    private int adr0X14_;
    /**
     * <code>required int32 adr_0x14 = 21;</code>
     */
    public boolean hasAdr0X14() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required int32 adr_0x14 = 21;</code>
     */
    public int getAdr0X14() {
      return adr0X14_;
    }

    public static final int ADR_0X15_FIELD_NUMBER = 22;
    private int adr0X15_;
    /**
     * <code>required int32 adr_0x15 = 22;</code>
     */
    public boolean hasAdr0X15() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>required int32 adr_0x15 = 22;</code>
     */
    public int getAdr0X15() {
      return adr0X15_;
    }

    public static final int ADR_0X16_FIELD_NUMBER = 23;
    private int adr0X16_;
    /**
     * <code>required int32 adr_0x16 = 23;</code>
     */
    public boolean hasAdr0X16() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required int32 adr_0x16 = 23;</code>
     */
    public int getAdr0X16() {
      return adr0X16_;
    }

    public static final int ADR_0X17_FIELD_NUMBER = 24;
    private int adr0X17_;
    /**
     * <code>required int32 adr_0x17 = 24;</code>
     */
    public boolean hasAdr0X17() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>required int32 adr_0x17 = 24;</code>
     */
    public int getAdr0X17() {
      return adr0X17_;
    }

    public static final int ADR_0X18_FIELD_NUMBER = 25;
    private int adr0X18_;
    /**
     * <code>required int32 adr_0x18 = 25;</code>
     */
    public boolean hasAdr0X18() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required int32 adr_0x18 = 25;</code>
     */
    public int getAdr0X18() {
      return adr0X18_;
    }

    public static final int ADR_0X19_FIELD_NUMBER = 26;
    private int adr0X19_;
    /**
     * <code>required int32 adr_0x19 = 26;</code>
     */
    public boolean hasAdr0X19() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>required int32 adr_0x19 = 26;</code>
     */
    public int getAdr0X19() {
      return adr0X19_;
    }

    public static final int ADR_0X1A_FIELD_NUMBER = 27;
    private int adr0X1A_;
    /**
     * <code>required int32 adr_0x1A = 27;</code>
     */
    public boolean hasAdr0X1A() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>required int32 adr_0x1A = 27;</code>
     */
    public int getAdr0X1A() {
      return adr0X1A_;
    }

    public static final int ADR_0X1B_FIELD_NUMBER = 28;
    private int adr0X1B_;
    /**
     * <code>required int32 adr_0x1B = 28;</code>
     */
    public boolean hasAdr0X1B() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>required int32 adr_0x1B = 28;</code>
     */
    public int getAdr0X1B() {
      return adr0X1B_;
    }

    public static final int ADR_0X1C_FIELD_NUMBER = 29;
    private int adr0X1C_;
    /**
     * <code>required int32 adr_0x1C = 29;</code>
     */
    public boolean hasAdr0X1C() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>required int32 adr_0x1C = 29;</code>
     */
    public int getAdr0X1C() {
      return adr0X1C_;
    }

    public static final int ADR_0X1D_FIELD_NUMBER = 30;
    private int adr0X1D_;
    /**
     * <code>required int32 adr_0x1D = 30;</code>
     */
    public boolean hasAdr0X1D() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>required int32 adr_0x1D = 30;</code>
     */
    public int getAdr0X1D() {
      return adr0X1D_;
    }

    public static final int ADR_0X1E_FIELD_NUMBER = 31;
    private int adr0X1E_;
    /**
     * <code>required int32 adr_0x1E = 31;</code>
     */
    public boolean hasAdr0X1E() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>required int32 adr_0x1E = 31;</code>
     */
    public int getAdr0X1E() {
      return adr0X1E_;
    }

    public static final int ADR_0X1F_FIELD_NUMBER = 32;
    private int adr0X1F_;
    /**
     * <code>required int32 adr_0x1F = 32;</code>
     */
    public boolean hasAdr0X1F() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>required int32 adr_0x1F = 32;</code>
     */
    public int getAdr0X1F() {
      return adr0X1F_;
    }

    public static final int ADR_0X20_FIELD_NUMBER = 33;
    private int adr0X20_;
    /**
     * <code>required int32 adr_0x20 = 33;</code>
     */
    public boolean hasAdr0X20() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 adr_0x20 = 33;</code>
     */
    public int getAdr0X20() {
      return adr0X20_;
    }

    public static final int ADR_0X21_FIELD_NUMBER = 34;
    private int adr0X21_;
    /**
     * <code>required int32 adr_0x21 = 34;</code>
     */
    public boolean hasAdr0X21() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 adr_0x21 = 34;</code>
     */
    public int getAdr0X21() {
      return adr0X21_;
    }

    public static final int ADR_0X22_FIELD_NUMBER = 35;
    private int adr0X22_;
    /**
     * <code>required int32 adr_0x22 = 35;</code>
     */
    public boolean hasAdr0X22() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 adr_0x22 = 35;</code>
     */
    public int getAdr0X22() {
      return adr0X22_;
    }

    public static final int ADR_0X23_FIELD_NUMBER = 36;
    private int adr0X23_;
    /**
     * <code>required int32 adr_0x23 = 36;</code>
     */
    public boolean hasAdr0X23() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 adr_0x23 = 36;</code>
     */
    public int getAdr0X23() {
      return adr0X23_;
    }

    public static final int ADR_0X24_FIELD_NUMBER = 37;
    private int adr0X24_;
    /**
     * <code>required int32 adr_0x24 = 37;</code>
     */
    public boolean hasAdr0X24() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 adr_0x24 = 37;</code>
     */
    public int getAdr0X24() {
      return adr0X24_;
    }

    public static final int ADR_0X25_FIELD_NUMBER = 38;
    private int adr0X25_;
    /**
     * <code>required int32 adr_0x25 = 38;</code>
     */
    public boolean hasAdr0X25() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 adr_0x25 = 38;</code>
     */
    public int getAdr0X25() {
      return adr0X25_;
    }

    public static final int ADR_0X26_FIELD_NUMBER = 39;
    private int adr0X26_;
    /**
     * <code>required int32 adr_0x26 = 39;</code>
     */
    public boolean hasAdr0X26() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 adr_0x26 = 39;</code>
     */
    public int getAdr0X26() {
      return adr0X26_;
    }

    public static final int ADR_0X27_FIELD_NUMBER = 40;
    private int adr0X27_;
    /**
     * <code>required int32 adr_0x27 = 40;</code>
     */
    public boolean hasAdr0X27() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 adr_0x27 = 40;</code>
     */
    public int getAdr0X27() {
      return adr0X27_;
    }

    public static final int ADR_0X28_FIELD_NUMBER = 41;
    private int adr0X28_;
    /**
     * <code>required int32 adr_0x28 = 41;</code>
     */
    public boolean hasAdr0X28() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 adr_0x28 = 41;</code>
     */
    public int getAdr0X28() {
      return adr0X28_;
    }

    public static final int ADR_0X29_FIELD_NUMBER = 42;
    private int adr0X29_;
    /**
     * <code>required int32 adr_0x29 = 42;</code>
     */
    public boolean hasAdr0X29() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 adr_0x29 = 42;</code>
     */
    public int getAdr0X29() {
      return adr0X29_;
    }

    public static final int ADR_0X2A_FIELD_NUMBER = 43;
    private int adr0X2A_;
    /**
     * <code>required int32 adr_0x2A = 43;</code>
     */
    public boolean hasAdr0X2A() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 adr_0x2A = 43;</code>
     */
    public int getAdr0X2A() {
      return adr0X2A_;
    }

    public static final int ADR_0X2B_FIELD_NUMBER = 44;
    private int adr0X2B_;
    /**
     * <code>required int32 adr_0x2B = 44;</code>
     */
    public boolean hasAdr0X2B() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 adr_0x2B = 44;</code>
     */
    public int getAdr0X2B() {
      return adr0X2B_;
    }

    public static final int ADR_0X2C_FIELD_NUMBER = 45;
    private int adr0X2C_;
    /**
     * <code>required int32 adr_0x2C = 45;</code>
     */
    public boolean hasAdr0X2C() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 adr_0x2C = 45;</code>
     */
    public int getAdr0X2C() {
      return adr0X2C_;
    }

    public static final int ADR_0X2D_FIELD_NUMBER = 46;
    private int adr0X2D_;
    /**
     * <code>required int32 adr_0x2D = 46;</code>
     */
    public boolean hasAdr0X2D() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 adr_0x2D = 46;</code>
     */
    public int getAdr0X2D() {
      return adr0X2D_;
    }

    public static final int ADR_0X2E_FIELD_NUMBER = 47;
    private int adr0X2E_;
    /**
     * <code>required int32 adr_0x2E = 47;</code>
     */
    public boolean hasAdr0X2E() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 adr_0x2E = 47;</code>
     */
    public int getAdr0X2E() {
      return adr0X2E_;
    }

    public static final int ADR_0X2F_FIELD_NUMBER = 48;
    private int adr0X2F_;
    /**
     * <code>required int32 adr_0x2F = 48;</code>
     */
    public boolean hasAdr0X2F() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 adr_0x2F = 48;</code>
     */
    public int getAdr0X2F() {
      return adr0X2F_;
    }

    public static final int ADR_0X30_FIELD_NUMBER = 49;
    private int adr0X30_;
    /**
     * <code>required int32 adr_0x30 = 49;</code>
     */
    public boolean hasAdr0X30() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 adr_0x30 = 49;</code>
     */
    public int getAdr0X30() {
      return adr0X30_;
    }

    public static final int ADR_0X31_FIELD_NUMBER = 50;
    private int adr0X31_;
    /**
     * <code>required int32 adr_0x31 = 50;</code>
     */
    public boolean hasAdr0X31() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 adr_0x31 = 50;</code>
     */
    public int getAdr0X31() {
      return adr0X31_;
    }

    public static final int ADR_0X32_FIELD_NUMBER = 51;
    private int adr0X32_;
    /**
     * <code>required int32 adr_0x32 = 51;</code>
     */
    public boolean hasAdr0X32() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int32 adr_0x32 = 51;</code>
     */
    public int getAdr0X32() {
      return adr0X32_;
    }

    public static final int ADR_0X33_FIELD_NUMBER = 52;
    private int adr0X33_;
    /**
     * <code>required int32 adr_0x33 = 52;</code>
     */
    public boolean hasAdr0X33() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required int32 adr_0x33 = 52;</code>
     */
    public int getAdr0X33() {
      return adr0X33_;
    }

    public static final int ADR_0X34_FIELD_NUMBER = 53;
    private int adr0X34_;
    /**
     * <code>required int32 adr_0x34 = 53;</code>
     */
    public boolean hasAdr0X34() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required int32 adr_0x34 = 53;</code>
     */
    public int getAdr0X34() {
      return adr0X34_;
    }

    public static final int ADR_0X35_FIELD_NUMBER = 54;
    private int adr0X35_;
    /**
     * <code>required int32 adr_0x35 = 54;</code>
     */
    public boolean hasAdr0X35() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>required int32 adr_0x35 = 54;</code>
     */
    public int getAdr0X35() {
      return adr0X35_;
    }

    public static final int ADR_0X36_FIELD_NUMBER = 55;
    private int adr0X36_;
    /**
     * <code>required int32 adr_0x36 = 55;</code>
     */
    public boolean hasAdr0X36() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required int32 adr_0x36 = 55;</code>
     */
    public int getAdr0X36() {
      return adr0X36_;
    }

    public static final int ADR_0X37_FIELD_NUMBER = 56;
    private int adr0X37_;
    /**
     * <code>required int32 adr_0x37 = 56;</code>
     */
    public boolean hasAdr0X37() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>required int32 adr_0x37 = 56;</code>
     */
    public int getAdr0X37() {
      return adr0X37_;
    }

    public static final int ADR_0X38_FIELD_NUMBER = 57;
    private int adr0X38_;
    /**
     * <code>required int32 adr_0x38 = 57;</code>
     */
    public boolean hasAdr0X38() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required int32 adr_0x38 = 57;</code>
     */
    public int getAdr0X38() {
      return adr0X38_;
    }

    public static final int ADR_0X39_FIELD_NUMBER = 58;
    private int adr0X39_;
    /**
     * <code>required int32 adr_0x39 = 58;</code>
     */
    public boolean hasAdr0X39() {
      return ((bitField1_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>required int32 adr_0x39 = 58;</code>
     */
    public int getAdr0X39() {
      return adr0X39_;
    }

    public static final int ADR_0X3A_FIELD_NUMBER = 59;
    private int adr0X3A_;
    /**
     * <code>required int32 adr_0x3A = 59;</code>
     */
    public boolean hasAdr0X3A() {
      return ((bitField1_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>required int32 adr_0x3A = 59;</code>
     */
    public int getAdr0X3A() {
      return adr0X3A_;
    }

    public static final int ADR_0X3B_FIELD_NUMBER = 60;
    private int adr0X3B_;
    /**
     * <code>required int32 adr_0x3B = 60;</code>
     */
    public boolean hasAdr0X3B() {
      return ((bitField1_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>required int32 adr_0x3B = 60;</code>
     */
    public int getAdr0X3B() {
      return adr0X3B_;
    }

    public static final int ADR_0X3C_FIELD_NUMBER = 61;
    private int adr0X3C_;
    /**
     * <code>required int32 adr_0x3C = 61;</code>
     */
    public boolean hasAdr0X3C() {
      return ((bitField1_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>required int32 adr_0x3C = 61;</code>
     */
    public int getAdr0X3C() {
      return adr0X3C_;
    }

    public static final int ADR_0X3D_FIELD_NUMBER = 62;
    private int adr0X3D_;
    /**
     * <code>required int32 adr_0x3D = 62;</code>
     */
    public boolean hasAdr0X3D() {
      return ((bitField1_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>required int32 adr_0x3D = 62;</code>
     */
    public int getAdr0X3D() {
      return adr0X3D_;
    }

    public static final int ADR_0X3E_FIELD_NUMBER = 63;
    private int adr0X3E_;
    /**
     * <code>required int32 adr_0x3E = 63;</code>
     */
    public boolean hasAdr0X3E() {
      return ((bitField1_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>required int32 adr_0x3E = 63;</code>
     */
    public int getAdr0X3E() {
      return adr0X3E_;
    }

    public static final int ADR_0X3F_FIELD_NUMBER = 64;
    private int adr0X3F_;
    /**
     * <code>required int32 adr_0x3F = 64;</code>
     */
    public boolean hasAdr0X3F() {
      return ((bitField1_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>required int32 adr_0x3F = 64;</code>
     */
    public int getAdr0X3F() {
      return adr0X3F_;
    }

    private void initFields() {
      adr0X00_ = 0;
      adr0X01_ = 0;
      adr0X02_ = 0;
      adr0X03_ = 0;
      adr0X04_ = 0;
      adr0X05_ = 0;
      adr0X06_ = 0;
      adr0X07_ = 0;
      adr0X08_ = 0;
      adr0X09_ = 0;
      adr0X0A_ = 0;
      adr0X0B_ = 0;
      adr0X0C_ = 0;
      adr0X0D_ = 0;
      adr0X0E_ = 0;
      adr0X0F_ = 0;
      adr0X10_ = 0;
      adr0X11_ = 0;
      adr0X12_ = 0;
      adr0X13_ = 0;
      adr0X14_ = 0;
      adr0X15_ = 0;
      adr0X16_ = 0;
      adr0X17_ = 0;
      adr0X18_ = 0;
      adr0X19_ = 0;
      adr0X1A_ = 0;
      adr0X1B_ = 0;
      adr0X1C_ = 0;
      adr0X1D_ = 0;
      adr0X1E_ = 0;
      adr0X1F_ = 0;
      adr0X20_ = 0;
      adr0X21_ = 0;
      adr0X22_ = 0;
      adr0X23_ = 0;
      adr0X24_ = 0;
      adr0X25_ = 0;
      adr0X26_ = 0;
      adr0X27_ = 0;
      adr0X28_ = 0;
      adr0X29_ = 0;
      adr0X2A_ = 0;
      adr0X2B_ = 0;
      adr0X2C_ = 0;
      adr0X2D_ = 0;
      adr0X2E_ = 0;
      adr0X2F_ = 0;
      adr0X30_ = 0;
      adr0X31_ = 0;
      adr0X32_ = 0;
      adr0X33_ = 0;
      adr0X34_ = 0;
      adr0X35_ = 0;
      adr0X36_ = 0;
      adr0X37_ = 0;
      adr0X38_ = 0;
      adr0X39_ = 0;
      adr0X3A_ = 0;
      adr0X3B_ = 0;
      adr0X3C_ = 0;
      adr0X3D_ = 0;
      adr0X3E_ = 0;
      adr0X3F_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAdr0X00()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X01()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X02()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X03()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X04()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X05()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X06()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X07()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X08()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X09()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X0A()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X0B()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X0C()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X0D()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X0E()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X0F()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X10()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X11()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X12()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X13()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X14()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X15()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X16()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X17()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X18()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X19()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X1A()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X1B()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X1C()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X1D()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X1E()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X1F()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X20()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X21()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X22()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X23()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X24()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X25()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X26()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X27()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X28()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X29()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2A()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2B()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2C()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2D()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2E()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2F()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X30()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X31()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X33()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X34()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X35()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X36()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X37()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X38()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X39()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X3A()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X3B()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X3C()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X3D()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X3E()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X3F()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, adr0X00_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, adr0X01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, adr0X02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, adr0X03_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, adr0X04_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, adr0X05_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, adr0X06_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, adr0X07_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, adr0X08_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, adr0X09_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, adr0X0A_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, adr0X0B_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, adr0X0C_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, adr0X0D_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, adr0X0E_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, adr0X0F_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, adr0X10_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, adr0X11_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, adr0X12_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, adr0X13_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, adr0X14_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, adr0X15_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, adr0X16_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, adr0X17_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, adr0X18_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, adr0X19_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, adr0X1A_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, adr0X1B_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, adr0X1C_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, adr0X1D_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, adr0X1E_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, adr0X1F_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, adr0X20_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, adr0X21_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, adr0X22_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, adr0X23_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, adr0X24_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, adr0X25_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, adr0X26_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, adr0X27_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(41, adr0X28_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(42, adr0X29_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(43, adr0X2A_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(44, adr0X2B_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(45, adr0X2C_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(46, adr0X2D_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(47, adr0X2E_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(48, adr0X2F_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(49, adr0X30_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(50, adr0X31_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(51, adr0X32_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(52, adr0X33_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(53, adr0X34_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(54, adr0X35_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(55, adr0X36_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(56, adr0X37_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(57, adr0X38_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(58, adr0X39_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(59, adr0X3A_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(60, adr0X3B_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(61, adr0X3C_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(62, adr0X3D_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(63, adr0X3E_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(64, adr0X3F_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, adr0X00_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, adr0X01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, adr0X02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, adr0X03_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, adr0X04_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, adr0X05_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, adr0X06_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(8, adr0X07_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(9, adr0X08_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(10, adr0X09_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(11, adr0X0A_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(12, adr0X0B_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(13, adr0X0C_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(14, adr0X0D_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(15, adr0X0E_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(16, adr0X0F_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(17, adr0X10_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(18, adr0X11_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(19, adr0X12_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(20, adr0X13_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(21, adr0X14_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(22, adr0X15_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(23, adr0X16_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(24, adr0X17_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(25, adr0X18_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(26, adr0X19_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(27, adr0X1A_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(28, adr0X1B_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(29, adr0X1C_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(30, adr0X1D_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(31, adr0X1E_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(32, adr0X1F_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(33, adr0X20_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(34, adr0X21_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(35, adr0X22_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(36, adr0X23_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(37, adr0X24_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(38, adr0X25_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(39, adr0X26_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(40, adr0X27_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(41, adr0X28_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(42, adr0X29_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(43, adr0X2A_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(44, adr0X2B_);
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(45, adr0X2C_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(46, adr0X2D_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(47, adr0X2E_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(48, adr0X2F_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(49, adr0X30_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(50, adr0X31_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(51, adr0X32_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(52, adr0X33_);
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(53, adr0X34_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(54, adr0X35_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(55, adr0X36_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(56, adr0X37_);
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(57, adr0X38_);
      }
      if (((bitField1_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(58, adr0X39_);
      }
      if (((bitField1_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(59, adr0X3A_);
      }
      if (((bitField1_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(60, adr0X3B_);
      }
      if (((bitField1_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(61, adr0X3C_);
      }
      if (((bitField1_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(62, adr0X3D_);
      }
      if (((bitField1_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(63, adr0X3E_);
      }
      if (((bitField1_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(64, adr0X3F_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.RegiMapAccelGyro parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.RegiMapAccelGyro parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.RegiMapAccelGyro parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.RegiMapAccelGyro parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.RegiMapAccelGyro prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RegiMapAccelGyro}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:RegiMapAccelGyro)
            StnEggPkt.RegiMapAccelGyroOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_RegiMapAccelGyro_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_RegiMapAccelGyro_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.RegiMapAccelGyro.class, StnEggPkt.RegiMapAccelGyro.Builder.class);
      }

      // Construct using StnEggPkt.RegiMapAccelGyro.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        adr0X00_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        adr0X01_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        adr0X02_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        adr0X03_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        adr0X04_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        adr0X05_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        adr0X06_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        adr0X07_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        adr0X08_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        adr0X09_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        adr0X0A_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        adr0X0B_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        adr0X0C_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        adr0X0D_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        adr0X0E_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        adr0X0F_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        adr0X10_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        adr0X11_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        adr0X12_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        adr0X13_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        adr0X14_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        adr0X15_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        adr0X16_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        adr0X17_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        adr0X18_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        adr0X19_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        adr0X1A_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        adr0X1B_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        adr0X1C_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        adr0X1D_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        adr0X1E_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        adr0X1F_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        adr0X20_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        adr0X21_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        adr0X22_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        adr0X23_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        adr0X24_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        adr0X25_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        adr0X26_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        adr0X27_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        adr0X28_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        adr0X29_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        adr0X2A_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        adr0X2B_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        adr0X2C_ = 0;
        bitField1_ = (bitField1_ & ~0x00001000);
        adr0X2D_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        adr0X2E_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        adr0X2F_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        adr0X30_ = 0;
        bitField1_ = (bitField1_ & ~0x00010000);
        adr0X31_ = 0;
        bitField1_ = (bitField1_ & ~0x00020000);
        adr0X32_ = 0;
        bitField1_ = (bitField1_ & ~0x00040000);
        adr0X33_ = 0;
        bitField1_ = (bitField1_ & ~0x00080000);
        adr0X34_ = 0;
        bitField1_ = (bitField1_ & ~0x00100000);
        adr0X35_ = 0;
        bitField1_ = (bitField1_ & ~0x00200000);
        adr0X36_ = 0;
        bitField1_ = (bitField1_ & ~0x00400000);
        adr0X37_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        adr0X38_ = 0;
        bitField1_ = (bitField1_ & ~0x01000000);
        adr0X39_ = 0;
        bitField1_ = (bitField1_ & ~0x02000000);
        adr0X3A_ = 0;
        bitField1_ = (bitField1_ & ~0x04000000);
        adr0X3B_ = 0;
        bitField1_ = (bitField1_ & ~0x08000000);
        adr0X3C_ = 0;
        bitField1_ = (bitField1_ & ~0x10000000);
        adr0X3D_ = 0;
        bitField1_ = (bitField1_ & ~0x20000000);
        adr0X3E_ = 0;
        bitField1_ = (bitField1_ & ~0x40000000);
        adr0X3F_ = 0;
        bitField1_ = (bitField1_ & ~0x80000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_RegiMapAccelGyro_descriptor;
      }

      public StnEggPkt.RegiMapAccelGyro getDefaultInstanceForType() {
        return StnEggPkt.RegiMapAccelGyro.getDefaultInstance();
      }

      public StnEggPkt.RegiMapAccelGyro build() {
        StnEggPkt.RegiMapAccelGyro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.RegiMapAccelGyro buildPartial() {
        StnEggPkt.RegiMapAccelGyro result = new StnEggPkt.RegiMapAccelGyro(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.adr0X00_ = adr0X00_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.adr0X01_ = adr0X01_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.adr0X02_ = adr0X02_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.adr0X03_ = adr0X03_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.adr0X04_ = adr0X04_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.adr0X05_ = adr0X05_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.adr0X06_ = adr0X06_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.adr0X07_ = adr0X07_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.adr0X08_ = adr0X08_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.adr0X09_ = adr0X09_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.adr0X0A_ = adr0X0A_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.adr0X0B_ = adr0X0B_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.adr0X0C_ = adr0X0C_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.adr0X0D_ = adr0X0D_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.adr0X0E_ = adr0X0E_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.adr0X0F_ = adr0X0F_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.adr0X10_ = adr0X10_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.adr0X11_ = adr0X11_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.adr0X12_ = adr0X12_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.adr0X13_ = adr0X13_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.adr0X14_ = adr0X14_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.adr0X15_ = adr0X15_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.adr0X16_ = adr0X16_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.adr0X17_ = adr0X17_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.adr0X18_ = adr0X18_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.adr0X19_ = adr0X19_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.adr0X1A_ = adr0X1A_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.adr0X1B_ = adr0X1B_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.adr0X1C_ = adr0X1C_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.adr0X1D_ = adr0X1D_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.adr0X1E_ = adr0X1E_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.adr0X1F_ = adr0X1F_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.adr0X20_ = adr0X20_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.adr0X21_ = adr0X21_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.adr0X22_ = adr0X22_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.adr0X23_ = adr0X23_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.adr0X24_ = adr0X24_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.adr0X25_ = adr0X25_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.adr0X26_ = adr0X26_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.adr0X27_ = adr0X27_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.adr0X28_ = adr0X28_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.adr0X29_ = adr0X29_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.adr0X2A_ = adr0X2A_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000800;
        }
        result.adr0X2B_ = adr0X2B_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.adr0X2C_ = adr0X2C_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.adr0X2D_ = adr0X2D_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.adr0X2E_ = adr0X2E_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.adr0X2F_ = adr0X2F_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.adr0X30_ = adr0X30_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.adr0X31_ = adr0X31_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.adr0X32_ = adr0X32_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.adr0X33_ = adr0X33_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.adr0X34_ = adr0X34_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.adr0X35_ = adr0X35_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.adr0X36_ = adr0X36_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00800000;
        }
        result.adr0X37_ = adr0X37_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x01000000;
        }
        result.adr0X38_ = adr0X38_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x02000000;
        }
        result.adr0X39_ = adr0X39_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x04000000;
        }
        result.adr0X3A_ = adr0X3A_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x08000000;
        }
        result.adr0X3B_ = adr0X3B_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x10000000;
        }
        result.adr0X3C_ = adr0X3C_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x20000000;
        }
        result.adr0X3D_ = adr0X3D_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x40000000;
        }
        result.adr0X3E_ = adr0X3E_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x80000000;
        }
        result.adr0X3F_ = adr0X3F_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.RegiMapAccelGyro) {
          return mergeFrom((StnEggPkt.RegiMapAccelGyro)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.RegiMapAccelGyro other) {
        if (other == StnEggPkt.RegiMapAccelGyro.getDefaultInstance()) return this;
        if (other.hasAdr0X00()) {
          setAdr0X00(other.getAdr0X00());
        }
        if (other.hasAdr0X01()) {
          setAdr0X01(other.getAdr0X01());
        }
        if (other.hasAdr0X02()) {
          setAdr0X02(other.getAdr0X02());
        }
        if (other.hasAdr0X03()) {
          setAdr0X03(other.getAdr0X03());
        }
        if (other.hasAdr0X04()) {
          setAdr0X04(other.getAdr0X04());
        }
        if (other.hasAdr0X05()) {
          setAdr0X05(other.getAdr0X05());
        }
        if (other.hasAdr0X06()) {
          setAdr0X06(other.getAdr0X06());
        }
        if (other.hasAdr0X07()) {
          setAdr0X07(other.getAdr0X07());
        }
        if (other.hasAdr0X08()) {
          setAdr0X08(other.getAdr0X08());
        }
        if (other.hasAdr0X09()) {
          setAdr0X09(other.getAdr0X09());
        }
        if (other.hasAdr0X0A()) {
          setAdr0X0A(other.getAdr0X0A());
        }
        if (other.hasAdr0X0B()) {
          setAdr0X0B(other.getAdr0X0B());
        }
        if (other.hasAdr0X0C()) {
          setAdr0X0C(other.getAdr0X0C());
        }
        if (other.hasAdr0X0D()) {
          setAdr0X0D(other.getAdr0X0D());
        }
        if (other.hasAdr0X0E()) {
          setAdr0X0E(other.getAdr0X0E());
        }
        if (other.hasAdr0X0F()) {
          setAdr0X0F(other.getAdr0X0F());
        }
        if (other.hasAdr0X10()) {
          setAdr0X10(other.getAdr0X10());
        }
        if (other.hasAdr0X11()) {
          setAdr0X11(other.getAdr0X11());
        }
        if (other.hasAdr0X12()) {
          setAdr0X12(other.getAdr0X12());
        }
        if (other.hasAdr0X13()) {
          setAdr0X13(other.getAdr0X13());
        }
        if (other.hasAdr0X14()) {
          setAdr0X14(other.getAdr0X14());
        }
        if (other.hasAdr0X15()) {
          setAdr0X15(other.getAdr0X15());
        }
        if (other.hasAdr0X16()) {
          setAdr0X16(other.getAdr0X16());
        }
        if (other.hasAdr0X17()) {
          setAdr0X17(other.getAdr0X17());
        }
        if (other.hasAdr0X18()) {
          setAdr0X18(other.getAdr0X18());
        }
        if (other.hasAdr0X19()) {
          setAdr0X19(other.getAdr0X19());
        }
        if (other.hasAdr0X1A()) {
          setAdr0X1A(other.getAdr0X1A());
        }
        if (other.hasAdr0X1B()) {
          setAdr0X1B(other.getAdr0X1B());
        }
        if (other.hasAdr0X1C()) {
          setAdr0X1C(other.getAdr0X1C());
        }
        if (other.hasAdr0X1D()) {
          setAdr0X1D(other.getAdr0X1D());
        }
        if (other.hasAdr0X1E()) {
          setAdr0X1E(other.getAdr0X1E());
        }
        if (other.hasAdr0X1F()) {
          setAdr0X1F(other.getAdr0X1F());
        }
        if (other.hasAdr0X20()) {
          setAdr0X20(other.getAdr0X20());
        }
        if (other.hasAdr0X21()) {
          setAdr0X21(other.getAdr0X21());
        }
        if (other.hasAdr0X22()) {
          setAdr0X22(other.getAdr0X22());
        }
        if (other.hasAdr0X23()) {
          setAdr0X23(other.getAdr0X23());
        }
        if (other.hasAdr0X24()) {
          setAdr0X24(other.getAdr0X24());
        }
        if (other.hasAdr0X25()) {
          setAdr0X25(other.getAdr0X25());
        }
        if (other.hasAdr0X26()) {
          setAdr0X26(other.getAdr0X26());
        }
        if (other.hasAdr0X27()) {
          setAdr0X27(other.getAdr0X27());
        }
        if (other.hasAdr0X28()) {
          setAdr0X28(other.getAdr0X28());
        }
        if (other.hasAdr0X29()) {
          setAdr0X29(other.getAdr0X29());
        }
        if (other.hasAdr0X2A()) {
          setAdr0X2A(other.getAdr0X2A());
        }
        if (other.hasAdr0X2B()) {
          setAdr0X2B(other.getAdr0X2B());
        }
        if (other.hasAdr0X2C()) {
          setAdr0X2C(other.getAdr0X2C());
        }
        if (other.hasAdr0X2D()) {
          setAdr0X2D(other.getAdr0X2D());
        }
        if (other.hasAdr0X2E()) {
          setAdr0X2E(other.getAdr0X2E());
        }
        if (other.hasAdr0X2F()) {
          setAdr0X2F(other.getAdr0X2F());
        }
        if (other.hasAdr0X30()) {
          setAdr0X30(other.getAdr0X30());
        }
        if (other.hasAdr0X31()) {
          setAdr0X31(other.getAdr0X31());
        }
        if (other.hasAdr0X32()) {
          setAdr0X32(other.getAdr0X32());
        }
        if (other.hasAdr0X33()) {
          setAdr0X33(other.getAdr0X33());
        }
        if (other.hasAdr0X34()) {
          setAdr0X34(other.getAdr0X34());
        }
        if (other.hasAdr0X35()) {
          setAdr0X35(other.getAdr0X35());
        }
        if (other.hasAdr0X36()) {
          setAdr0X36(other.getAdr0X36());
        }
        if (other.hasAdr0X37()) {
          setAdr0X37(other.getAdr0X37());
        }
        if (other.hasAdr0X38()) {
          setAdr0X38(other.getAdr0X38());
        }
        if (other.hasAdr0X39()) {
          setAdr0X39(other.getAdr0X39());
        }
        if (other.hasAdr0X3A()) {
          setAdr0X3A(other.getAdr0X3A());
        }
        if (other.hasAdr0X3B()) {
          setAdr0X3B(other.getAdr0X3B());
        }
        if (other.hasAdr0X3C()) {
          setAdr0X3C(other.getAdr0X3C());
        }
        if (other.hasAdr0X3D()) {
          setAdr0X3D(other.getAdr0X3D());
        }
        if (other.hasAdr0X3E()) {
          setAdr0X3E(other.getAdr0X3E());
        }
        if (other.hasAdr0X3F()) {
          setAdr0X3F(other.getAdr0X3F());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAdr0X00()) {

          return false;
        }
        if (!hasAdr0X01()) {

          return false;
        }
        if (!hasAdr0X02()) {

          return false;
        }
        if (!hasAdr0X03()) {

          return false;
        }
        if (!hasAdr0X04()) {

          return false;
        }
        if (!hasAdr0X05()) {

          return false;
        }
        if (!hasAdr0X06()) {

          return false;
        }
        if (!hasAdr0X07()) {

          return false;
        }
        if (!hasAdr0X08()) {

          return false;
        }
        if (!hasAdr0X09()) {

          return false;
        }
        if (!hasAdr0X0A()) {

          return false;
        }
        if (!hasAdr0X0B()) {

          return false;
        }
        if (!hasAdr0X0C()) {

          return false;
        }
        if (!hasAdr0X0D()) {

          return false;
        }
        if (!hasAdr0X0E()) {

          return false;
        }
        if (!hasAdr0X0F()) {

          return false;
        }
        if (!hasAdr0X10()) {

          return false;
        }
        if (!hasAdr0X11()) {

          return false;
        }
        if (!hasAdr0X12()) {

          return false;
        }
        if (!hasAdr0X13()) {

          return false;
        }
        if (!hasAdr0X14()) {

          return false;
        }
        if (!hasAdr0X15()) {

          return false;
        }
        if (!hasAdr0X16()) {

          return false;
        }
        if (!hasAdr0X17()) {

          return false;
        }
        if (!hasAdr0X18()) {

          return false;
        }
        if (!hasAdr0X19()) {

          return false;
        }
        if (!hasAdr0X1A()) {

          return false;
        }
        if (!hasAdr0X1B()) {

          return false;
        }
        if (!hasAdr0X1C()) {

          return false;
        }
        if (!hasAdr0X1D()) {

          return false;
        }
        if (!hasAdr0X1E()) {

          return false;
        }
        if (!hasAdr0X1F()) {

          return false;
        }
        if (!hasAdr0X20()) {

          return false;
        }
        if (!hasAdr0X21()) {

          return false;
        }
        if (!hasAdr0X22()) {

          return false;
        }
        if (!hasAdr0X23()) {

          return false;
        }
        if (!hasAdr0X24()) {

          return false;
        }
        if (!hasAdr0X25()) {

          return false;
        }
        if (!hasAdr0X26()) {

          return false;
        }
        if (!hasAdr0X27()) {

          return false;
        }
        if (!hasAdr0X28()) {

          return false;
        }
        if (!hasAdr0X29()) {

          return false;
        }
        if (!hasAdr0X2A()) {

          return false;
        }
        if (!hasAdr0X2B()) {

          return false;
        }
        if (!hasAdr0X2C()) {

          return false;
        }
        if (!hasAdr0X2D()) {

          return false;
        }
        if (!hasAdr0X2E()) {

          return false;
        }
        if (!hasAdr0X2F()) {

          return false;
        }
        if (!hasAdr0X30()) {

          return false;
        }
        if (!hasAdr0X31()) {

          return false;
        }
        if (!hasAdr0X32()) {

          return false;
        }
        if (!hasAdr0X33()) {

          return false;
        }
        if (!hasAdr0X34()) {

          return false;
        }
        if (!hasAdr0X35()) {

          return false;
        }
        if (!hasAdr0X36()) {

          return false;
        }
        if (!hasAdr0X37()) {

          return false;
        }
        if (!hasAdr0X38()) {

          return false;
        }
        if (!hasAdr0X39()) {

          return false;
        }
        if (!hasAdr0X3A()) {

          return false;
        }
        if (!hasAdr0X3B()) {

          return false;
        }
        if (!hasAdr0X3C()) {

          return false;
        }
        if (!hasAdr0X3D()) {

          return false;
        }
        if (!hasAdr0X3E()) {

          return false;
        }
        if (!hasAdr0X3F()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.RegiMapAccelGyro parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.RegiMapAccelGyro) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int adr0X00_ ;
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public boolean hasAdr0X00() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public int getAdr0X00() {
        return adr0X00_;
      }
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public Builder setAdr0X00(int value) {
        bitField0_ |= 0x00000001;
        adr0X00_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public Builder clearAdr0X00() {
        bitField0_ = (bitField0_ & ~0x00000001);
        adr0X00_ = 0;
        onChanged();
        return this;
      }

      private int adr0X01_ ;
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public boolean hasAdr0X01() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public int getAdr0X01() {
        return adr0X01_;
      }
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public Builder setAdr0X01(int value) {
        bitField0_ |= 0x00000002;
        adr0X01_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public Builder clearAdr0X01() {
        bitField0_ = (bitField0_ & ~0x00000002);
        adr0X01_ = 0;
        onChanged();
        return this;
      }

      private int adr0X02_ ;
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public boolean hasAdr0X02() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public int getAdr0X02() {
        return adr0X02_;
      }
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public Builder setAdr0X02(int value) {
        bitField0_ |= 0x00000004;
        adr0X02_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public Builder clearAdr0X02() {
        bitField0_ = (bitField0_ & ~0x00000004);
        adr0X02_ = 0;
        onChanged();
        return this;
      }

      private int adr0X03_ ;
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public boolean hasAdr0X03() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public int getAdr0X03() {
        return adr0X03_;
      }
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public Builder setAdr0X03(int value) {
        bitField0_ |= 0x00000008;
        adr0X03_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public Builder clearAdr0X03() {
        bitField0_ = (bitField0_ & ~0x00000008);
        adr0X03_ = 0;
        onChanged();
        return this;
      }

      private int adr0X04_ ;
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public boolean hasAdr0X04() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public int getAdr0X04() {
        return adr0X04_;
      }
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public Builder setAdr0X04(int value) {
        bitField0_ |= 0x00000010;
        adr0X04_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public Builder clearAdr0X04() {
        bitField0_ = (bitField0_ & ~0x00000010);
        adr0X04_ = 0;
        onChanged();
        return this;
      }

      private int adr0X05_ ;
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public boolean hasAdr0X05() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public int getAdr0X05() {
        return adr0X05_;
      }
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public Builder setAdr0X05(int value) {
        bitField0_ |= 0x00000020;
        adr0X05_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public Builder clearAdr0X05() {
        bitField0_ = (bitField0_ & ~0x00000020);
        adr0X05_ = 0;
        onChanged();
        return this;
      }

      private int adr0X06_ ;
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public boolean hasAdr0X06() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public int getAdr0X06() {
        return adr0X06_;
      }
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public Builder setAdr0X06(int value) {
        bitField0_ |= 0x00000040;
        adr0X06_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public Builder clearAdr0X06() {
        bitField0_ = (bitField0_ & ~0x00000040);
        adr0X06_ = 0;
        onChanged();
        return this;
      }

      private int adr0X07_ ;
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public boolean hasAdr0X07() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public int getAdr0X07() {
        return adr0X07_;
      }
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public Builder setAdr0X07(int value) {
        bitField0_ |= 0x00000080;
        adr0X07_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public Builder clearAdr0X07() {
        bitField0_ = (bitField0_ & ~0x00000080);
        adr0X07_ = 0;
        onChanged();
        return this;
      }

      private int adr0X08_ ;
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public boolean hasAdr0X08() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public int getAdr0X08() {
        return adr0X08_;
      }
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public Builder setAdr0X08(int value) {
        bitField0_ |= 0x00000100;
        adr0X08_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public Builder clearAdr0X08() {
        bitField0_ = (bitField0_ & ~0x00000100);
        adr0X08_ = 0;
        onChanged();
        return this;
      }

      private int adr0X09_ ;
      /**
       * <code>required int32 adr_0x09 = 10;</code>
       */
      public boolean hasAdr0X09() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 adr_0x09 = 10;</code>
       */
      public int getAdr0X09() {
        return adr0X09_;
      }
      /**
       * <code>required int32 adr_0x09 = 10;</code>
       */
      public Builder setAdr0X09(int value) {
        bitField0_ |= 0x00000200;
        adr0X09_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x09 = 10;</code>
       */
      public Builder clearAdr0X09() {
        bitField0_ = (bitField0_ & ~0x00000200);
        adr0X09_ = 0;
        onChanged();
        return this;
      }

      private int adr0X0A_ ;
      /**
       * <code>required int32 adr_0x0A = 11;</code>
       */
      public boolean hasAdr0X0A() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 adr_0x0A = 11;</code>
       */
      public int getAdr0X0A() {
        return adr0X0A_;
      }
      /**
       * <code>required int32 adr_0x0A = 11;</code>
       */
      public Builder setAdr0X0A(int value) {
        bitField0_ |= 0x00000400;
        adr0X0A_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x0A = 11;</code>
       */
      public Builder clearAdr0X0A() {
        bitField0_ = (bitField0_ & ~0x00000400);
        adr0X0A_ = 0;
        onChanged();
        return this;
      }

      private int adr0X0B_ ;
      /**
       * <code>required int32 adr_0x0B = 12;</code>
       */
      public boolean hasAdr0X0B() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 adr_0x0B = 12;</code>
       */
      public int getAdr0X0B() {
        return adr0X0B_;
      }
      /**
       * <code>required int32 adr_0x0B = 12;</code>
       */
      public Builder setAdr0X0B(int value) {
        bitField0_ |= 0x00000800;
        adr0X0B_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x0B = 12;</code>
       */
      public Builder clearAdr0X0B() {
        bitField0_ = (bitField0_ & ~0x00000800);
        adr0X0B_ = 0;
        onChanged();
        return this;
      }

      private int adr0X0C_ ;
      /**
       * <code>required int32 adr_0x0C = 13;</code>
       */
      public boolean hasAdr0X0C() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 adr_0x0C = 13;</code>
       */
      public int getAdr0X0C() {
        return adr0X0C_;
      }
      /**
       * <code>required int32 adr_0x0C = 13;</code>
       */
      public Builder setAdr0X0C(int value) {
        bitField0_ |= 0x00001000;
        adr0X0C_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x0C = 13;</code>
       */
      public Builder clearAdr0X0C() {
        bitField0_ = (bitField0_ & ~0x00001000);
        adr0X0C_ = 0;
        onChanged();
        return this;
      }

      private int adr0X0D_ ;
      /**
       * <code>required int32 adr_0x0D = 14;</code>
       */
      public boolean hasAdr0X0D() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 adr_0x0D = 14;</code>
       */
      public int getAdr0X0D() {
        return adr0X0D_;
      }
      /**
       * <code>required int32 adr_0x0D = 14;</code>
       */
      public Builder setAdr0X0D(int value) {
        bitField0_ |= 0x00002000;
        adr0X0D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x0D = 14;</code>
       */
      public Builder clearAdr0X0D() {
        bitField0_ = (bitField0_ & ~0x00002000);
        adr0X0D_ = 0;
        onChanged();
        return this;
      }

      private int adr0X0E_ ;
      /**
       * <code>required int32 adr_0x0E = 15;</code>
       */
      public boolean hasAdr0X0E() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 adr_0x0E = 15;</code>
       */
      public int getAdr0X0E() {
        return adr0X0E_;
      }
      /**
       * <code>required int32 adr_0x0E = 15;</code>
       */
      public Builder setAdr0X0E(int value) {
        bitField0_ |= 0x00004000;
        adr0X0E_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x0E = 15;</code>
       */
      public Builder clearAdr0X0E() {
        bitField0_ = (bitField0_ & ~0x00004000);
        adr0X0E_ = 0;
        onChanged();
        return this;
      }

      private int adr0X0F_ ;
      /**
       * <code>required int32 adr_0x0F = 16;</code>
       */
      public boolean hasAdr0X0F() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 adr_0x0F = 16;</code>
       */
      public int getAdr0X0F() {
        return adr0X0F_;
      }
      /**
       * <code>required int32 adr_0x0F = 16;</code>
       */
      public Builder setAdr0X0F(int value) {
        bitField0_ |= 0x00008000;
        adr0X0F_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x0F = 16;</code>
       */
      public Builder clearAdr0X0F() {
        bitField0_ = (bitField0_ & ~0x00008000);
        adr0X0F_ = 0;
        onChanged();
        return this;
      }

      private int adr0X10_ ;
      /**
       * <code>required int32 adr_0x10 = 17;</code>
       */
      public boolean hasAdr0X10() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 adr_0x10 = 17;</code>
       */
      public int getAdr0X10() {
        return adr0X10_;
      }
      /**
       * <code>required int32 adr_0x10 = 17;</code>
       */
      public Builder setAdr0X10(int value) {
        bitField0_ |= 0x00010000;
        adr0X10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x10 = 17;</code>
       */
      public Builder clearAdr0X10() {
        bitField0_ = (bitField0_ & ~0x00010000);
        adr0X10_ = 0;
        onChanged();
        return this;
      }

      private int adr0X11_ ;
      /**
       * <code>required int32 adr_0x11 = 18;</code>
       */
      public boolean hasAdr0X11() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 adr_0x11 = 18;</code>
       */
      public int getAdr0X11() {
        return adr0X11_;
      }
      /**
       * <code>required int32 adr_0x11 = 18;</code>
       */
      public Builder setAdr0X11(int value) {
        bitField0_ |= 0x00020000;
        adr0X11_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x11 = 18;</code>
       */
      public Builder clearAdr0X11() {
        bitField0_ = (bitField0_ & ~0x00020000);
        adr0X11_ = 0;
        onChanged();
        return this;
      }

      private int adr0X12_ ;
      /**
       * <code>required int32 adr_0x12 = 19;</code>
       */
      public boolean hasAdr0X12() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 adr_0x12 = 19;</code>
       */
      public int getAdr0X12() {
        return adr0X12_;
      }
      /**
       * <code>required int32 adr_0x12 = 19;</code>
       */
      public Builder setAdr0X12(int value) {
        bitField0_ |= 0x00040000;
        adr0X12_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x12 = 19;</code>
       */
      public Builder clearAdr0X12() {
        bitField0_ = (bitField0_ & ~0x00040000);
        adr0X12_ = 0;
        onChanged();
        return this;
      }

      private int adr0X13_ ;
      /**
       * <code>required int32 adr_0x13 = 20;</code>
       */
      public boolean hasAdr0X13() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required int32 adr_0x13 = 20;</code>
       */
      public int getAdr0X13() {
        return adr0X13_;
      }
      /**
       * <code>required int32 adr_0x13 = 20;</code>
       */
      public Builder setAdr0X13(int value) {
        bitField0_ |= 0x00080000;
        adr0X13_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x13 = 20;</code>
       */
      public Builder clearAdr0X13() {
        bitField0_ = (bitField0_ & ~0x00080000);
        adr0X13_ = 0;
        onChanged();
        return this;
      }

      private int adr0X14_ ;
      /**
       * <code>required int32 adr_0x14 = 21;</code>
       */
      public boolean hasAdr0X14() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required int32 adr_0x14 = 21;</code>
       */
      public int getAdr0X14() {
        return adr0X14_;
      }
      /**
       * <code>required int32 adr_0x14 = 21;</code>
       */
      public Builder setAdr0X14(int value) {
        bitField0_ |= 0x00100000;
        adr0X14_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x14 = 21;</code>
       */
      public Builder clearAdr0X14() {
        bitField0_ = (bitField0_ & ~0x00100000);
        adr0X14_ = 0;
        onChanged();
        return this;
      }

      private int adr0X15_ ;
      /**
       * <code>required int32 adr_0x15 = 22;</code>
       */
      public boolean hasAdr0X15() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required int32 adr_0x15 = 22;</code>
       */
      public int getAdr0X15() {
        return adr0X15_;
      }
      /**
       * <code>required int32 adr_0x15 = 22;</code>
       */
      public Builder setAdr0X15(int value) {
        bitField0_ |= 0x00200000;
        adr0X15_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x15 = 22;</code>
       */
      public Builder clearAdr0X15() {
        bitField0_ = (bitField0_ & ~0x00200000);
        adr0X15_ = 0;
        onChanged();
        return this;
      }

      private int adr0X16_ ;
      /**
       * <code>required int32 adr_0x16 = 23;</code>
       */
      public boolean hasAdr0X16() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required int32 adr_0x16 = 23;</code>
       */
      public int getAdr0X16() {
        return adr0X16_;
      }
      /**
       * <code>required int32 adr_0x16 = 23;</code>
       */
      public Builder setAdr0X16(int value) {
        bitField0_ |= 0x00400000;
        adr0X16_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x16 = 23;</code>
       */
      public Builder clearAdr0X16() {
        bitField0_ = (bitField0_ & ~0x00400000);
        adr0X16_ = 0;
        onChanged();
        return this;
      }

      private int adr0X17_ ;
      /**
       * <code>required int32 adr_0x17 = 24;</code>
       */
      public boolean hasAdr0X17() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>required int32 adr_0x17 = 24;</code>
       */
      public int getAdr0X17() {
        return adr0X17_;
      }
      /**
       * <code>required int32 adr_0x17 = 24;</code>
       */
      public Builder setAdr0X17(int value) {
        bitField0_ |= 0x00800000;
        adr0X17_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x17 = 24;</code>
       */
      public Builder clearAdr0X17() {
        bitField0_ = (bitField0_ & ~0x00800000);
        adr0X17_ = 0;
        onChanged();
        return this;
      }

      private int adr0X18_ ;
      /**
       * <code>required int32 adr_0x18 = 25;</code>
       */
      public boolean hasAdr0X18() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required int32 adr_0x18 = 25;</code>
       */
      public int getAdr0X18() {
        return adr0X18_;
      }
      /**
       * <code>required int32 adr_0x18 = 25;</code>
       */
      public Builder setAdr0X18(int value) {
        bitField0_ |= 0x01000000;
        adr0X18_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x18 = 25;</code>
       */
      public Builder clearAdr0X18() {
        bitField0_ = (bitField0_ & ~0x01000000);
        adr0X18_ = 0;
        onChanged();
        return this;
      }

      private int adr0X19_ ;
      /**
       * <code>required int32 adr_0x19 = 26;</code>
       */
      public boolean hasAdr0X19() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>required int32 adr_0x19 = 26;</code>
       */
      public int getAdr0X19() {
        return adr0X19_;
      }
      /**
       * <code>required int32 adr_0x19 = 26;</code>
       */
      public Builder setAdr0X19(int value) {
        bitField0_ |= 0x02000000;
        adr0X19_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x19 = 26;</code>
       */
      public Builder clearAdr0X19() {
        bitField0_ = (bitField0_ & ~0x02000000);
        adr0X19_ = 0;
        onChanged();
        return this;
      }

      private int adr0X1A_ ;
      /**
       * <code>required int32 adr_0x1A = 27;</code>
       */
      public boolean hasAdr0X1A() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>required int32 adr_0x1A = 27;</code>
       */
      public int getAdr0X1A() {
        return adr0X1A_;
      }
      /**
       * <code>required int32 adr_0x1A = 27;</code>
       */
      public Builder setAdr0X1A(int value) {
        bitField0_ |= 0x04000000;
        adr0X1A_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x1A = 27;</code>
       */
      public Builder clearAdr0X1A() {
        bitField0_ = (bitField0_ & ~0x04000000);
        adr0X1A_ = 0;
        onChanged();
        return this;
      }

      private int adr0X1B_ ;
      /**
       * <code>required int32 adr_0x1B = 28;</code>
       */
      public boolean hasAdr0X1B() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>required int32 adr_0x1B = 28;</code>
       */
      public int getAdr0X1B() {
        return adr0X1B_;
      }
      /**
       * <code>required int32 adr_0x1B = 28;</code>
       */
      public Builder setAdr0X1B(int value) {
        bitField0_ |= 0x08000000;
        adr0X1B_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x1B = 28;</code>
       */
      public Builder clearAdr0X1B() {
        bitField0_ = (bitField0_ & ~0x08000000);
        adr0X1B_ = 0;
        onChanged();
        return this;
      }

      private int adr0X1C_ ;
      /**
       * <code>required int32 adr_0x1C = 29;</code>
       */
      public boolean hasAdr0X1C() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>required int32 adr_0x1C = 29;</code>
       */
      public int getAdr0X1C() {
        return adr0X1C_;
      }
      /**
       * <code>required int32 adr_0x1C = 29;</code>
       */
      public Builder setAdr0X1C(int value) {
        bitField0_ |= 0x10000000;
        adr0X1C_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x1C = 29;</code>
       */
      public Builder clearAdr0X1C() {
        bitField0_ = (bitField0_ & ~0x10000000);
        adr0X1C_ = 0;
        onChanged();
        return this;
      }

      private int adr0X1D_ ;
      /**
       * <code>required int32 adr_0x1D = 30;</code>
       */
      public boolean hasAdr0X1D() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>required int32 adr_0x1D = 30;</code>
       */
      public int getAdr0X1D() {
        return adr0X1D_;
      }
      /**
       * <code>required int32 adr_0x1D = 30;</code>
       */
      public Builder setAdr0X1D(int value) {
        bitField0_ |= 0x20000000;
        adr0X1D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x1D = 30;</code>
       */
      public Builder clearAdr0X1D() {
        bitField0_ = (bitField0_ & ~0x20000000);
        adr0X1D_ = 0;
        onChanged();
        return this;
      }

      private int adr0X1E_ ;
      /**
       * <code>required int32 adr_0x1E = 31;</code>
       */
      public boolean hasAdr0X1E() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>required int32 adr_0x1E = 31;</code>
       */
      public int getAdr0X1E() {
        return adr0X1E_;
      }
      /**
       * <code>required int32 adr_0x1E = 31;</code>
       */
      public Builder setAdr0X1E(int value) {
        bitField0_ |= 0x40000000;
        adr0X1E_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x1E = 31;</code>
       */
      public Builder clearAdr0X1E() {
        bitField0_ = (bitField0_ & ~0x40000000);
        adr0X1E_ = 0;
        onChanged();
        return this;
      }

      private int adr0X1F_ ;
      /**
       * <code>required int32 adr_0x1F = 32;</code>
       */
      public boolean hasAdr0X1F() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>required int32 adr_0x1F = 32;</code>
       */
      public int getAdr0X1F() {
        return adr0X1F_;
      }
      /**
       * <code>required int32 adr_0x1F = 32;</code>
       */
      public Builder setAdr0X1F(int value) {
        bitField0_ |= 0x80000000;
        adr0X1F_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x1F = 32;</code>
       */
      public Builder clearAdr0X1F() {
        bitField0_ = (bitField0_ & ~0x80000000);
        adr0X1F_ = 0;
        onChanged();
        return this;
      }

      private int adr0X20_ ;
      /**
       * <code>required int32 adr_0x20 = 33;</code>
       */
      public boolean hasAdr0X20() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 adr_0x20 = 33;</code>
       */
      public int getAdr0X20() {
        return adr0X20_;
      }
      /**
       * <code>required int32 adr_0x20 = 33;</code>
       */
      public Builder setAdr0X20(int value) {
        bitField1_ |= 0x00000001;
        adr0X20_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x20 = 33;</code>
       */
      public Builder clearAdr0X20() {
        bitField1_ = (bitField1_ & ~0x00000001);
        adr0X20_ = 0;
        onChanged();
        return this;
      }

      private int adr0X21_ ;
      /**
       * <code>required int32 adr_0x21 = 34;</code>
       */
      public boolean hasAdr0X21() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 adr_0x21 = 34;</code>
       */
      public int getAdr0X21() {
        return adr0X21_;
      }
      /**
       * <code>required int32 adr_0x21 = 34;</code>
       */
      public Builder setAdr0X21(int value) {
        bitField1_ |= 0x00000002;
        adr0X21_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x21 = 34;</code>
       */
      public Builder clearAdr0X21() {
        bitField1_ = (bitField1_ & ~0x00000002);
        adr0X21_ = 0;
        onChanged();
        return this;
      }

      private int adr0X22_ ;
      /**
       * <code>required int32 adr_0x22 = 35;</code>
       */
      public boolean hasAdr0X22() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 adr_0x22 = 35;</code>
       */
      public int getAdr0X22() {
        return adr0X22_;
      }
      /**
       * <code>required int32 adr_0x22 = 35;</code>
       */
      public Builder setAdr0X22(int value) {
        bitField1_ |= 0x00000004;
        adr0X22_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x22 = 35;</code>
       */
      public Builder clearAdr0X22() {
        bitField1_ = (bitField1_ & ~0x00000004);
        adr0X22_ = 0;
        onChanged();
        return this;
      }

      private int adr0X23_ ;
      /**
       * <code>required int32 adr_0x23 = 36;</code>
       */
      public boolean hasAdr0X23() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 adr_0x23 = 36;</code>
       */
      public int getAdr0X23() {
        return adr0X23_;
      }
      /**
       * <code>required int32 adr_0x23 = 36;</code>
       */
      public Builder setAdr0X23(int value) {
        bitField1_ |= 0x00000008;
        adr0X23_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x23 = 36;</code>
       */
      public Builder clearAdr0X23() {
        bitField1_ = (bitField1_ & ~0x00000008);
        adr0X23_ = 0;
        onChanged();
        return this;
      }

      private int adr0X24_ ;
      /**
       * <code>required int32 adr_0x24 = 37;</code>
       */
      public boolean hasAdr0X24() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 adr_0x24 = 37;</code>
       */
      public int getAdr0X24() {
        return adr0X24_;
      }
      /**
       * <code>required int32 adr_0x24 = 37;</code>
       */
      public Builder setAdr0X24(int value) {
        bitField1_ |= 0x00000010;
        adr0X24_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x24 = 37;</code>
       */
      public Builder clearAdr0X24() {
        bitField1_ = (bitField1_ & ~0x00000010);
        adr0X24_ = 0;
        onChanged();
        return this;
      }

      private int adr0X25_ ;
      /**
       * <code>required int32 adr_0x25 = 38;</code>
       */
      public boolean hasAdr0X25() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 adr_0x25 = 38;</code>
       */
      public int getAdr0X25() {
        return adr0X25_;
      }
      /**
       * <code>required int32 adr_0x25 = 38;</code>
       */
      public Builder setAdr0X25(int value) {
        bitField1_ |= 0x00000020;
        adr0X25_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x25 = 38;</code>
       */
      public Builder clearAdr0X25() {
        bitField1_ = (bitField1_ & ~0x00000020);
        adr0X25_ = 0;
        onChanged();
        return this;
      }

      private int adr0X26_ ;
      /**
       * <code>required int32 adr_0x26 = 39;</code>
       */
      public boolean hasAdr0X26() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 adr_0x26 = 39;</code>
       */
      public int getAdr0X26() {
        return adr0X26_;
      }
      /**
       * <code>required int32 adr_0x26 = 39;</code>
       */
      public Builder setAdr0X26(int value) {
        bitField1_ |= 0x00000040;
        adr0X26_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x26 = 39;</code>
       */
      public Builder clearAdr0X26() {
        bitField1_ = (bitField1_ & ~0x00000040);
        adr0X26_ = 0;
        onChanged();
        return this;
      }

      private int adr0X27_ ;
      /**
       * <code>required int32 adr_0x27 = 40;</code>
       */
      public boolean hasAdr0X27() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 adr_0x27 = 40;</code>
       */
      public int getAdr0X27() {
        return adr0X27_;
      }
      /**
       * <code>required int32 adr_0x27 = 40;</code>
       */
      public Builder setAdr0X27(int value) {
        bitField1_ |= 0x00000080;
        adr0X27_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x27 = 40;</code>
       */
      public Builder clearAdr0X27() {
        bitField1_ = (bitField1_ & ~0x00000080);
        adr0X27_ = 0;
        onChanged();
        return this;
      }

      private int adr0X28_ ;
      /**
       * <code>required int32 adr_0x28 = 41;</code>
       */
      public boolean hasAdr0X28() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 adr_0x28 = 41;</code>
       */
      public int getAdr0X28() {
        return adr0X28_;
      }
      /**
       * <code>required int32 adr_0x28 = 41;</code>
       */
      public Builder setAdr0X28(int value) {
        bitField1_ |= 0x00000100;
        adr0X28_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x28 = 41;</code>
       */
      public Builder clearAdr0X28() {
        bitField1_ = (bitField1_ & ~0x00000100);
        adr0X28_ = 0;
        onChanged();
        return this;
      }

      private int adr0X29_ ;
      /**
       * <code>required int32 adr_0x29 = 42;</code>
       */
      public boolean hasAdr0X29() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 adr_0x29 = 42;</code>
       */
      public int getAdr0X29() {
        return adr0X29_;
      }
      /**
       * <code>required int32 adr_0x29 = 42;</code>
       */
      public Builder setAdr0X29(int value) {
        bitField1_ |= 0x00000200;
        adr0X29_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x29 = 42;</code>
       */
      public Builder clearAdr0X29() {
        bitField1_ = (bitField1_ & ~0x00000200);
        adr0X29_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2A_ ;
      /**
       * <code>required int32 adr_0x2A = 43;</code>
       */
      public boolean hasAdr0X2A() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 adr_0x2A = 43;</code>
       */
      public int getAdr0X2A() {
        return adr0X2A_;
      }
      /**
       * <code>required int32 adr_0x2A = 43;</code>
       */
      public Builder setAdr0X2A(int value) {
        bitField1_ |= 0x00000400;
        adr0X2A_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2A = 43;</code>
       */
      public Builder clearAdr0X2A() {
        bitField1_ = (bitField1_ & ~0x00000400);
        adr0X2A_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2B_ ;
      /**
       * <code>required int32 adr_0x2B = 44;</code>
       */
      public boolean hasAdr0X2B() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 adr_0x2B = 44;</code>
       */
      public int getAdr0X2B() {
        return adr0X2B_;
      }
      /**
       * <code>required int32 adr_0x2B = 44;</code>
       */
      public Builder setAdr0X2B(int value) {
        bitField1_ |= 0x00000800;
        adr0X2B_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2B = 44;</code>
       */
      public Builder clearAdr0X2B() {
        bitField1_ = (bitField1_ & ~0x00000800);
        adr0X2B_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2C_ ;
      /**
       * <code>required int32 adr_0x2C = 45;</code>
       */
      public boolean hasAdr0X2C() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 adr_0x2C = 45;</code>
       */
      public int getAdr0X2C() {
        return adr0X2C_;
      }
      /**
       * <code>required int32 adr_0x2C = 45;</code>
       */
      public Builder setAdr0X2C(int value) {
        bitField1_ |= 0x00001000;
        adr0X2C_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2C = 45;</code>
       */
      public Builder clearAdr0X2C() {
        bitField1_ = (bitField1_ & ~0x00001000);
        adr0X2C_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2D_ ;
      /**
       * <code>required int32 adr_0x2D = 46;</code>
       */
      public boolean hasAdr0X2D() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 adr_0x2D = 46;</code>
       */
      public int getAdr0X2D() {
        return adr0X2D_;
      }
      /**
       * <code>required int32 adr_0x2D = 46;</code>
       */
      public Builder setAdr0X2D(int value) {
        bitField1_ |= 0x00002000;
        adr0X2D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2D = 46;</code>
       */
      public Builder clearAdr0X2D() {
        bitField1_ = (bitField1_ & ~0x00002000);
        adr0X2D_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2E_ ;
      /**
       * <code>required int32 adr_0x2E = 47;</code>
       */
      public boolean hasAdr0X2E() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 adr_0x2E = 47;</code>
       */
      public int getAdr0X2E() {
        return adr0X2E_;
      }
      /**
       * <code>required int32 adr_0x2E = 47;</code>
       */
      public Builder setAdr0X2E(int value) {
        bitField1_ |= 0x00004000;
        adr0X2E_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2E = 47;</code>
       */
      public Builder clearAdr0X2E() {
        bitField1_ = (bitField1_ & ~0x00004000);
        adr0X2E_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2F_ ;
      /**
       * <code>required int32 adr_0x2F = 48;</code>
       */
      public boolean hasAdr0X2F() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 adr_0x2F = 48;</code>
       */
      public int getAdr0X2F() {
        return adr0X2F_;
      }
      /**
       * <code>required int32 adr_0x2F = 48;</code>
       */
      public Builder setAdr0X2F(int value) {
        bitField1_ |= 0x00008000;
        adr0X2F_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2F = 48;</code>
       */
      public Builder clearAdr0X2F() {
        bitField1_ = (bitField1_ & ~0x00008000);
        adr0X2F_ = 0;
        onChanged();
        return this;
      }

      private int adr0X30_ ;
      /**
       * <code>required int32 adr_0x30 = 49;</code>
       */
      public boolean hasAdr0X30() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 adr_0x30 = 49;</code>
       */
      public int getAdr0X30() {
        return adr0X30_;
      }
      /**
       * <code>required int32 adr_0x30 = 49;</code>
       */
      public Builder setAdr0X30(int value) {
        bitField1_ |= 0x00010000;
        adr0X30_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x30 = 49;</code>
       */
      public Builder clearAdr0X30() {
        bitField1_ = (bitField1_ & ~0x00010000);
        adr0X30_ = 0;
        onChanged();
        return this;
      }

      private int adr0X31_ ;
      /**
       * <code>required int32 adr_0x31 = 50;</code>
       */
      public boolean hasAdr0X31() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 adr_0x31 = 50;</code>
       */
      public int getAdr0X31() {
        return adr0X31_;
      }
      /**
       * <code>required int32 adr_0x31 = 50;</code>
       */
      public Builder setAdr0X31(int value) {
        bitField1_ |= 0x00020000;
        adr0X31_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x31 = 50;</code>
       */
      public Builder clearAdr0X31() {
        bitField1_ = (bitField1_ & ~0x00020000);
        adr0X31_ = 0;
        onChanged();
        return this;
      }

      private int adr0X32_ ;
      /**
       * <code>required int32 adr_0x32 = 51;</code>
       */
      public boolean hasAdr0X32() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 adr_0x32 = 51;</code>
       */
      public int getAdr0X32() {
        return adr0X32_;
      }
      /**
       * <code>required int32 adr_0x32 = 51;</code>
       */
      public Builder setAdr0X32(int value) {
        bitField1_ |= 0x00040000;
        adr0X32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x32 = 51;</code>
       */
      public Builder clearAdr0X32() {
        bitField1_ = (bitField1_ & ~0x00040000);
        adr0X32_ = 0;
        onChanged();
        return this;
      }

      private int adr0X33_ ;
      /**
       * <code>required int32 adr_0x33 = 52;</code>
       */
      public boolean hasAdr0X33() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required int32 adr_0x33 = 52;</code>
       */
      public int getAdr0X33() {
        return adr0X33_;
      }
      /**
       * <code>required int32 adr_0x33 = 52;</code>
       */
      public Builder setAdr0X33(int value) {
        bitField1_ |= 0x00080000;
        adr0X33_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x33 = 52;</code>
       */
      public Builder clearAdr0X33() {
        bitField1_ = (bitField1_ & ~0x00080000);
        adr0X33_ = 0;
        onChanged();
        return this;
      }

      private int adr0X34_ ;
      /**
       * <code>required int32 adr_0x34 = 53;</code>
       */
      public boolean hasAdr0X34() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required int32 adr_0x34 = 53;</code>
       */
      public int getAdr0X34() {
        return adr0X34_;
      }
      /**
       * <code>required int32 adr_0x34 = 53;</code>
       */
      public Builder setAdr0X34(int value) {
        bitField1_ |= 0x00100000;
        adr0X34_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x34 = 53;</code>
       */
      public Builder clearAdr0X34() {
        bitField1_ = (bitField1_ & ~0x00100000);
        adr0X34_ = 0;
        onChanged();
        return this;
      }

      private int adr0X35_ ;
      /**
       * <code>required int32 adr_0x35 = 54;</code>
       */
      public boolean hasAdr0X35() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required int32 adr_0x35 = 54;</code>
       */
      public int getAdr0X35() {
        return adr0X35_;
      }
      /**
       * <code>required int32 adr_0x35 = 54;</code>
       */
      public Builder setAdr0X35(int value) {
        bitField1_ |= 0x00200000;
        adr0X35_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x35 = 54;</code>
       */
      public Builder clearAdr0X35() {
        bitField1_ = (bitField1_ & ~0x00200000);
        adr0X35_ = 0;
        onChanged();
        return this;
      }

      private int adr0X36_ ;
      /**
       * <code>required int32 adr_0x36 = 55;</code>
       */
      public boolean hasAdr0X36() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required int32 adr_0x36 = 55;</code>
       */
      public int getAdr0X36() {
        return adr0X36_;
      }
      /**
       * <code>required int32 adr_0x36 = 55;</code>
       */
      public Builder setAdr0X36(int value) {
        bitField1_ |= 0x00400000;
        adr0X36_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x36 = 55;</code>
       */
      public Builder clearAdr0X36() {
        bitField1_ = (bitField1_ & ~0x00400000);
        adr0X36_ = 0;
        onChanged();
        return this;
      }

      private int adr0X37_ ;
      /**
       * <code>required int32 adr_0x37 = 56;</code>
       */
      public boolean hasAdr0X37() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>required int32 adr_0x37 = 56;</code>
       */
      public int getAdr0X37() {
        return adr0X37_;
      }
      /**
       * <code>required int32 adr_0x37 = 56;</code>
       */
      public Builder setAdr0X37(int value) {
        bitField1_ |= 0x00800000;
        adr0X37_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x37 = 56;</code>
       */
      public Builder clearAdr0X37() {
        bitField1_ = (bitField1_ & ~0x00800000);
        adr0X37_ = 0;
        onChanged();
        return this;
      }

      private int adr0X38_ ;
      /**
       * <code>required int32 adr_0x38 = 57;</code>
       */
      public boolean hasAdr0X38() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required int32 adr_0x38 = 57;</code>
       */
      public int getAdr0X38() {
        return adr0X38_;
      }
      /**
       * <code>required int32 adr_0x38 = 57;</code>
       */
      public Builder setAdr0X38(int value) {
        bitField1_ |= 0x01000000;
        adr0X38_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x38 = 57;</code>
       */
      public Builder clearAdr0X38() {
        bitField1_ = (bitField1_ & ~0x01000000);
        adr0X38_ = 0;
        onChanged();
        return this;
      }

      private int adr0X39_ ;
      /**
       * <code>required int32 adr_0x39 = 58;</code>
       */
      public boolean hasAdr0X39() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>required int32 adr_0x39 = 58;</code>
       */
      public int getAdr0X39() {
        return adr0X39_;
      }
      /**
       * <code>required int32 adr_0x39 = 58;</code>
       */
      public Builder setAdr0X39(int value) {
        bitField1_ |= 0x02000000;
        adr0X39_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x39 = 58;</code>
       */
      public Builder clearAdr0X39() {
        bitField1_ = (bitField1_ & ~0x02000000);
        adr0X39_ = 0;
        onChanged();
        return this;
      }

      private int adr0X3A_ ;
      /**
       * <code>required int32 adr_0x3A = 59;</code>
       */
      public boolean hasAdr0X3A() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>required int32 adr_0x3A = 59;</code>
       */
      public int getAdr0X3A() {
        return adr0X3A_;
      }
      /**
       * <code>required int32 adr_0x3A = 59;</code>
       */
      public Builder setAdr0X3A(int value) {
        bitField1_ |= 0x04000000;
        adr0X3A_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x3A = 59;</code>
       */
      public Builder clearAdr0X3A() {
        bitField1_ = (bitField1_ & ~0x04000000);
        adr0X3A_ = 0;
        onChanged();
        return this;
      }

      private int adr0X3B_ ;
      /**
       * <code>required int32 adr_0x3B = 60;</code>
       */
      public boolean hasAdr0X3B() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>required int32 adr_0x3B = 60;</code>
       */
      public int getAdr0X3B() {
        return adr0X3B_;
      }
      /**
       * <code>required int32 adr_0x3B = 60;</code>
       */
      public Builder setAdr0X3B(int value) {
        bitField1_ |= 0x08000000;
        adr0X3B_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x3B = 60;</code>
       */
      public Builder clearAdr0X3B() {
        bitField1_ = (bitField1_ & ~0x08000000);
        adr0X3B_ = 0;
        onChanged();
        return this;
      }

      private int adr0X3C_ ;
      /**
       * <code>required int32 adr_0x3C = 61;</code>
       */
      public boolean hasAdr0X3C() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>required int32 adr_0x3C = 61;</code>
       */
      public int getAdr0X3C() {
        return adr0X3C_;
      }
      /**
       * <code>required int32 adr_0x3C = 61;</code>
       */
      public Builder setAdr0X3C(int value) {
        bitField1_ |= 0x10000000;
        adr0X3C_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x3C = 61;</code>
       */
      public Builder clearAdr0X3C() {
        bitField1_ = (bitField1_ & ~0x10000000);
        adr0X3C_ = 0;
        onChanged();
        return this;
      }

      private int adr0X3D_ ;
      /**
       * <code>required int32 adr_0x3D = 62;</code>
       */
      public boolean hasAdr0X3D() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>required int32 adr_0x3D = 62;</code>
       */
      public int getAdr0X3D() {
        return adr0X3D_;
      }
      /**
       * <code>required int32 adr_0x3D = 62;</code>
       */
      public Builder setAdr0X3D(int value) {
        bitField1_ |= 0x20000000;
        adr0X3D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x3D = 62;</code>
       */
      public Builder clearAdr0X3D() {
        bitField1_ = (bitField1_ & ~0x20000000);
        adr0X3D_ = 0;
        onChanged();
        return this;
      }

      private int adr0X3E_ ;
      /**
       * <code>required int32 adr_0x3E = 63;</code>
       */
      public boolean hasAdr0X3E() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>required int32 adr_0x3E = 63;</code>
       */
      public int getAdr0X3E() {
        return adr0X3E_;
      }
      /**
       * <code>required int32 adr_0x3E = 63;</code>
       */
      public Builder setAdr0X3E(int value) {
        bitField1_ |= 0x40000000;
        adr0X3E_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x3E = 63;</code>
       */
      public Builder clearAdr0X3E() {
        bitField1_ = (bitField1_ & ~0x40000000);
        adr0X3E_ = 0;
        onChanged();
        return this;
      }

      private int adr0X3F_ ;
      /**
       * <code>required int32 adr_0x3F = 64;</code>
       */
      public boolean hasAdr0X3F() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>required int32 adr_0x3F = 64;</code>
       */
      public int getAdr0X3F() {
        return adr0X3F_;
      }
      /**
       * <code>required int32 adr_0x3F = 64;</code>
       */
      public Builder setAdr0X3F(int value) {
        bitField1_ |= 0x80000000;
        adr0X3F_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x3F = 64;</code>
       */
      public Builder clearAdr0X3F() {
        bitField1_ = (bitField1_ & ~0x80000000);
        adr0X3F_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RegiMapAccelGyro)
    }

    static {
      defaultInstance = new RegiMapAccelGyro(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RegiMapAccelGyro)
  }

  public interface RegiMapMagOrBuilder extends
          // @@protoc_insertion_point(interface_extends:RegiMapMag)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    boolean hasAdr0X00();
    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    int getAdr0X00();

    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    boolean hasAdr0X01();
    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    int getAdr0X01();

    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    boolean hasAdr0X02();
    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    int getAdr0X02();

    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    boolean hasAdr0X03();
    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    int getAdr0X03();

    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    boolean hasAdr0X04();
    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    int getAdr0X04();

    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    boolean hasAdr0X05();
    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    int getAdr0X05();

    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    boolean hasAdr0X06();
    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    int getAdr0X06();

    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    boolean hasAdr0X07();
    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    int getAdr0X07();

    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    boolean hasAdr0X08();
    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    int getAdr0X08();

    /**
     * <code>required int32 adr_0x10 = 10;</code>
     */
    boolean hasAdr0X10();
    /**
     * <code>required int32 adr_0x10 = 10;</code>
     */
    int getAdr0X10();

    /**
     * <code>required int32 adr_0x11 = 11;</code>
     */
    boolean hasAdr0X11();
    /**
     * <code>required int32 adr_0x11 = 11;</code>
     */
    int getAdr0X11();

    /**
     * <code>required int32 adr_0x12 = 12;</code>
     */
    boolean hasAdr0X12();
    /**
     * <code>required int32 adr_0x12 = 12;</code>
     */
    int getAdr0X12();

    /**
     * <code>required int32 adr_0x20 = 13;</code>
     */
    boolean hasAdr0X20();
    /**
     * <code>required int32 adr_0x20 = 13;</code>
     */
    int getAdr0X20();

    /**
     * <code>required int32 adr_0x21 = 14;</code>
     */
    boolean hasAdr0X21();
    /**
     * <code>required int32 adr_0x21 = 14;</code>
     */
    int getAdr0X21();

    /**
     * <code>required int32 adr_0x22 = 15;</code>
     */
    boolean hasAdr0X22();
    /**
     * <code>required int32 adr_0x22 = 15;</code>
     */
    int getAdr0X22();

    /**
     * <code>required int32 adr_0x23 = 16;</code>
     */
    boolean hasAdr0X23();
    /**
     * <code>required int32 adr_0x23 = 16;</code>
     */
    int getAdr0X23();

    /**
     * <code>required int32 adr_0x24 = 17;</code>
     */
    boolean hasAdr0X24();
    /**
     * <code>required int32 adr_0x24 = 17;</code>
     */
    int getAdr0X24();

    /**
     * <code>required int32 adr_0x25 = 18;</code>
     */
    boolean hasAdr0X25();
    /**
     * <code>required int32 adr_0x25 = 18;</code>
     */
    int getAdr0X25();

    /**
     * <code>required int32 adr_0x26 = 19;</code>
     */
    boolean hasAdr0X26();
    /**
     * <code>required int32 adr_0x26 = 19;</code>
     */
    int getAdr0X26();

    /**
     * <code>required int32 adr_0x27 = 20;</code>
     */
    boolean hasAdr0X27();
    /**
     * <code>required int32 adr_0x27 = 20;</code>
     */
    int getAdr0X27();

    /**
     * <code>required int32 adr_0x28 = 21;</code>
     */
    boolean hasAdr0X28();
    /**
     * <code>required int32 adr_0x28 = 21;</code>
     */
    int getAdr0X28();

    /**
     * <code>required int32 adr_0x29 = 22;</code>
     */
    boolean hasAdr0X29();
    /**
     * <code>required int32 adr_0x29 = 22;</code>
     */
    int getAdr0X29();

    /**
     * <code>required int32 adr_0x2A = 23;</code>
     */
    boolean hasAdr0X2A();
    /**
     * <code>required int32 adr_0x2A = 23;</code>
     */
    int getAdr0X2A();

    /**
     * <code>required int32 adr_0x2B = 24;</code>
     */
    boolean hasAdr0X2B();
    /**
     * <code>required int32 adr_0x2B = 24;</code>
     */
    int getAdr0X2B();

    /**
     * <code>required int32 adr_0x2C = 25;</code>
     */
    boolean hasAdr0X2C();
    /**
     * <code>required int32 adr_0x2C = 25;</code>
     */
    int getAdr0X2C();

    /**
     * <code>required int32 adr_0x2D = 26;</code>
     */
    boolean hasAdr0X2D();
    /**
     * <code>required int32 adr_0x2D = 26;</code>
     */
    int getAdr0X2D();

    /**
     * <code>required int32 adr_0x2E = 27;</code>
     */
    boolean hasAdr0X2E();
    /**
     * <code>required int32 adr_0x2E = 27;</code>
     */
    int getAdr0X2E();

    /**
     * <code>required int32 adr_0x30 = 28;</code>
     */
    boolean hasAdr0X30();
    /**
     * <code>required int32 adr_0x30 = 28;</code>
     */
    int getAdr0X30();

    /**
     * <code>required int32 adr_0x31 = 29;</code>
     */
    boolean hasAdr0X31();
    /**
     * <code>required int32 adr_0x31 = 29;</code>
     */
    int getAdr0X31();

    /**
     * <code>required int32 adr_0x32 = 30;</code>
     */
    boolean hasAdr0X32();
    /**
     * <code>required int32 adr_0x32 = 30;</code>
     */
    int getAdr0X32();

    /**
     * <code>required int32 adr_0x33 = 31;</code>
     */
    boolean hasAdr0X33();
    /**
     * <code>required int32 adr_0x33 = 31;</code>
     */
    int getAdr0X33();

    /**
     * <code>required int32 adr_0x34 = 32;</code>
     */
    boolean hasAdr0X34();
    /**
     * <code>required int32 adr_0x34 = 32;</code>
     */
    int getAdr0X34();

    /**
     * <code>required int32 adr_0x35 = 33;</code>
     */
    boolean hasAdr0X35();
    /**
     * <code>required int32 adr_0x35 = 33;</code>
     */
    int getAdr0X35();

    /**
     * <code>required int32 adr_0x36 = 34;</code>
     */
    boolean hasAdr0X36();
    /**
     * <code>required int32 adr_0x36 = 34;</code>
     */
    int getAdr0X36();

    /**
     * <code>required int32 adr_0x50 = 35;</code>
     */
    boolean hasAdr0X50();
    /**
     * <code>required int32 adr_0x50 = 35;</code>
     */
    int getAdr0X50();

    /**
     * <code>required int32 adr_0x51 = 36;</code>
     */
    boolean hasAdr0X51();
    /**
     * <code>required int32 adr_0x51 = 36;</code>
     */
    int getAdr0X51();

    /**
     * <code>required int32 adr_0x52 = 37;</code>
     */
    boolean hasAdr0X52();
    /**
     * <code>required int32 adr_0x52 = 37;</code>
     */
    int getAdr0X52();

    /**
     * <code>required int32 adr_0x53 = 38;</code>
     */
    boolean hasAdr0X53();
    /**
     * <code>required int32 adr_0x53 = 38;</code>
     */
    int getAdr0X53();

    /**
     * <code>required int32 adr_0x54 = 39;</code>
     */
    boolean hasAdr0X54();
    /**
     * <code>required int32 adr_0x54 = 39;</code>
     */
    int getAdr0X54();

    /**
     * <code>required int32 adr_0x55 = 40;</code>
     */
    boolean hasAdr0X55();
    /**
     * <code>required int32 adr_0x55 = 40;</code>
     */
    int getAdr0X55();
  }
  /**
   * Protobuf type {@code RegiMapMag}
   */
  public static final class RegiMapMag extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:RegiMapMag)
          RegiMapMagOrBuilder {
    // Use RegiMapMag.newBuilder() to construct.
    private RegiMapMag(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegiMapMag(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegiMapMag defaultInstance;
    public static RegiMapMag getDefaultInstance() {
      return defaultInstance;
    }

    public RegiMapMag getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegiMapMag(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              adr0X00_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              adr0X01_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              adr0X02_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              adr0X03_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              adr0X04_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              adr0X05_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              adr0X06_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              adr0X07_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              adr0X08_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              adr0X10_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              adr0X11_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              adr0X12_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              adr0X20_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              adr0X21_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              adr0X22_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              adr0X23_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              adr0X24_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              adr0X25_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              adr0X26_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              adr0X27_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              adr0X28_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              adr0X29_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              adr0X2A_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              adr0X2B_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              adr0X2C_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              adr0X2D_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              adr0X2E_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              adr0X30_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              adr0X31_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              adr0X32_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              adr0X33_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              adr0X34_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              adr0X35_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              adr0X36_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              adr0X50_ = input.readInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              adr0X51_ = input.readInt32();
              break;
            }
            case 296: {
              bitField1_ |= 0x00000010;
              adr0X52_ = input.readInt32();
              break;
            }
            case 304: {
              bitField1_ |= 0x00000020;
              adr0X53_ = input.readInt32();
              break;
            }
            case 312: {
              bitField1_ |= 0x00000040;
              adr0X54_ = input.readInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000080;
              adr0X55_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_RegiMapMag_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_RegiMapMag_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.RegiMapMag.class, StnEggPkt.RegiMapMag.Builder.class);
    }

    public static com.google.protobuf.Parser<RegiMapMag> PARSER =
            new com.google.protobuf.AbstractParser<RegiMapMag>() {
              public RegiMapMag parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new RegiMapMag(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<RegiMapMag> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int ADR_0X00_FIELD_NUMBER = 1;
    private int adr0X00_;
    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    public boolean hasAdr0X00() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 adr_0x00 = 1;</code>
     */
    public int getAdr0X00() {
      return adr0X00_;
    }

    public static final int ADR_0X01_FIELD_NUMBER = 2;
    private int adr0X01_;
    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    public boolean hasAdr0X01() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 adr_0x01 = 2;</code>
     */
    public int getAdr0X01() {
      return adr0X01_;
    }

    public static final int ADR_0X02_FIELD_NUMBER = 3;
    private int adr0X02_;
    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    public boolean hasAdr0X02() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 adr_0x02 = 3;</code>
     */
    public int getAdr0X02() {
      return adr0X02_;
    }

    public static final int ADR_0X03_FIELD_NUMBER = 4;
    private int adr0X03_;
    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    public boolean hasAdr0X03() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 adr_0x03 = 4;</code>
     */
    public int getAdr0X03() {
      return adr0X03_;
    }

    public static final int ADR_0X04_FIELD_NUMBER = 5;
    private int adr0X04_;
    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    public boolean hasAdr0X04() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 adr_0x04 = 5;</code>
     */
    public int getAdr0X04() {
      return adr0X04_;
    }

    public static final int ADR_0X05_FIELD_NUMBER = 6;
    private int adr0X05_;
    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    public boolean hasAdr0X05() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 adr_0x05 = 6;</code>
     */
    public int getAdr0X05() {
      return adr0X05_;
    }

    public static final int ADR_0X06_FIELD_NUMBER = 7;
    private int adr0X06_;
    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    public boolean hasAdr0X06() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 adr_0x06 = 7;</code>
     */
    public int getAdr0X06() {
      return adr0X06_;
    }

    public static final int ADR_0X07_FIELD_NUMBER = 8;
    private int adr0X07_;
    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    public boolean hasAdr0X07() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 adr_0x07 = 8;</code>
     */
    public int getAdr0X07() {
      return adr0X07_;
    }

    public static final int ADR_0X08_FIELD_NUMBER = 9;
    private int adr0X08_;
    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    public boolean hasAdr0X08() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 adr_0x08 = 9;</code>
     */
    public int getAdr0X08() {
      return adr0X08_;
    }

    public static final int ADR_0X10_FIELD_NUMBER = 10;
    private int adr0X10_;
    /**
     * <code>required int32 adr_0x10 = 10;</code>
     */
    public boolean hasAdr0X10() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 adr_0x10 = 10;</code>
     */
    public int getAdr0X10() {
      return adr0X10_;
    }

    public static final int ADR_0X11_FIELD_NUMBER = 11;
    private int adr0X11_;
    /**
     * <code>required int32 adr_0x11 = 11;</code>
     */
    public boolean hasAdr0X11() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 adr_0x11 = 11;</code>
     */
    public int getAdr0X11() {
      return adr0X11_;
    }

    public static final int ADR_0X12_FIELD_NUMBER = 12;
    private int adr0X12_;
    /**
     * <code>required int32 adr_0x12 = 12;</code>
     */
    public boolean hasAdr0X12() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 adr_0x12 = 12;</code>
     */
    public int getAdr0X12() {
      return adr0X12_;
    }

    public static final int ADR_0X20_FIELD_NUMBER = 13;
    private int adr0X20_;
    /**
     * <code>required int32 adr_0x20 = 13;</code>
     */
    public boolean hasAdr0X20() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 adr_0x20 = 13;</code>
     */
    public int getAdr0X20() {
      return adr0X20_;
    }

    public static final int ADR_0X21_FIELD_NUMBER = 14;
    private int adr0X21_;
    /**
     * <code>required int32 adr_0x21 = 14;</code>
     */
    public boolean hasAdr0X21() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 adr_0x21 = 14;</code>
     */
    public int getAdr0X21() {
      return adr0X21_;
    }

    public static final int ADR_0X22_FIELD_NUMBER = 15;
    private int adr0X22_;
    /**
     * <code>required int32 adr_0x22 = 15;</code>
     */
    public boolean hasAdr0X22() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 adr_0x22 = 15;</code>
     */
    public int getAdr0X22() {
      return adr0X22_;
    }

    public static final int ADR_0X23_FIELD_NUMBER = 16;
    private int adr0X23_;
    /**
     * <code>required int32 adr_0x23 = 16;</code>
     */
    public boolean hasAdr0X23() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 adr_0x23 = 16;</code>
     */
    public int getAdr0X23() {
      return adr0X23_;
    }

    public static final int ADR_0X24_FIELD_NUMBER = 17;
    private int adr0X24_;
    /**
     * <code>required int32 adr_0x24 = 17;</code>
     */
    public boolean hasAdr0X24() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 adr_0x24 = 17;</code>
     */
    public int getAdr0X24() {
      return adr0X24_;
    }

    public static final int ADR_0X25_FIELD_NUMBER = 18;
    private int adr0X25_;
    /**
     * <code>required int32 adr_0x25 = 18;</code>
     */
    public boolean hasAdr0X25() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 adr_0x25 = 18;</code>
     */
    public int getAdr0X25() {
      return adr0X25_;
    }

    public static final int ADR_0X26_FIELD_NUMBER = 19;
    private int adr0X26_;
    /**
     * <code>required int32 adr_0x26 = 19;</code>
     */
    public boolean hasAdr0X26() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int32 adr_0x26 = 19;</code>
     */
    public int getAdr0X26() {
      return adr0X26_;
    }

    public static final int ADR_0X27_FIELD_NUMBER = 20;
    private int adr0X27_;
    /**
     * <code>required int32 adr_0x27 = 20;</code>
     */
    public boolean hasAdr0X27() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required int32 adr_0x27 = 20;</code>
     */
    public int getAdr0X27() {
      return adr0X27_;
    }

    public static final int ADR_0X28_FIELD_NUMBER = 21;
    private int adr0X28_;
    /**
     * <code>required int32 adr_0x28 = 21;</code>
     */
    public boolean hasAdr0X28() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required int32 adr_0x28 = 21;</code>
     */
    public int getAdr0X28() {
      return adr0X28_;
    }

    public static final int ADR_0X29_FIELD_NUMBER = 22;
    private int adr0X29_;
    /**
     * <code>required int32 adr_0x29 = 22;</code>
     */
    public boolean hasAdr0X29() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>required int32 adr_0x29 = 22;</code>
     */
    public int getAdr0X29() {
      return adr0X29_;
    }

    public static final int ADR_0X2A_FIELD_NUMBER = 23;
    private int adr0X2A_;
    /**
     * <code>required int32 adr_0x2A = 23;</code>
     */
    public boolean hasAdr0X2A() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required int32 adr_0x2A = 23;</code>
     */
    public int getAdr0X2A() {
      return adr0X2A_;
    }

    public static final int ADR_0X2B_FIELD_NUMBER = 24;
    private int adr0X2B_;
    /**
     * <code>required int32 adr_0x2B = 24;</code>
     */
    public boolean hasAdr0X2B() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>required int32 adr_0x2B = 24;</code>
     */
    public int getAdr0X2B() {
      return adr0X2B_;
    }

    public static final int ADR_0X2C_FIELD_NUMBER = 25;
    private int adr0X2C_;
    /**
     * <code>required int32 adr_0x2C = 25;</code>
     */
    public boolean hasAdr0X2C() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required int32 adr_0x2C = 25;</code>
     */
    public int getAdr0X2C() {
      return adr0X2C_;
    }

    public static final int ADR_0X2D_FIELD_NUMBER = 26;
    private int adr0X2D_;
    /**
     * <code>required int32 adr_0x2D = 26;</code>
     */
    public boolean hasAdr0X2D() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>required int32 adr_0x2D = 26;</code>
     */
    public int getAdr0X2D() {
      return adr0X2D_;
    }

    public static final int ADR_0X2E_FIELD_NUMBER = 27;
    private int adr0X2E_;
    /**
     * <code>required int32 adr_0x2E = 27;</code>
     */
    public boolean hasAdr0X2E() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>required int32 adr_0x2E = 27;</code>
     */
    public int getAdr0X2E() {
      return adr0X2E_;
    }

    public static final int ADR_0X30_FIELD_NUMBER = 28;
    private int adr0X30_;
    /**
     * <code>required int32 adr_0x30 = 28;</code>
     */
    public boolean hasAdr0X30() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>required int32 adr_0x30 = 28;</code>
     */
    public int getAdr0X30() {
      return adr0X30_;
    }

    public static final int ADR_0X31_FIELD_NUMBER = 29;
    private int adr0X31_;
    /**
     * <code>required int32 adr_0x31 = 29;</code>
     */
    public boolean hasAdr0X31() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>required int32 adr_0x31 = 29;</code>
     */
    public int getAdr0X31() {
      return adr0X31_;
    }

    public static final int ADR_0X32_FIELD_NUMBER = 30;
    private int adr0X32_;
    /**
     * <code>required int32 adr_0x32 = 30;</code>
     */
    public boolean hasAdr0X32() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>required int32 adr_0x32 = 30;</code>
     */
    public int getAdr0X32() {
      return adr0X32_;
    }

    public static final int ADR_0X33_FIELD_NUMBER = 31;
    private int adr0X33_;
    /**
     * <code>required int32 adr_0x33 = 31;</code>
     */
    public boolean hasAdr0X33() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>required int32 adr_0x33 = 31;</code>
     */
    public int getAdr0X33() {
      return adr0X33_;
    }

    public static final int ADR_0X34_FIELD_NUMBER = 32;
    private int adr0X34_;
    /**
     * <code>required int32 adr_0x34 = 32;</code>
     */
    public boolean hasAdr0X34() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>required int32 adr_0x34 = 32;</code>
     */
    public int getAdr0X34() {
      return adr0X34_;
    }

    public static final int ADR_0X35_FIELD_NUMBER = 33;
    private int adr0X35_;
    /**
     * <code>required int32 adr_0x35 = 33;</code>
     */
    public boolean hasAdr0X35() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 adr_0x35 = 33;</code>
     */
    public int getAdr0X35() {
      return adr0X35_;
    }

    public static final int ADR_0X36_FIELD_NUMBER = 34;
    private int adr0X36_;
    /**
     * <code>required int32 adr_0x36 = 34;</code>
     */
    public boolean hasAdr0X36() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 adr_0x36 = 34;</code>
     */
    public int getAdr0X36() {
      return adr0X36_;
    }

    public static final int ADR_0X50_FIELD_NUMBER = 35;
    private int adr0X50_;
    /**
     * <code>required int32 adr_0x50 = 35;</code>
     */
    public boolean hasAdr0X50() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 adr_0x50 = 35;</code>
     */
    public int getAdr0X50() {
      return adr0X50_;
    }

    public static final int ADR_0X51_FIELD_NUMBER = 36;
    private int adr0X51_;
    /**
     * <code>required int32 adr_0x51 = 36;</code>
     */
    public boolean hasAdr0X51() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 adr_0x51 = 36;</code>
     */
    public int getAdr0X51() {
      return adr0X51_;
    }

    public static final int ADR_0X52_FIELD_NUMBER = 37;
    private int adr0X52_;
    /**
     * <code>required int32 adr_0x52 = 37;</code>
     */
    public boolean hasAdr0X52() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 adr_0x52 = 37;</code>
     */
    public int getAdr0X52() {
      return adr0X52_;
    }

    public static final int ADR_0X53_FIELD_NUMBER = 38;
    private int adr0X53_;
    /**
     * <code>required int32 adr_0x53 = 38;</code>
     */
    public boolean hasAdr0X53() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 adr_0x53 = 38;</code>
     */
    public int getAdr0X53() {
      return adr0X53_;
    }

    public static final int ADR_0X54_FIELD_NUMBER = 39;
    private int adr0X54_;
    /**
     * <code>required int32 adr_0x54 = 39;</code>
     */
    public boolean hasAdr0X54() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 adr_0x54 = 39;</code>
     */
    public int getAdr0X54() {
      return adr0X54_;
    }

    public static final int ADR_0X55_FIELD_NUMBER = 40;
    private int adr0X55_;
    /**
     * <code>required int32 adr_0x55 = 40;</code>
     */
    public boolean hasAdr0X55() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 adr_0x55 = 40;</code>
     */
    public int getAdr0X55() {
      return adr0X55_;
    }

    private void initFields() {
      adr0X00_ = 0;
      adr0X01_ = 0;
      adr0X02_ = 0;
      adr0X03_ = 0;
      adr0X04_ = 0;
      adr0X05_ = 0;
      adr0X06_ = 0;
      adr0X07_ = 0;
      adr0X08_ = 0;
      adr0X10_ = 0;
      adr0X11_ = 0;
      adr0X12_ = 0;
      adr0X20_ = 0;
      adr0X21_ = 0;
      adr0X22_ = 0;
      adr0X23_ = 0;
      adr0X24_ = 0;
      adr0X25_ = 0;
      adr0X26_ = 0;
      adr0X27_ = 0;
      adr0X28_ = 0;
      adr0X29_ = 0;
      adr0X2A_ = 0;
      adr0X2B_ = 0;
      adr0X2C_ = 0;
      adr0X2D_ = 0;
      adr0X2E_ = 0;
      adr0X30_ = 0;
      adr0X31_ = 0;
      adr0X32_ = 0;
      adr0X33_ = 0;
      adr0X34_ = 0;
      adr0X35_ = 0;
      adr0X36_ = 0;
      adr0X50_ = 0;
      adr0X51_ = 0;
      adr0X52_ = 0;
      adr0X53_ = 0;
      adr0X54_ = 0;
      adr0X55_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAdr0X00()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X01()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X02()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X03()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X04()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X05()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X06()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X07()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X08()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X10()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X11()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X12()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X20()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X21()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X22()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X23()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X24()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X25()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X26()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X27()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X28()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X29()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2A()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2B()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2C()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2D()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X2E()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X30()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X31()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X33()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X34()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X35()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X36()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X50()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X51()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X52()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X53()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X54()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdr0X55()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, adr0X00_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, adr0X01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, adr0X02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, adr0X03_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, adr0X04_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, adr0X05_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, adr0X06_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, adr0X07_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, adr0X08_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, adr0X10_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, adr0X11_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, adr0X12_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, adr0X20_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, adr0X21_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, adr0X22_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, adr0X23_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, adr0X24_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, adr0X25_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, adr0X26_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, adr0X27_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, adr0X28_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, adr0X29_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, adr0X2A_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, adr0X2B_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, adr0X2C_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, adr0X2D_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, adr0X2E_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, adr0X30_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, adr0X31_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, adr0X32_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, adr0X33_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, adr0X34_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, adr0X35_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, adr0X36_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, adr0X50_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(36, adr0X51_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(37, adr0X52_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(38, adr0X53_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(39, adr0X54_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(40, adr0X55_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, adr0X00_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, adr0X01_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, adr0X02_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, adr0X03_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, adr0X04_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, adr0X05_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, adr0X06_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(8, adr0X07_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(9, adr0X08_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(10, adr0X10_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(11, adr0X11_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(12, adr0X12_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(13, adr0X20_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(14, adr0X21_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(15, adr0X22_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(16, adr0X23_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(17, adr0X24_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(18, adr0X25_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(19, adr0X26_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(20, adr0X27_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(21, adr0X28_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(22, adr0X29_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(23, adr0X2A_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(24, adr0X2B_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(25, adr0X2C_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(26, adr0X2D_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(27, adr0X2E_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(28, adr0X30_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(29, adr0X31_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(30, adr0X32_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(31, adr0X33_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(32, adr0X34_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(33, adr0X35_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(34, adr0X36_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(35, adr0X50_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(36, adr0X51_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(37, adr0X52_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(38, adr0X53_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(39, adr0X54_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(40, adr0X55_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.RegiMapMag parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.RegiMapMag parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.RegiMapMag parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.RegiMapMag parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.RegiMapMag parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.RegiMapMag parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.RegiMapMag parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.RegiMapMag parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.RegiMapMag parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.RegiMapMag parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.RegiMapMag prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RegiMapMag}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:RegiMapMag)
            StnEggPkt.RegiMapMagOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_RegiMapMag_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_RegiMapMag_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.RegiMapMag.class, StnEggPkt.RegiMapMag.Builder.class);
      }

      // Construct using StnEggPkt.RegiMapMag.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        adr0X00_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        adr0X01_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        adr0X02_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        adr0X03_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        adr0X04_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        adr0X05_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        adr0X06_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        adr0X07_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        adr0X08_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        adr0X10_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        adr0X11_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        adr0X12_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        adr0X20_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        adr0X21_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        adr0X22_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        adr0X23_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        adr0X24_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        adr0X25_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        adr0X26_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        adr0X27_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        adr0X28_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        adr0X29_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        adr0X2A_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        adr0X2B_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        adr0X2C_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        adr0X2D_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        adr0X2E_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        adr0X30_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        adr0X31_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        adr0X32_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        adr0X33_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        adr0X34_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        adr0X35_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        adr0X36_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        adr0X50_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        adr0X51_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        adr0X52_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        adr0X53_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        adr0X54_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        adr0X55_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_RegiMapMag_descriptor;
      }

      public StnEggPkt.RegiMapMag getDefaultInstanceForType() {
        return StnEggPkt.RegiMapMag.getDefaultInstance();
      }

      public StnEggPkt.RegiMapMag build() {
        StnEggPkt.RegiMapMag result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.RegiMapMag buildPartial() {
        StnEggPkt.RegiMapMag result = new StnEggPkt.RegiMapMag(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.adr0X00_ = adr0X00_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.adr0X01_ = adr0X01_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.adr0X02_ = adr0X02_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.adr0X03_ = adr0X03_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.adr0X04_ = adr0X04_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.adr0X05_ = adr0X05_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.adr0X06_ = adr0X06_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.adr0X07_ = adr0X07_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.adr0X08_ = adr0X08_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.adr0X10_ = adr0X10_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.adr0X11_ = adr0X11_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.adr0X12_ = adr0X12_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.adr0X20_ = adr0X20_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.adr0X21_ = adr0X21_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.adr0X22_ = adr0X22_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.adr0X23_ = adr0X23_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.adr0X24_ = adr0X24_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.adr0X25_ = adr0X25_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.adr0X26_ = adr0X26_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.adr0X27_ = adr0X27_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.adr0X28_ = adr0X28_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.adr0X29_ = adr0X29_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.adr0X2A_ = adr0X2A_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.adr0X2B_ = adr0X2B_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.adr0X2C_ = adr0X2C_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.adr0X2D_ = adr0X2D_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.adr0X2E_ = adr0X2E_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.adr0X30_ = adr0X30_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.adr0X31_ = adr0X31_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.adr0X32_ = adr0X32_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.adr0X33_ = adr0X33_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.adr0X34_ = adr0X34_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.adr0X35_ = adr0X35_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.adr0X36_ = adr0X36_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.adr0X50_ = adr0X50_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.adr0X51_ = adr0X51_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.adr0X52_ = adr0X52_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.adr0X53_ = adr0X53_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.adr0X54_ = adr0X54_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.adr0X55_ = adr0X55_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.RegiMapMag) {
          return mergeFrom((StnEggPkt.RegiMapMag)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.RegiMapMag other) {
        if (other == StnEggPkt.RegiMapMag.getDefaultInstance()) return this;
        if (other.hasAdr0X00()) {
          setAdr0X00(other.getAdr0X00());
        }
        if (other.hasAdr0X01()) {
          setAdr0X01(other.getAdr0X01());
        }
        if (other.hasAdr0X02()) {
          setAdr0X02(other.getAdr0X02());
        }
        if (other.hasAdr0X03()) {
          setAdr0X03(other.getAdr0X03());
        }
        if (other.hasAdr0X04()) {
          setAdr0X04(other.getAdr0X04());
        }
        if (other.hasAdr0X05()) {
          setAdr0X05(other.getAdr0X05());
        }
        if (other.hasAdr0X06()) {
          setAdr0X06(other.getAdr0X06());
        }
        if (other.hasAdr0X07()) {
          setAdr0X07(other.getAdr0X07());
        }
        if (other.hasAdr0X08()) {
          setAdr0X08(other.getAdr0X08());
        }
        if (other.hasAdr0X10()) {
          setAdr0X10(other.getAdr0X10());
        }
        if (other.hasAdr0X11()) {
          setAdr0X11(other.getAdr0X11());
        }
        if (other.hasAdr0X12()) {
          setAdr0X12(other.getAdr0X12());
        }
        if (other.hasAdr0X20()) {
          setAdr0X20(other.getAdr0X20());
        }
        if (other.hasAdr0X21()) {
          setAdr0X21(other.getAdr0X21());
        }
        if (other.hasAdr0X22()) {
          setAdr0X22(other.getAdr0X22());
        }
        if (other.hasAdr0X23()) {
          setAdr0X23(other.getAdr0X23());
        }
        if (other.hasAdr0X24()) {
          setAdr0X24(other.getAdr0X24());
        }
        if (other.hasAdr0X25()) {
          setAdr0X25(other.getAdr0X25());
        }
        if (other.hasAdr0X26()) {
          setAdr0X26(other.getAdr0X26());
        }
        if (other.hasAdr0X27()) {
          setAdr0X27(other.getAdr0X27());
        }
        if (other.hasAdr0X28()) {
          setAdr0X28(other.getAdr0X28());
        }
        if (other.hasAdr0X29()) {
          setAdr0X29(other.getAdr0X29());
        }
        if (other.hasAdr0X2A()) {
          setAdr0X2A(other.getAdr0X2A());
        }
        if (other.hasAdr0X2B()) {
          setAdr0X2B(other.getAdr0X2B());
        }
        if (other.hasAdr0X2C()) {
          setAdr0X2C(other.getAdr0X2C());
        }
        if (other.hasAdr0X2D()) {
          setAdr0X2D(other.getAdr0X2D());
        }
        if (other.hasAdr0X2E()) {
          setAdr0X2E(other.getAdr0X2E());
        }
        if (other.hasAdr0X30()) {
          setAdr0X30(other.getAdr0X30());
        }
        if (other.hasAdr0X31()) {
          setAdr0X31(other.getAdr0X31());
        }
        if (other.hasAdr0X32()) {
          setAdr0X32(other.getAdr0X32());
        }
        if (other.hasAdr0X33()) {
          setAdr0X33(other.getAdr0X33());
        }
        if (other.hasAdr0X34()) {
          setAdr0X34(other.getAdr0X34());
        }
        if (other.hasAdr0X35()) {
          setAdr0X35(other.getAdr0X35());
        }
        if (other.hasAdr0X36()) {
          setAdr0X36(other.getAdr0X36());
        }
        if (other.hasAdr0X50()) {
          setAdr0X50(other.getAdr0X50());
        }
        if (other.hasAdr0X51()) {
          setAdr0X51(other.getAdr0X51());
        }
        if (other.hasAdr0X52()) {
          setAdr0X52(other.getAdr0X52());
        }
        if (other.hasAdr0X53()) {
          setAdr0X53(other.getAdr0X53());
        }
        if (other.hasAdr0X54()) {
          setAdr0X54(other.getAdr0X54());
        }
        if (other.hasAdr0X55()) {
          setAdr0X55(other.getAdr0X55());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAdr0X00()) {

          return false;
        }
        if (!hasAdr0X01()) {

          return false;
        }
        if (!hasAdr0X02()) {

          return false;
        }
        if (!hasAdr0X03()) {

          return false;
        }
        if (!hasAdr0X04()) {

          return false;
        }
        if (!hasAdr0X05()) {

          return false;
        }
        if (!hasAdr0X06()) {

          return false;
        }
        if (!hasAdr0X07()) {

          return false;
        }
        if (!hasAdr0X08()) {

          return false;
        }
        if (!hasAdr0X10()) {

          return false;
        }
        if (!hasAdr0X11()) {

          return false;
        }
        if (!hasAdr0X12()) {

          return false;
        }
        if (!hasAdr0X20()) {

          return false;
        }
        if (!hasAdr0X21()) {

          return false;
        }
        if (!hasAdr0X22()) {

          return false;
        }
        if (!hasAdr0X23()) {

          return false;
        }
        if (!hasAdr0X24()) {

          return false;
        }
        if (!hasAdr0X25()) {

          return false;
        }
        if (!hasAdr0X26()) {

          return false;
        }
        if (!hasAdr0X27()) {

          return false;
        }
        if (!hasAdr0X28()) {

          return false;
        }
        if (!hasAdr0X29()) {

          return false;
        }
        if (!hasAdr0X2A()) {

          return false;
        }
        if (!hasAdr0X2B()) {

          return false;
        }
        if (!hasAdr0X2C()) {

          return false;
        }
        if (!hasAdr0X2D()) {

          return false;
        }
        if (!hasAdr0X2E()) {

          return false;
        }
        if (!hasAdr0X30()) {

          return false;
        }
        if (!hasAdr0X31()) {

          return false;
        }
        if (!hasAdr0X32()) {

          return false;
        }
        if (!hasAdr0X33()) {

          return false;
        }
        if (!hasAdr0X34()) {

          return false;
        }
        if (!hasAdr0X35()) {

          return false;
        }
        if (!hasAdr0X36()) {

          return false;
        }
        if (!hasAdr0X50()) {

          return false;
        }
        if (!hasAdr0X51()) {

          return false;
        }
        if (!hasAdr0X52()) {

          return false;
        }
        if (!hasAdr0X53()) {

          return false;
        }
        if (!hasAdr0X54()) {

          return false;
        }
        if (!hasAdr0X55()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.RegiMapMag parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.RegiMapMag) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int adr0X00_ ;
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public boolean hasAdr0X00() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public int getAdr0X00() {
        return adr0X00_;
      }
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public Builder setAdr0X00(int value) {
        bitField0_ |= 0x00000001;
        adr0X00_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x00 = 1;</code>
       */
      public Builder clearAdr0X00() {
        bitField0_ = (bitField0_ & ~0x00000001);
        adr0X00_ = 0;
        onChanged();
        return this;
      }

      private int adr0X01_ ;
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public boolean hasAdr0X01() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public int getAdr0X01() {
        return adr0X01_;
      }
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public Builder setAdr0X01(int value) {
        bitField0_ |= 0x00000002;
        adr0X01_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x01 = 2;</code>
       */
      public Builder clearAdr0X01() {
        bitField0_ = (bitField0_ & ~0x00000002);
        adr0X01_ = 0;
        onChanged();
        return this;
      }

      private int adr0X02_ ;
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public boolean hasAdr0X02() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public int getAdr0X02() {
        return adr0X02_;
      }
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public Builder setAdr0X02(int value) {
        bitField0_ |= 0x00000004;
        adr0X02_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x02 = 3;</code>
       */
      public Builder clearAdr0X02() {
        bitField0_ = (bitField0_ & ~0x00000004);
        adr0X02_ = 0;
        onChanged();
        return this;
      }

      private int adr0X03_ ;
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public boolean hasAdr0X03() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public int getAdr0X03() {
        return adr0X03_;
      }
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public Builder setAdr0X03(int value) {
        bitField0_ |= 0x00000008;
        adr0X03_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x03 = 4;</code>
       */
      public Builder clearAdr0X03() {
        bitField0_ = (bitField0_ & ~0x00000008);
        adr0X03_ = 0;
        onChanged();
        return this;
      }

      private int adr0X04_ ;
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public boolean hasAdr0X04() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public int getAdr0X04() {
        return adr0X04_;
      }
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public Builder setAdr0X04(int value) {
        bitField0_ |= 0x00000010;
        adr0X04_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x04 = 5;</code>
       */
      public Builder clearAdr0X04() {
        bitField0_ = (bitField0_ & ~0x00000010);
        adr0X04_ = 0;
        onChanged();
        return this;
      }

      private int adr0X05_ ;
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public boolean hasAdr0X05() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public int getAdr0X05() {
        return adr0X05_;
      }
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public Builder setAdr0X05(int value) {
        bitField0_ |= 0x00000020;
        adr0X05_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x05 = 6;</code>
       */
      public Builder clearAdr0X05() {
        bitField0_ = (bitField0_ & ~0x00000020);
        adr0X05_ = 0;
        onChanged();
        return this;
      }

      private int adr0X06_ ;
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public boolean hasAdr0X06() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public int getAdr0X06() {
        return adr0X06_;
      }
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public Builder setAdr0X06(int value) {
        bitField0_ |= 0x00000040;
        adr0X06_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x06 = 7;</code>
       */
      public Builder clearAdr0X06() {
        bitField0_ = (bitField0_ & ~0x00000040);
        adr0X06_ = 0;
        onChanged();
        return this;
      }

      private int adr0X07_ ;
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public boolean hasAdr0X07() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public int getAdr0X07() {
        return adr0X07_;
      }
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public Builder setAdr0X07(int value) {
        bitField0_ |= 0x00000080;
        adr0X07_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x07 = 8;</code>
       */
      public Builder clearAdr0X07() {
        bitField0_ = (bitField0_ & ~0x00000080);
        adr0X07_ = 0;
        onChanged();
        return this;
      }

      private int adr0X08_ ;
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public boolean hasAdr0X08() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public int getAdr0X08() {
        return adr0X08_;
      }
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public Builder setAdr0X08(int value) {
        bitField0_ |= 0x00000100;
        adr0X08_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x08 = 9;</code>
       */
      public Builder clearAdr0X08() {
        bitField0_ = (bitField0_ & ~0x00000100);
        adr0X08_ = 0;
        onChanged();
        return this;
      }

      private int adr0X10_ ;
      /**
       * <code>required int32 adr_0x10 = 10;</code>
       */
      public boolean hasAdr0X10() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 adr_0x10 = 10;</code>
       */
      public int getAdr0X10() {
        return adr0X10_;
      }
      /**
       * <code>required int32 adr_0x10 = 10;</code>
       */
      public Builder setAdr0X10(int value) {
        bitField0_ |= 0x00000200;
        adr0X10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x10 = 10;</code>
       */
      public Builder clearAdr0X10() {
        bitField0_ = (bitField0_ & ~0x00000200);
        adr0X10_ = 0;
        onChanged();
        return this;
      }

      private int adr0X11_ ;
      /**
       * <code>required int32 adr_0x11 = 11;</code>
       */
      public boolean hasAdr0X11() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 adr_0x11 = 11;</code>
       */
      public int getAdr0X11() {
        return adr0X11_;
      }
      /**
       * <code>required int32 adr_0x11 = 11;</code>
       */
      public Builder setAdr0X11(int value) {
        bitField0_ |= 0x00000400;
        adr0X11_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x11 = 11;</code>
       */
      public Builder clearAdr0X11() {
        bitField0_ = (bitField0_ & ~0x00000400);
        adr0X11_ = 0;
        onChanged();
        return this;
      }

      private int adr0X12_ ;
      /**
       * <code>required int32 adr_0x12 = 12;</code>
       */
      public boolean hasAdr0X12() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 adr_0x12 = 12;</code>
       */
      public int getAdr0X12() {
        return adr0X12_;
      }
      /**
       * <code>required int32 adr_0x12 = 12;</code>
       */
      public Builder setAdr0X12(int value) {
        bitField0_ |= 0x00000800;
        adr0X12_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x12 = 12;</code>
       */
      public Builder clearAdr0X12() {
        bitField0_ = (bitField0_ & ~0x00000800);
        adr0X12_ = 0;
        onChanged();
        return this;
      }

      private int adr0X20_ ;
      /**
       * <code>required int32 adr_0x20 = 13;</code>
       */
      public boolean hasAdr0X20() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 adr_0x20 = 13;</code>
       */
      public int getAdr0X20() {
        return adr0X20_;
      }
      /**
       * <code>required int32 adr_0x20 = 13;</code>
       */
      public Builder setAdr0X20(int value) {
        bitField0_ |= 0x00001000;
        adr0X20_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x20 = 13;</code>
       */
      public Builder clearAdr0X20() {
        bitField0_ = (bitField0_ & ~0x00001000);
        adr0X20_ = 0;
        onChanged();
        return this;
      }

      private int adr0X21_ ;
      /**
       * <code>required int32 adr_0x21 = 14;</code>
       */
      public boolean hasAdr0X21() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 adr_0x21 = 14;</code>
       */
      public int getAdr0X21() {
        return adr0X21_;
      }
      /**
       * <code>required int32 adr_0x21 = 14;</code>
       */
      public Builder setAdr0X21(int value) {
        bitField0_ |= 0x00002000;
        adr0X21_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x21 = 14;</code>
       */
      public Builder clearAdr0X21() {
        bitField0_ = (bitField0_ & ~0x00002000);
        adr0X21_ = 0;
        onChanged();
        return this;
      }

      private int adr0X22_ ;
      /**
       * <code>required int32 adr_0x22 = 15;</code>
       */
      public boolean hasAdr0X22() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 adr_0x22 = 15;</code>
       */
      public int getAdr0X22() {
        return adr0X22_;
      }
      /**
       * <code>required int32 adr_0x22 = 15;</code>
       */
      public Builder setAdr0X22(int value) {
        bitField0_ |= 0x00004000;
        adr0X22_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x22 = 15;</code>
       */
      public Builder clearAdr0X22() {
        bitField0_ = (bitField0_ & ~0x00004000);
        adr0X22_ = 0;
        onChanged();
        return this;
      }

      private int adr0X23_ ;
      /**
       * <code>required int32 adr_0x23 = 16;</code>
       */
      public boolean hasAdr0X23() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 adr_0x23 = 16;</code>
       */
      public int getAdr0X23() {
        return adr0X23_;
      }
      /**
       * <code>required int32 adr_0x23 = 16;</code>
       */
      public Builder setAdr0X23(int value) {
        bitField0_ |= 0x00008000;
        adr0X23_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x23 = 16;</code>
       */
      public Builder clearAdr0X23() {
        bitField0_ = (bitField0_ & ~0x00008000);
        adr0X23_ = 0;
        onChanged();
        return this;
      }

      private int adr0X24_ ;
      /**
       * <code>required int32 adr_0x24 = 17;</code>
       */
      public boolean hasAdr0X24() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 adr_0x24 = 17;</code>
       */
      public int getAdr0X24() {
        return adr0X24_;
      }
      /**
       * <code>required int32 adr_0x24 = 17;</code>
       */
      public Builder setAdr0X24(int value) {
        bitField0_ |= 0x00010000;
        adr0X24_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x24 = 17;</code>
       */
      public Builder clearAdr0X24() {
        bitField0_ = (bitField0_ & ~0x00010000);
        adr0X24_ = 0;
        onChanged();
        return this;
      }

      private int adr0X25_ ;
      /**
       * <code>required int32 adr_0x25 = 18;</code>
       */
      public boolean hasAdr0X25() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 adr_0x25 = 18;</code>
       */
      public int getAdr0X25() {
        return adr0X25_;
      }
      /**
       * <code>required int32 adr_0x25 = 18;</code>
       */
      public Builder setAdr0X25(int value) {
        bitField0_ |= 0x00020000;
        adr0X25_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x25 = 18;</code>
       */
      public Builder clearAdr0X25() {
        bitField0_ = (bitField0_ & ~0x00020000);
        adr0X25_ = 0;
        onChanged();
        return this;
      }

      private int adr0X26_ ;
      /**
       * <code>required int32 adr_0x26 = 19;</code>
       */
      public boolean hasAdr0X26() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 adr_0x26 = 19;</code>
       */
      public int getAdr0X26() {
        return adr0X26_;
      }
      /**
       * <code>required int32 adr_0x26 = 19;</code>
       */
      public Builder setAdr0X26(int value) {
        bitField0_ |= 0x00040000;
        adr0X26_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x26 = 19;</code>
       */
      public Builder clearAdr0X26() {
        bitField0_ = (bitField0_ & ~0x00040000);
        adr0X26_ = 0;
        onChanged();
        return this;
      }

      private int adr0X27_ ;
      /**
       * <code>required int32 adr_0x27 = 20;</code>
       */
      public boolean hasAdr0X27() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required int32 adr_0x27 = 20;</code>
       */
      public int getAdr0X27() {
        return adr0X27_;
      }
      /**
       * <code>required int32 adr_0x27 = 20;</code>
       */
      public Builder setAdr0X27(int value) {
        bitField0_ |= 0x00080000;
        adr0X27_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x27 = 20;</code>
       */
      public Builder clearAdr0X27() {
        bitField0_ = (bitField0_ & ~0x00080000);
        adr0X27_ = 0;
        onChanged();
        return this;
      }

      private int adr0X28_ ;
      /**
       * <code>required int32 adr_0x28 = 21;</code>
       */
      public boolean hasAdr0X28() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required int32 adr_0x28 = 21;</code>
       */
      public int getAdr0X28() {
        return adr0X28_;
      }
      /**
       * <code>required int32 adr_0x28 = 21;</code>
       */
      public Builder setAdr0X28(int value) {
        bitField0_ |= 0x00100000;
        adr0X28_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x28 = 21;</code>
       */
      public Builder clearAdr0X28() {
        bitField0_ = (bitField0_ & ~0x00100000);
        adr0X28_ = 0;
        onChanged();
        return this;
      }

      private int adr0X29_ ;
      /**
       * <code>required int32 adr_0x29 = 22;</code>
       */
      public boolean hasAdr0X29() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required int32 adr_0x29 = 22;</code>
       */
      public int getAdr0X29() {
        return adr0X29_;
      }
      /**
       * <code>required int32 adr_0x29 = 22;</code>
       */
      public Builder setAdr0X29(int value) {
        bitField0_ |= 0x00200000;
        adr0X29_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x29 = 22;</code>
       */
      public Builder clearAdr0X29() {
        bitField0_ = (bitField0_ & ~0x00200000);
        adr0X29_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2A_ ;
      /**
       * <code>required int32 adr_0x2A = 23;</code>
       */
      public boolean hasAdr0X2A() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required int32 adr_0x2A = 23;</code>
       */
      public int getAdr0X2A() {
        return adr0X2A_;
      }
      /**
       * <code>required int32 adr_0x2A = 23;</code>
       */
      public Builder setAdr0X2A(int value) {
        bitField0_ |= 0x00400000;
        adr0X2A_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2A = 23;</code>
       */
      public Builder clearAdr0X2A() {
        bitField0_ = (bitField0_ & ~0x00400000);
        adr0X2A_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2B_ ;
      /**
       * <code>required int32 adr_0x2B = 24;</code>
       */
      public boolean hasAdr0X2B() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>required int32 adr_0x2B = 24;</code>
       */
      public int getAdr0X2B() {
        return adr0X2B_;
      }
      /**
       * <code>required int32 adr_0x2B = 24;</code>
       */
      public Builder setAdr0X2B(int value) {
        bitField0_ |= 0x00800000;
        adr0X2B_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2B = 24;</code>
       */
      public Builder clearAdr0X2B() {
        bitField0_ = (bitField0_ & ~0x00800000);
        adr0X2B_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2C_ ;
      /**
       * <code>required int32 adr_0x2C = 25;</code>
       */
      public boolean hasAdr0X2C() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required int32 adr_0x2C = 25;</code>
       */
      public int getAdr0X2C() {
        return adr0X2C_;
      }
      /**
       * <code>required int32 adr_0x2C = 25;</code>
       */
      public Builder setAdr0X2C(int value) {
        bitField0_ |= 0x01000000;
        adr0X2C_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2C = 25;</code>
       */
      public Builder clearAdr0X2C() {
        bitField0_ = (bitField0_ & ~0x01000000);
        adr0X2C_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2D_ ;
      /**
       * <code>required int32 adr_0x2D = 26;</code>
       */
      public boolean hasAdr0X2D() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>required int32 adr_0x2D = 26;</code>
       */
      public int getAdr0X2D() {
        return adr0X2D_;
      }
      /**
       * <code>required int32 adr_0x2D = 26;</code>
       */
      public Builder setAdr0X2D(int value) {
        bitField0_ |= 0x02000000;
        adr0X2D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2D = 26;</code>
       */
      public Builder clearAdr0X2D() {
        bitField0_ = (bitField0_ & ~0x02000000);
        adr0X2D_ = 0;
        onChanged();
        return this;
      }

      private int adr0X2E_ ;
      /**
       * <code>required int32 adr_0x2E = 27;</code>
       */
      public boolean hasAdr0X2E() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>required int32 adr_0x2E = 27;</code>
       */
      public int getAdr0X2E() {
        return adr0X2E_;
      }
      /**
       * <code>required int32 adr_0x2E = 27;</code>
       */
      public Builder setAdr0X2E(int value) {
        bitField0_ |= 0x04000000;
        adr0X2E_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x2E = 27;</code>
       */
      public Builder clearAdr0X2E() {
        bitField0_ = (bitField0_ & ~0x04000000);
        adr0X2E_ = 0;
        onChanged();
        return this;
      }

      private int adr0X30_ ;
      /**
       * <code>required int32 adr_0x30 = 28;</code>
       */
      public boolean hasAdr0X30() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>required int32 adr_0x30 = 28;</code>
       */
      public int getAdr0X30() {
        return adr0X30_;
      }
      /**
       * <code>required int32 adr_0x30 = 28;</code>
       */
      public Builder setAdr0X30(int value) {
        bitField0_ |= 0x08000000;
        adr0X30_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x30 = 28;</code>
       */
      public Builder clearAdr0X30() {
        bitField0_ = (bitField0_ & ~0x08000000);
        adr0X30_ = 0;
        onChanged();
        return this;
      }

      private int adr0X31_ ;
      /**
       * <code>required int32 adr_0x31 = 29;</code>
       */
      public boolean hasAdr0X31() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>required int32 adr_0x31 = 29;</code>
       */
      public int getAdr0X31() {
        return adr0X31_;
      }
      /**
       * <code>required int32 adr_0x31 = 29;</code>
       */
      public Builder setAdr0X31(int value) {
        bitField0_ |= 0x10000000;
        adr0X31_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x31 = 29;</code>
       */
      public Builder clearAdr0X31() {
        bitField0_ = (bitField0_ & ~0x10000000);
        adr0X31_ = 0;
        onChanged();
        return this;
      }

      private int adr0X32_ ;
      /**
       * <code>required int32 adr_0x32 = 30;</code>
       */
      public boolean hasAdr0X32() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>required int32 adr_0x32 = 30;</code>
       */
      public int getAdr0X32() {
        return adr0X32_;
      }
      /**
       * <code>required int32 adr_0x32 = 30;</code>
       */
      public Builder setAdr0X32(int value) {
        bitField0_ |= 0x20000000;
        adr0X32_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x32 = 30;</code>
       */
      public Builder clearAdr0X32() {
        bitField0_ = (bitField0_ & ~0x20000000);
        adr0X32_ = 0;
        onChanged();
        return this;
      }

      private int adr0X33_ ;
      /**
       * <code>required int32 adr_0x33 = 31;</code>
       */
      public boolean hasAdr0X33() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>required int32 adr_0x33 = 31;</code>
       */
      public int getAdr0X33() {
        return adr0X33_;
      }
      /**
       * <code>required int32 adr_0x33 = 31;</code>
       */
      public Builder setAdr0X33(int value) {
        bitField0_ |= 0x40000000;
        adr0X33_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x33 = 31;</code>
       */
      public Builder clearAdr0X33() {
        bitField0_ = (bitField0_ & ~0x40000000);
        adr0X33_ = 0;
        onChanged();
        return this;
      }

      private int adr0X34_ ;
      /**
       * <code>required int32 adr_0x34 = 32;</code>
       */
      public boolean hasAdr0X34() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>required int32 adr_0x34 = 32;</code>
       */
      public int getAdr0X34() {
        return adr0X34_;
      }
      /**
       * <code>required int32 adr_0x34 = 32;</code>
       */
      public Builder setAdr0X34(int value) {
        bitField0_ |= 0x80000000;
        adr0X34_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x34 = 32;</code>
       */
      public Builder clearAdr0X34() {
        bitField0_ = (bitField0_ & ~0x80000000);
        adr0X34_ = 0;
        onChanged();
        return this;
      }

      private int adr0X35_ ;
      /**
       * <code>required int32 adr_0x35 = 33;</code>
       */
      public boolean hasAdr0X35() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 adr_0x35 = 33;</code>
       */
      public int getAdr0X35() {
        return adr0X35_;
      }
      /**
       * <code>required int32 adr_0x35 = 33;</code>
       */
      public Builder setAdr0X35(int value) {
        bitField1_ |= 0x00000001;
        adr0X35_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x35 = 33;</code>
       */
      public Builder clearAdr0X35() {
        bitField1_ = (bitField1_ & ~0x00000001);
        adr0X35_ = 0;
        onChanged();
        return this;
      }

      private int adr0X36_ ;
      /**
       * <code>required int32 adr_0x36 = 34;</code>
       */
      public boolean hasAdr0X36() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 adr_0x36 = 34;</code>
       */
      public int getAdr0X36() {
        return adr0X36_;
      }
      /**
       * <code>required int32 adr_0x36 = 34;</code>
       */
      public Builder setAdr0X36(int value) {
        bitField1_ |= 0x00000002;
        adr0X36_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x36 = 34;</code>
       */
      public Builder clearAdr0X36() {
        bitField1_ = (bitField1_ & ~0x00000002);
        adr0X36_ = 0;
        onChanged();
        return this;
      }

      private int adr0X50_ ;
      /**
       * <code>required int32 adr_0x50 = 35;</code>
       */
      public boolean hasAdr0X50() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 adr_0x50 = 35;</code>
       */
      public int getAdr0X50() {
        return adr0X50_;
      }
      /**
       * <code>required int32 adr_0x50 = 35;</code>
       */
      public Builder setAdr0X50(int value) {
        bitField1_ |= 0x00000004;
        adr0X50_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x50 = 35;</code>
       */
      public Builder clearAdr0X50() {
        bitField1_ = (bitField1_ & ~0x00000004);
        adr0X50_ = 0;
        onChanged();
        return this;
      }

      private int adr0X51_ ;
      /**
       * <code>required int32 adr_0x51 = 36;</code>
       */
      public boolean hasAdr0X51() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 adr_0x51 = 36;</code>
       */
      public int getAdr0X51() {
        return adr0X51_;
      }
      /**
       * <code>required int32 adr_0x51 = 36;</code>
       */
      public Builder setAdr0X51(int value) {
        bitField1_ |= 0x00000008;
        adr0X51_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x51 = 36;</code>
       */
      public Builder clearAdr0X51() {
        bitField1_ = (bitField1_ & ~0x00000008);
        adr0X51_ = 0;
        onChanged();
        return this;
      }

      private int adr0X52_ ;
      /**
       * <code>required int32 adr_0x52 = 37;</code>
       */
      public boolean hasAdr0X52() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 adr_0x52 = 37;</code>
       */
      public int getAdr0X52() {
        return adr0X52_;
      }
      /**
       * <code>required int32 adr_0x52 = 37;</code>
       */
      public Builder setAdr0X52(int value) {
        bitField1_ |= 0x00000010;
        adr0X52_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x52 = 37;</code>
       */
      public Builder clearAdr0X52() {
        bitField1_ = (bitField1_ & ~0x00000010);
        adr0X52_ = 0;
        onChanged();
        return this;
      }

      private int adr0X53_ ;
      /**
       * <code>required int32 adr_0x53 = 38;</code>
       */
      public boolean hasAdr0X53() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 adr_0x53 = 38;</code>
       */
      public int getAdr0X53() {
        return adr0X53_;
      }
      /**
       * <code>required int32 adr_0x53 = 38;</code>
       */
      public Builder setAdr0X53(int value) {
        bitField1_ |= 0x00000020;
        adr0X53_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x53 = 38;</code>
       */
      public Builder clearAdr0X53() {
        bitField1_ = (bitField1_ & ~0x00000020);
        adr0X53_ = 0;
        onChanged();
        return this;
      }

      private int adr0X54_ ;
      /**
       * <code>required int32 adr_0x54 = 39;</code>
       */
      public boolean hasAdr0X54() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 adr_0x54 = 39;</code>
       */
      public int getAdr0X54() {
        return adr0X54_;
      }
      /**
       * <code>required int32 adr_0x54 = 39;</code>
       */
      public Builder setAdr0X54(int value) {
        bitField1_ |= 0x00000040;
        adr0X54_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x54 = 39;</code>
       */
      public Builder clearAdr0X54() {
        bitField1_ = (bitField1_ & ~0x00000040);
        adr0X54_ = 0;
        onChanged();
        return this;
      }

      private int adr0X55_ ;
      /**
       * <code>required int32 adr_0x55 = 40;</code>
       */
      public boolean hasAdr0X55() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 adr_0x55 = 40;</code>
       */
      public int getAdr0X55() {
        return adr0X55_;
      }
      /**
       * <code>required int32 adr_0x55 = 40;</code>
       */
      public Builder setAdr0X55(int value) {
        bitField1_ |= 0x00000080;
        adr0X55_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 adr_0x55 = 40;</code>
       */
      public Builder clearAdr0X55() {
        bitField1_ = (bitField1_ & ~0x00000080);
        adr0X55_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RegiMapMag)
    }

    static {
      defaultInstance = new RegiMapMag(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RegiMapMag)
  }

  public interface GaitOrBuilder extends
          // @@protoc_insertion_point(interface_extends:Gait)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float positionX = 1;</code>
     */
    boolean hasPositionX();
    /**
     * <code>optional float positionX = 1;</code>
     */
    float getPositionX();

    /**
     * <code>optional float positionY = 2;</code>
     */
    boolean hasPositionY();
    /**
     * <code>optional float positionY = 2;</code>
     */
    float getPositionY();

    /**
     * <code>optional float positionZ = 3;</code>
     */
    boolean hasPositionZ();
    /**
     * <code>optional float positionZ = 3;</code>
     */
    float getPositionZ();

    /**
     * <code>optional uint32 zupt = 4;</code>
     */
    boolean hasZupt();
    /**
     * <code>optional uint32 zupt = 4;</code>
     */
    int getZupt();

    /**
     * <code>optional uint32 zuptStepCounter = 5;</code>
     */
    boolean hasZuptStepCounter();
    /**
     * <code>optional uint32 zuptStepCounter = 5;</code>
     */
    int getZuptStepCounter();

    /**
     * <code>optional uint32 zuptMotion = 6;</code>
     */
    boolean hasZuptMotion();
    /**
     * <code>optional uint32 zuptMotion = 6;</code>
     */
    int getZuptMotion();

    /**
     * <code>optional float totalDistance = 7;</code>
     */
    boolean hasTotalDistance();
    /**
     * <code>optional float totalDistance = 7;</code>
     */
    float getTotalDistance();

    /**
     * <code>optional float errorPercentage = 8;</code>
     */
    boolean hasErrorPercentage();
    /**
     * <code>optional float errorPercentage = 8;</code>
     */
    float getErrorPercentage();

    /**
     * <code>optional float errorPositionX = 9;</code>
     */
    boolean hasErrorPositionX();
    /**
     * <code>optional float errorPositionX = 9;</code>
     */
    float getErrorPositionX();

    /**
     * <code>optional float errorPositionY = 10;</code>
     */
    boolean hasErrorPositionY();
    /**
     * <code>optional float errorPositionY = 10;</code>
     */
    float getErrorPositionY();

    /**
     * <code>optional float errorPositionZ = 11;</code>
     */
    boolean hasErrorPositionZ();
    /**
     * <code>optional float errorPositionZ = 11;</code>
     */
    float getErrorPositionZ();
  }
  /**
   * Protobuf type {@code Gait}
   */
  public static final class Gait extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:Gait)
          GaitOrBuilder {
    // Use Gait.newBuilder() to construct.
    private Gait(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Gait(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Gait defaultInstance;
    public static Gait getDefaultInstance() {
      return defaultInstance;
    }

    public Gait getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Gait(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              positionX_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              positionY_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              positionZ_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              zupt_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              zuptStepCounter_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              zuptMotion_ = input.readUInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              totalDistance_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              errorPercentage_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              errorPositionX_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              errorPositionY_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              errorPositionZ_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_Gait_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_Gait_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.Gait.class, StnEggPkt.Gait.Builder.class);
    }

    public static com.google.protobuf.Parser<Gait> PARSER =
            new com.google.protobuf.AbstractParser<Gait>() {
              public Gait parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new Gait(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<Gait> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int POSITIONX_FIELD_NUMBER = 1;
    private float positionX_;
    /**
     * <code>optional float positionX = 1;</code>
     */
    public boolean hasPositionX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float positionX = 1;</code>
     */
    public float getPositionX() {
      return positionX_;
    }

    public static final int POSITIONY_FIELD_NUMBER = 2;
    private float positionY_;
    /**
     * <code>optional float positionY = 2;</code>
     */
    public boolean hasPositionY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float positionY = 2;</code>
     */
    public float getPositionY() {
      return positionY_;
    }

    public static final int POSITIONZ_FIELD_NUMBER = 3;
    private float positionZ_;
    /**
     * <code>optional float positionZ = 3;</code>
     */
    public boolean hasPositionZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float positionZ = 3;</code>
     */
    public float getPositionZ() {
      return positionZ_;
    }

    public static final int ZUPT_FIELD_NUMBER = 4;
    private int zupt_;
    /**
     * <code>optional uint32 zupt = 4;</code>
     */
    public boolean hasZupt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 zupt = 4;</code>
     */
    public int getZupt() {
      return zupt_;
    }

    public static final int ZUPTSTEPCOUNTER_FIELD_NUMBER = 5;
    private int zuptStepCounter_;
    /**
     * <code>optional uint32 zuptStepCounter = 5;</code>
     */
    public boolean hasZuptStepCounter() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 zuptStepCounter = 5;</code>
     */
    public int getZuptStepCounter() {
      return zuptStepCounter_;
    }

    public static final int ZUPTMOTION_FIELD_NUMBER = 6;
    private int zuptMotion_;
    /**
     * <code>optional uint32 zuptMotion = 6;</code>
     */
    public boolean hasZuptMotion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 zuptMotion = 6;</code>
     */
    public int getZuptMotion() {
      return zuptMotion_;
    }

    public static final int TOTALDISTANCE_FIELD_NUMBER = 7;
    private float totalDistance_;
    /**
     * <code>optional float totalDistance = 7;</code>
     */
    public boolean hasTotalDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float totalDistance = 7;</code>
     */
    public float getTotalDistance() {
      return totalDistance_;
    }

    public static final int ERRORPERCENTAGE_FIELD_NUMBER = 8;
    private float errorPercentage_;
    /**
     * <code>optional float errorPercentage = 8;</code>
     */
    public boolean hasErrorPercentage() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float errorPercentage = 8;</code>
     */
    public float getErrorPercentage() {
      return errorPercentage_;
    }

    public static final int ERRORPOSITIONX_FIELD_NUMBER = 9;
    private float errorPositionX_;
    /**
     * <code>optional float errorPositionX = 9;</code>
     */
    public boolean hasErrorPositionX() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float errorPositionX = 9;</code>
     */
    public float getErrorPositionX() {
      return errorPositionX_;
    }

    public static final int ERRORPOSITIONY_FIELD_NUMBER = 10;
    private float errorPositionY_;
    /**
     * <code>optional float errorPositionY = 10;</code>
     */
    public boolean hasErrorPositionY() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float errorPositionY = 10;</code>
     */
    public float getErrorPositionY() {
      return errorPositionY_;
    }

    public static final int ERRORPOSITIONZ_FIELD_NUMBER = 11;
    private float errorPositionZ_;
    /**
     * <code>optional float errorPositionZ = 11;</code>
     */
    public boolean hasErrorPositionZ() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float errorPositionZ = 11;</code>
     */
    public float getErrorPositionZ() {
      return errorPositionZ_;
    }

    private void initFields() {
      positionX_ = 0F;
      positionY_ = 0F;
      positionZ_ = 0F;
      zupt_ = 0;
      zuptStepCounter_ = 0;
      zuptMotion_ = 0;
      totalDistance_ = 0F;
      errorPercentage_ = 0F;
      errorPositionX_ = 0F;
      errorPositionY_ = 0F;
      errorPositionZ_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, positionX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, positionY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, positionZ_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, zupt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, zuptStepCounter_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, zuptMotion_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, errorPercentage_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, errorPositionX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, errorPositionY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, errorPositionZ_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(1, positionX_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(2, positionY_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(3, positionZ_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(4, zupt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(5, zuptStepCounter_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeUInt32Size(6, zuptMotion_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(7, totalDistance_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(8, errorPercentage_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(9, errorPositionX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(10, errorPositionY_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(11, errorPositionZ_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.Gait parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Gait parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Gait parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Gait parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Gait parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Gait parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Gait parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.Gait parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Gait parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Gait parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.Gait prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Gait}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Gait)
            StnEggPkt.GaitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_Gait_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_Gait_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.Gait.class, StnEggPkt.Gait.Builder.class);
      }

      // Construct using StnEggPkt.Gait.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        positionX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        positionY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        positionZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        zupt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        zuptStepCounter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        zuptMotion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        totalDistance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        errorPercentage_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        errorPositionX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        errorPositionY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        errorPositionZ_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_Gait_descriptor;
      }

      public StnEggPkt.Gait getDefaultInstanceForType() {
        return StnEggPkt.Gait.getDefaultInstance();
      }

      public StnEggPkt.Gait build() {
        StnEggPkt.Gait result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.Gait buildPartial() {
        StnEggPkt.Gait result = new StnEggPkt.Gait(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.positionX_ = positionX_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.positionY_ = positionY_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.positionZ_ = positionZ_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.zupt_ = zupt_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.zuptStepCounter_ = zuptStepCounter_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.zuptMotion_ = zuptMotion_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalDistance_ = totalDistance_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.errorPercentage_ = errorPercentage_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.errorPositionX_ = errorPositionX_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.errorPositionY_ = errorPositionY_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.errorPositionZ_ = errorPositionZ_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.Gait) {
          return mergeFrom((StnEggPkt.Gait)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.Gait other) {
        if (other == StnEggPkt.Gait.getDefaultInstance()) return this;
        if (other.hasPositionX()) {
          setPositionX(other.getPositionX());
        }
        if (other.hasPositionY()) {
          setPositionY(other.getPositionY());
        }
        if (other.hasPositionZ()) {
          setPositionZ(other.getPositionZ());
        }
        if (other.hasZupt()) {
          setZupt(other.getZupt());
        }
        if (other.hasZuptStepCounter()) {
          setZuptStepCounter(other.getZuptStepCounter());
        }
        if (other.hasZuptMotion()) {
          setZuptMotion(other.getZuptMotion());
        }
        if (other.hasTotalDistance()) {
          setTotalDistance(other.getTotalDistance());
        }
        if (other.hasErrorPercentage()) {
          setErrorPercentage(other.getErrorPercentage());
        }
        if (other.hasErrorPositionX()) {
          setErrorPositionX(other.getErrorPositionX());
        }
        if (other.hasErrorPositionY()) {
          setErrorPositionY(other.getErrorPositionY());
        }
        if (other.hasErrorPositionZ()) {
          setErrorPositionZ(other.getErrorPositionZ());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.Gait parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.Gait) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float positionX_ ;
      /**
       * <code>optional float positionX = 1;</code>
       */
      public boolean hasPositionX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float positionX = 1;</code>
       */
      public float getPositionX() {
        return positionX_;
      }
      /**
       * <code>optional float positionX = 1;</code>
       */
      public Builder setPositionX(float value) {
        bitField0_ |= 0x00000001;
        positionX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float positionX = 1;</code>
       */
      public Builder clearPositionX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        positionX_ = 0F;
        onChanged();
        return this;
      }

      private float positionY_ ;
      /**
       * <code>optional float positionY = 2;</code>
       */
      public boolean hasPositionY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float positionY = 2;</code>
       */
      public float getPositionY() {
        return positionY_;
      }
      /**
       * <code>optional float positionY = 2;</code>
       */
      public Builder setPositionY(float value) {
        bitField0_ |= 0x00000002;
        positionY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float positionY = 2;</code>
       */
      public Builder clearPositionY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        positionY_ = 0F;
        onChanged();
        return this;
      }

      private float positionZ_ ;
      /**
       * <code>optional float positionZ = 3;</code>
       */
      public boolean hasPositionZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float positionZ = 3;</code>
       */
      public float getPositionZ() {
        return positionZ_;
      }
      /**
       * <code>optional float positionZ = 3;</code>
       */
      public Builder setPositionZ(float value) {
        bitField0_ |= 0x00000004;
        positionZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float positionZ = 3;</code>
       */
      public Builder clearPositionZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        positionZ_ = 0F;
        onChanged();
        return this;
      }

      private int zupt_ ;
      /**
       * <code>optional uint32 zupt = 4;</code>
       */
      public boolean hasZupt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 zupt = 4;</code>
       */
      public int getZupt() {
        return zupt_;
      }
      /**
       * <code>optional uint32 zupt = 4;</code>
       */
      public Builder setZupt(int value) {
        bitField0_ |= 0x00000008;
        zupt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 zupt = 4;</code>
       */
      public Builder clearZupt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        zupt_ = 0;
        onChanged();
        return this;
      }

      private int zuptStepCounter_ ;
      /**
       * <code>optional uint32 zuptStepCounter = 5;</code>
       */
      public boolean hasZuptStepCounter() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 zuptStepCounter = 5;</code>
       */
      public int getZuptStepCounter() {
        return zuptStepCounter_;
      }
      /**
       * <code>optional uint32 zuptStepCounter = 5;</code>
       */
      public Builder setZuptStepCounter(int value) {
        bitField0_ |= 0x00000010;
        zuptStepCounter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 zuptStepCounter = 5;</code>
       */
      public Builder clearZuptStepCounter() {
        bitField0_ = (bitField0_ & ~0x00000010);
        zuptStepCounter_ = 0;
        onChanged();
        return this;
      }

      private int zuptMotion_ ;
      /**
       * <code>optional uint32 zuptMotion = 6;</code>
       */
      public boolean hasZuptMotion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 zuptMotion = 6;</code>
       */
      public int getZuptMotion() {
        return zuptMotion_;
      }
      /**
       * <code>optional uint32 zuptMotion = 6;</code>
       */
      public Builder setZuptMotion(int value) {
        bitField0_ |= 0x00000020;
        zuptMotion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 zuptMotion = 6;</code>
       */
      public Builder clearZuptMotion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zuptMotion_ = 0;
        onChanged();
        return this;
      }

      private float totalDistance_ ;
      /**
       * <code>optional float totalDistance = 7;</code>
       */
      public boolean hasTotalDistance() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float totalDistance = 7;</code>
       */
      public float getTotalDistance() {
        return totalDistance_;
      }
      /**
       * <code>optional float totalDistance = 7;</code>
       */
      public Builder setTotalDistance(float value) {
        bitField0_ |= 0x00000040;
        totalDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float totalDistance = 7;</code>
       */
      public Builder clearTotalDistance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalDistance_ = 0F;
        onChanged();
        return this;
      }

      private float errorPercentage_ ;
      /**
       * <code>optional float errorPercentage = 8;</code>
       */
      public boolean hasErrorPercentage() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float errorPercentage = 8;</code>
       */
      public float getErrorPercentage() {
        return errorPercentage_;
      }
      /**
       * <code>optional float errorPercentage = 8;</code>
       */
      public Builder setErrorPercentage(float value) {
        bitField0_ |= 0x00000080;
        errorPercentage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float errorPercentage = 8;</code>
       */
      public Builder clearErrorPercentage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        errorPercentage_ = 0F;
        onChanged();
        return this;
      }

      private float errorPositionX_ ;
      /**
       * <code>optional float errorPositionX = 9;</code>
       */
      public boolean hasErrorPositionX() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float errorPositionX = 9;</code>
       */
      public float getErrorPositionX() {
        return errorPositionX_;
      }
      /**
       * <code>optional float errorPositionX = 9;</code>
       */
      public Builder setErrorPositionX(float value) {
        bitField0_ |= 0x00000100;
        errorPositionX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float errorPositionX = 9;</code>
       */
      public Builder clearErrorPositionX() {
        bitField0_ = (bitField0_ & ~0x00000100);
        errorPositionX_ = 0F;
        onChanged();
        return this;
      }

      private float errorPositionY_ ;
      /**
       * <code>optional float errorPositionY = 10;</code>
       */
      public boolean hasErrorPositionY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float errorPositionY = 10;</code>
       */
      public float getErrorPositionY() {
        return errorPositionY_;
      }
      /**
       * <code>optional float errorPositionY = 10;</code>
       */
      public Builder setErrorPositionY(float value) {
        bitField0_ |= 0x00000200;
        errorPositionY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float errorPositionY = 10;</code>
       */
      public Builder clearErrorPositionY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        errorPositionY_ = 0F;
        onChanged();
        return this;
      }

      private float errorPositionZ_ ;
      /**
       * <code>optional float errorPositionZ = 11;</code>
       */
      public boolean hasErrorPositionZ() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float errorPositionZ = 11;</code>
       */
      public float getErrorPositionZ() {
        return errorPositionZ_;
      }
      /**
       * <code>optional float errorPositionZ = 11;</code>
       */
      public Builder setErrorPositionZ(float value) {
        bitField0_ |= 0x00000400;
        errorPositionZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float errorPositionZ = 11;</code>
       */
      public Builder clearErrorPositionZ() {
        bitField0_ = (bitField0_ & ~0x00000400);
        errorPositionZ_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Gait)
    }

    static {
      defaultInstance = new Gait(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Gait)
  }

  public interface DateOrBuilder extends
          // @@protoc_insertion_point(interface_extends:Date)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 year = 1;</code>
     */
    boolean hasYear();
    /**
     * <code>required int32 year = 1;</code>
     */
    int getYear();

    /**
     * <code>required int32 month = 2;</code>
     */
    boolean hasMonth();
    /**
     * <code>required int32 month = 2;</code>
     */
    int getMonth();

    /**
     * <code>required int32 day = 3;</code>
     */
    boolean hasDay();
    /**
     * <code>required int32 day = 3;</code>
     */
    int getDay();

    /**
     * <code>required int32 hour = 4;</code>
     */
    boolean hasHour();
    /**
     * <code>required int32 hour = 4;</code>
     */
    int getHour();

    /**
     * <code>required int32 minutes = 5;</code>
     */
    boolean hasMinutes();
    /**
     * <code>required int32 minutes = 5;</code>
     */
    int getMinutes();

    /**
     * <code>required int32 seconds = 6;</code>
     */
    boolean hasSeconds();
    /**
     * <code>required int32 seconds = 6;</code>
     */
    int getSeconds();

    /**
     * <code>optional int32 weekDay = 7;</code>
     */
    boolean hasWeekDay();
    /**
     * <code>optional int32 weekDay = 7;</code>
     */
    int getWeekDay();
  }
  /**
   * Protobuf type {@code Date}
   */
  public static final class Date extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:Date)
          DateOrBuilder {
    // Use Date.newBuilder() to construct.
    private Date(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Date(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Date defaultInstance;
    public static Date getDefaultInstance() {
      return defaultInstance;
    }

    public Date getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Date(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              year_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              month_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              day_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hour_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              minutes_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              seconds_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              weekDay_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_Date_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_Date_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.Date.class, StnEggPkt.Date.Builder.class);
    }

    public static com.google.protobuf.Parser<Date> PARSER =
            new com.google.protobuf.AbstractParser<Date>() {
              public Date parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new Date(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<Date> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int YEAR_FIELD_NUMBER = 1;
    private int year_;
    /**
     * <code>required int32 year = 1;</code>
     */
    public boolean hasYear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 year = 1;</code>
     */
    public int getYear() {
      return year_;
    }

    public static final int MONTH_FIELD_NUMBER = 2;
    private int month_;
    /**
     * <code>required int32 month = 2;</code>
     */
    public boolean hasMonth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 month = 2;</code>
     */
    public int getMonth() {
      return month_;
    }

    public static final int DAY_FIELD_NUMBER = 3;
    private int day_;
    /**
     * <code>required int32 day = 3;</code>
     */
    public boolean hasDay() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 day = 3;</code>
     */
    public int getDay() {
      return day_;
    }

    public static final int HOUR_FIELD_NUMBER = 4;
    private int hour_;
    /**
     * <code>required int32 hour = 4;</code>
     */
    public boolean hasHour() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 hour = 4;</code>
     */
    public int getHour() {
      return hour_;
    }

    public static final int MINUTES_FIELD_NUMBER = 5;
    private int minutes_;
    /**
     * <code>required int32 minutes = 5;</code>
     */
    public boolean hasMinutes() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 minutes = 5;</code>
     */
    public int getMinutes() {
      return minutes_;
    }

    public static final int SECONDS_FIELD_NUMBER = 6;
    private int seconds_;
    /**
     * <code>required int32 seconds = 6;</code>
     */
    public boolean hasSeconds() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 seconds = 6;</code>
     */
    public int getSeconds() {
      return seconds_;
    }

    public static final int WEEKDAY_FIELD_NUMBER = 7;
    private int weekDay_;
    /**
     * <code>optional int32 weekDay = 7;</code>
     */
    public boolean hasWeekDay() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 weekDay = 7;</code>
     */
    public int getWeekDay() {
      return weekDay_;
    }

    private void initFields() {
      year_ = 0;
      month_ = 0;
      day_ = 0;
      hour_ = 0;
      minutes_ = 0;
      seconds_ = 0;
      weekDay_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasYear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMonth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHour()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinutes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeconds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, year_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, month_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, day_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, hour_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, minutes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, seconds_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, weekDay_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, year_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, month_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, day_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, hour_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, minutes_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, seconds_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, weekDay_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.Date parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Date parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Date parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Date parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Date parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Date parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Date parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.Date parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Date parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Date parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.Date prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Date}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Date)
            StnEggPkt.DateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_Date_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_Date_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.Date.class, StnEggPkt.Date.Builder.class);
      }

      // Construct using StnEggPkt.Date.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        month_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        day_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hour_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        minutes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        seconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        weekDay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_Date_descriptor;
      }

      public StnEggPkt.Date getDefaultInstanceForType() {
        return StnEggPkt.Date.getDefaultInstance();
      }

      public StnEggPkt.Date build() {
        StnEggPkt.Date result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.Date buildPartial() {
        StnEggPkt.Date result = new StnEggPkt.Date(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.year_ = year_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.month_ = month_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.day_ = day_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hour_ = hour_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.minutes_ = minutes_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seconds_ = seconds_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.weekDay_ = weekDay_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.Date) {
          return mergeFrom((StnEggPkt.Date)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.Date other) {
        if (other == StnEggPkt.Date.getDefaultInstance()) return this;
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasMonth()) {
          setMonth(other.getMonth());
        }
        if (other.hasDay()) {
          setDay(other.getDay());
        }
        if (other.hasHour()) {
          setHour(other.getHour());
        }
        if (other.hasMinutes()) {
          setMinutes(other.getMinutes());
        }
        if (other.hasSeconds()) {
          setSeconds(other.getSeconds());
        }
        if (other.hasWeekDay()) {
          setWeekDay(other.getWeekDay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasYear()) {

          return false;
        }
        if (!hasMonth()) {

          return false;
        }
        if (!hasDay()) {

          return false;
        }
        if (!hasHour()) {

          return false;
        }
        if (!hasMinutes()) {

          return false;
        }
        if (!hasSeconds()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.Date parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.Date) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int year_ ;
      /**
       * <code>required int32 year = 1;</code>
       */
      public boolean hasYear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 year = 1;</code>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <code>required int32 year = 1;</code>
       */
      public Builder setYear(int value) {
        bitField0_ |= 0x00000001;
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 year = 1;</code>
       */
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        year_ = 0;
        onChanged();
        return this;
      }

      private int month_ ;
      /**
       * <code>required int32 month = 2;</code>
       */
      public boolean hasMonth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 month = 2;</code>
       */
      public int getMonth() {
        return month_;
      }
      /**
       * <code>required int32 month = 2;</code>
       */
      public Builder setMonth(int value) {
        bitField0_ |= 0x00000002;
        month_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 month = 2;</code>
       */
      public Builder clearMonth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        month_ = 0;
        onChanged();
        return this;
      }

      private int day_ ;
      /**
       * <code>required int32 day = 3;</code>
       */
      public boolean hasDay() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 day = 3;</code>
       */
      public int getDay() {
        return day_;
      }
      /**
       * <code>required int32 day = 3;</code>
       */
      public Builder setDay(int value) {
        bitField0_ |= 0x00000004;
        day_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 day = 3;</code>
       */
      public Builder clearDay() {
        bitField0_ = (bitField0_ & ~0x00000004);
        day_ = 0;
        onChanged();
        return this;
      }

      private int hour_ ;
      /**
       * <code>required int32 hour = 4;</code>
       */
      public boolean hasHour() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 hour = 4;</code>
       */
      public int getHour() {
        return hour_;
      }
      /**
       * <code>required int32 hour = 4;</code>
       */
      public Builder setHour(int value) {
        bitField0_ |= 0x00000008;
        hour_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 hour = 4;</code>
       */
      public Builder clearHour() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hour_ = 0;
        onChanged();
        return this;
      }

      private int minutes_ ;
      /**
       * <code>required int32 minutes = 5;</code>
       */
      public boolean hasMinutes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 minutes = 5;</code>
       */
      public int getMinutes() {
        return minutes_;
      }
      /**
       * <code>required int32 minutes = 5;</code>
       */
      public Builder setMinutes(int value) {
        bitField0_ |= 0x00000010;
        minutes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 minutes = 5;</code>
       */
      public Builder clearMinutes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minutes_ = 0;
        onChanged();
        return this;
      }

      private int seconds_ ;
      /**
       * <code>required int32 seconds = 6;</code>
       */
      public boolean hasSeconds() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 seconds = 6;</code>
       */
      public int getSeconds() {
        return seconds_;
      }
      /**
       * <code>required int32 seconds = 6;</code>
       */
      public Builder setSeconds(int value) {
        bitField0_ |= 0x00000020;
        seconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seconds = 6;</code>
       */
      public Builder clearSeconds() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seconds_ = 0;
        onChanged();
        return this;
      }

      private int weekDay_ ;
      /**
       * <code>optional int32 weekDay = 7;</code>
       */
      public boolean hasWeekDay() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 weekDay = 7;</code>
       */
      public int getWeekDay() {
        return weekDay_;
      }
      /**
       * <code>optional int32 weekDay = 7;</code>
       */
      public Builder setWeekDay(int value) {
        bitField0_ |= 0x00000040;
        weekDay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 weekDay = 7;</code>
       */
      public Builder clearWeekDay() {
        bitField0_ = (bitField0_ & ~0x00000040);
        weekDay_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Date)
    }

    static {
      defaultInstance = new Date(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Date)
  }

  public interface PhysiqueOrBuilder extends
          // @@protoc_insertion_point(interface_extends:Physique)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 height = 1;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 height = 1;</code>
     */
    int getHeight();

    /**
     * <code>required int32 weight = 2;</code>
     */
    boolean hasWeight();
    /**
     * <code>required int32 weight = 2;</code>
     */
    int getWeight();

    /**
     * <code>required int32 hearthRateHigh = 3;</code>
     */
    boolean hasHearthRateHigh();
    /**
     * <code>required int32 hearthRateHigh = 3;</code>
     */
    int getHearthRateHigh();

    /**
     * <code>required int32 hearthRateLow = 4;</code>
     */
    boolean hasHearthRateLow();
    /**
     * <code>required int32 hearthRateLow = 4;</code>
     */
    int getHearthRateLow();
  }
  /**
   * Protobuf type {@code Physique}
   */
  public static final class Physique extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:Physique)
          PhysiqueOrBuilder {
    // Use Physique.newBuilder() to construct.
    private Physique(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Physique(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Physique defaultInstance;
    public static Physique getDefaultInstance() {
      return defaultInstance;
    }

    public Physique getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Physique(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              height_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              weight_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              hearthRateHigh_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hearthRateLow_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return StnEggPkt.internal_static_Physique_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return StnEggPkt.internal_static_Physique_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      StnEggPkt.Physique.class, StnEggPkt.Physique.Builder.class);
    }

    public static com.google.protobuf.Parser<Physique> PARSER =
            new com.google.protobuf.AbstractParser<Physique>() {
              public Physique parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new Physique(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<Physique> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HEIGHT_FIELD_NUMBER = 1;
    private int height_;
    /**
     * <code>required int32 height = 1;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 height = 1;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int WEIGHT_FIELD_NUMBER = 2;
    private int weight_;
    /**
     * <code>required int32 weight = 2;</code>
     */
    public boolean hasWeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 weight = 2;</code>
     */
    public int getWeight() {
      return weight_;
    }

    public static final int HEARTHRATEHIGH_FIELD_NUMBER = 3;
    private int hearthRateHigh_;
    /**
     * <code>required int32 hearthRateHigh = 3;</code>
     */
    public boolean hasHearthRateHigh() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 hearthRateHigh = 3;</code>
     */
    public int getHearthRateHigh() {
      return hearthRateHigh_;
    }

    public static final int HEARTHRATELOW_FIELD_NUMBER = 4;
    private int hearthRateLow_;
    /**
     * <code>required int32 hearthRateLow = 4;</code>
     */
    public boolean hasHearthRateLow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 hearthRateLow = 4;</code>
     */
    public int getHearthRateLow() {
      return hearthRateLow_;
    }

    private void initFields() {
      height_ = 0;
      weight_ = 0;
      hearthRateHigh_ = 0;
      hearthRateLow_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHearthRateHigh()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHearthRateLow()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, height_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, weight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, hearthRateHigh_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, hearthRateLow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, height_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, weight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, hearthRateHigh_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, hearthRateLow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static StnEggPkt.Physique parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Physique parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Physique parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static StnEggPkt.Physique parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static StnEggPkt.Physique parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Physique parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Physique parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static StnEggPkt.Physique parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static StnEggPkt.Physique parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static StnEggPkt.Physique parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StnEggPkt.Physique prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Physique}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Physique)
            StnEggPkt.PhysiqueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return StnEggPkt.internal_static_Physique_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return StnEggPkt.internal_static_Physique_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        StnEggPkt.Physique.class, StnEggPkt.Physique.Builder.class);
      }

      // Construct using StnEggPkt.Physique.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        weight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        hearthRateHigh_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hearthRateLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return StnEggPkt.internal_static_Physique_descriptor;
      }

      public StnEggPkt.Physique getDefaultInstanceForType() {
        return StnEggPkt.Physique.getDefaultInstance();
      }

      public StnEggPkt.Physique build() {
        StnEggPkt.Physique result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public StnEggPkt.Physique buildPartial() {
        StnEggPkt.Physique result = new StnEggPkt.Physique(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.weight_ = weight_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hearthRateHigh_ = hearthRateHigh_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hearthRateLow_ = hearthRateLow_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StnEggPkt.Physique) {
          return mergeFrom((StnEggPkt.Physique)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(StnEggPkt.Physique other) {
        if (other == StnEggPkt.Physique.getDefaultInstance()) return this;
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        if (other.hasHearthRateHigh()) {
          setHearthRateHigh(other.getHearthRateHigh());
        }
        if (other.hasHearthRateLow()) {
          setHearthRateLow(other.getHearthRateLow());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHeight()) {

          return false;
        }
        if (!hasWeight()) {

          return false;
        }
        if (!hasHearthRateHigh()) {

          return false;
        }
        if (!hasHearthRateLow()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        StnEggPkt.Physique parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (StnEggPkt.Physique) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int height_ ;
      /**
       * <code>required int32 height = 1;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 height = 1;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 height = 1;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000001;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 height = 1;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        onChanged();
        return this;
      }

      private int weight_ ;
      /**
       * <code>required int32 weight = 2;</code>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 weight = 2;</code>
       */
      public int getWeight() {
        return weight_;
      }
      /**
       * <code>required int32 weight = 2;</code>
       */
      public Builder setWeight(int value) {
        bitField0_ |= 0x00000002;
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 weight = 2;</code>
       */
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        weight_ = 0;
        onChanged();
        return this;
      }

      private int hearthRateHigh_ ;
      /**
       * <code>required int32 hearthRateHigh = 3;</code>
       */
      public boolean hasHearthRateHigh() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 hearthRateHigh = 3;</code>
       */
      public int getHearthRateHigh() {
        return hearthRateHigh_;
      }
      /**
       * <code>required int32 hearthRateHigh = 3;</code>
       */
      public Builder setHearthRateHigh(int value) {
        bitField0_ |= 0x00000004;
        hearthRateHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 hearthRateHigh = 3;</code>
       */
      public Builder clearHearthRateHigh() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hearthRateHigh_ = 0;
        onChanged();
        return this;
      }

      private int hearthRateLow_ ;
      /**
       * <code>required int32 hearthRateLow = 4;</code>
       */
      public boolean hasHearthRateLow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 hearthRateLow = 4;</code>
       */
      public int getHearthRateLow() {
        return hearthRateLow_;
      }
      /**
       * <code>required int32 hearthRateLow = 4;</code>
       */
      public Builder setHearthRateLow(int value) {
        bitField0_ |= 0x00000008;
        hearthRateLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 hearthRateLow = 4;</code>
       */
      public Builder clearHearthRateLow() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hearthRateLow_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Physique)
    }

    static {
      defaultInstance = new Physique(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Physique)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_StnEggPacket_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_StnEggPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Float4_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_Float4_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Float3_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_Float3_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_RegiMapAccelGyro_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_RegiMapAccelGyro_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_RegiMapMag_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_RegiMapMag_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Gait_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_Gait_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Date_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_Date_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_Physique_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_Physique_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\017stnEggPkt.proto\"\314\r\n\014StnEggPacket\022\014\n\004si" +
                    "ze\030\001 \001(\005\022\r\n\005seqNo\030\002 \001(\005\022\021\n\ttimeStamp\030\003 \001" +
                    "(\005\022\037\n\016acceleroData_g\030\004 \001(\0132\007.Float3\022\035\n\014g" +
                    "yroData_dps\030\005 \001(\0132\007.Float3\022\033\n\nmagData_uT" +
                    "\030\006 \001(\0132\007.Float3\022!\n\020kalman9Axes_quat\030\007 \001(" +
                    "\0132\007.Float4\022!\n\020kalman6Axes_quat\030\010 \001(\0132\007.F" +
                    "loat4\022!\n\020virtualGyro_quat\030\t \001(\0132\007.Float4" +
                    "\022&\n\025virtualGyro_Speed_rps\030\n \001(\0132\007.Float3" +
                    "\022\036\n\rmouse3D_euler\030\013 \001(\0132\007.Float3\022\033\n\023magO" +
                    "ritentation_deg\030\014 \001(\002\022\016\n\006motion\030\r \001(\005\022\022\n",
            "\npeakNumber\030\016 \001(\005\022\022\n\npeakMotion\030\017 \001(\005\022\033\n" +
                    "\023interruptStatistics\030\020 \001(\005\022*\n\017accRegMap_" +
                    "array\030\021 \001(\0132\021.RegiMapAccelGyro\022*\n\017gyrReg" +
                    "Map_array\030\022 \001(\0132\021.RegiMapAccelGyro\022$\n\017ma" +
                    "gRegMap_array\030\023 \001(\0132\013.RegiMapMag\022\017\n\007accT" +
                    "emp\030\024 \001(\005\022\017\n\007gyrTemp\030\025 \001(\005\022\017\n\007magTemp\030\026 " +
                    "\001(\005\022\022\n\nuserUint01\030\027 \001(\r\022\022\n\nuserUint02\030\030 " +
                    "\001(\r\022\022\n\nuserUint03\030\031 \001(\r\022\022\n\nuserUint04\030\032 " +
                    "\001(\r\022\022\n\nuserUint05\030\033 \001(\r\022\022\n\nuserUint06\030\034 " +
                    "\001(\r\022\022\n\nuserUint07\030\035 \001(\r\022\022\n\nuserUint08\030\036 ",
            "\001(\r\022\022\n\nuserUint09\030\037 \001(\r\022\022\n\nuserUint10\030  " +
                    "\001(\r\022\021\n\tuserInt01\030! \001(\005\022\021\n\tuserInt02\030\" \001(" +
                    "\005\022\021\n\tuserInt03\030# \001(\005\022\021\n\tuserInt04\030$ \001(\005\022" +
                    "\021\n\tuserInt05\030% \001(\005\022\021\n\tuserInt06\030& \001(\005\022\021\n" +
                    "\tuserInt07\030\' \001(\005\022\021\n\tuserInt08\030( \001(\005\022\021\n\tu" +
                    "serInt09\030) \001(\005\022\021\n\tuserInt10\030* \001(\005\022\023\n\013use" +
                    "rFloat01\030+ \001(\002\022\023\n\013userFloat02\030, \001(\002\022\023\n\013u" +
                    "serFloat03\030- \001(\002\022\023\n\013userFloat04\030. \001(\002\022\023\n" +
                    "\013userFloat05\030/ \001(\002\022\023\n\013userFloat06\0300 \001(\002\022" +
                    "\023\n\013userFloat07\0301 \001(\002\022\023\n\013userFloat08\0302 \001(",
            "\002\022\023\n\013userFloat09\0303 \001(\002\022\023\n\013userFloat10\0304 " +
                    "\001(\002\022\017\n\007gesture\0305 \001(\005\022\022\n\nmouseClick\0306 \001(\005" +
                    "\022\031\n\010gait_pos\0307 \001(\0132\007.Float3\022\021\n\tgait_zupt" +
                    "\0308 \001(\010\022\027\n\017inputCommandWho\0309 \001(\005\022\030\n\020input" +
                    "CommandWhat\030: \001(\005\022\031\n\021inputCommandValue\030;" +
                    " \001(\005\022\035\n\025sespFunctionalityType\030< \001(\005\022\025\n\rs" +
                    "espFrequency\030= \001(\005\022\020\n\010sespUnit\030> \001(\005\022\034\n\024" +
                    "sespSentOutsideBoard\030? \001(\005\022\023\n\013serpComman" +
                    "d\030@ \001(\r\022\023\n\004gait\030A \001(\0132\005.Gait\022\023\n\004date\030B \001" +
                    "(\0132\005.Date\022\033\n\010physique\030C \001(\0132\t.Physique\022\027",
            "\n\017durationMinutes\030D \001(\005\022\020\n\010calories\030E \001(" +
                    "\005\022\026\n\016distanceMeters\030F \001(\005\022\020\n\010ledColor\030G " +
                    "\001(\005\022\r\n\005count\030H \001(\005\022\027\n\017durationSeconds\030I " +
                    "\001(\r\022\022\n\nhearthRate\030J \001(\r\022\017\n\007battery\030K \001(\r" +
                    "\"8\n\006Float4\022\n\n\002f1\030\001 \002(\002\022\n\n\002f2\030\002 \002(\002\022\n\n\002f3" +
                    "\030\003 \002(\002\022\n\n\002f4\030\004 \002(\002\",\n\006Float3\022\n\n\002f1\030\001 \002(\002" +
                    "\022\n\n\002f2\030\002 \002(\002\022\n\n\002f3\030\003 \002(\002\"\222\t\n\020RegiMapAcce" +
                    "lGyro\022\020\n\010adr_0x00\030\001 \002(\005\022\020\n\010adr_0x01\030\002 \002(" +
                    "\005\022\020\n\010adr_0x02\030\003 \002(\005\022\020\n\010adr_0x03\030\004 \002(\005\022\020\n" +
                    "\010adr_0x04\030\005 \002(\005\022\020\n\010adr_0x05\030\006 \002(\005\022\020\n\010adr",
            "_0x06\030\007 \002(\005\022\020\n\010adr_0x07\030\010 \002(\005\022\020\n\010adr_0x0" +
                    "8\030\t \002(\005\022\020\n\010adr_0x09\030\n \002(\005\022\020\n\010adr_0x0A\030\013 " +
                    "\002(\005\022\020\n\010adr_0x0B\030\014 \002(\005\022\020\n\010adr_0x0C\030\r \002(\005\022" +
                    "\020\n\010adr_0x0D\030\016 \002(\005\022\020\n\010adr_0x0E\030\017 \002(\005\022\020\n\010a" +
                    "dr_0x0F\030\020 \002(\005\022\020\n\010adr_0x10\030\021 \002(\005\022\020\n\010adr_0" +
                    "x11\030\022 \002(\005\022\020\n\010adr_0x12\030\023 \002(\005\022\020\n\010adr_0x13\030" +
                    "\024 \002(\005\022\020\n\010adr_0x14\030\025 \002(\005\022\020\n\010adr_0x15\030\026 \002(" +
                    "\005\022\020\n\010adr_0x16\030\027 \002(\005\022\020\n\010adr_0x17\030\030 \002(\005\022\020\n" +
                    "\010adr_0x18\030\031 \002(\005\022\020\n\010adr_0x19\030\032 \002(\005\022\020\n\010adr" +
                    "_0x1A\030\033 \002(\005\022\020\n\010adr_0x1B\030\034 \002(\005\022\020\n\010adr_0x1",
            "C\030\035 \002(\005\022\020\n\010adr_0x1D\030\036 \002(\005\022\020\n\010adr_0x1E\030\037 " +
                    "\002(\005\022\020\n\010adr_0x1F\030  \002(\005\022\020\n\010adr_0x20\030! \002(\005\022" +
                    "\020\n\010adr_0x21\030\" \002(\005\022\020\n\010adr_0x22\030# \002(\005\022\020\n\010a" +
                    "dr_0x23\030$ \002(\005\022\020\n\010adr_0x24\030% \002(\005\022\020\n\010adr_0" +
                    "x25\030& \002(\005\022\020\n\010adr_0x26\030\' \002(\005\022\020\n\010adr_0x27\030" +
                    "( \002(\005\022\020\n\010adr_0x28\030) \002(\005\022\020\n\010adr_0x29\030* \002(" +
                    "\005\022\020\n\010adr_0x2A\030+ \002(\005\022\020\n\010adr_0x2B\030, \002(\005\022\020\n" +
                    "\010adr_0x2C\030- \002(\005\022\020\n\010adr_0x2D\030. \002(\005\022\020\n\010adr" +
                    "_0x2E\030/ \002(\005\022\020\n\010adr_0x2F\0300 \002(\005\022\020\n\010adr_0x3" +
                    "0\0301 \002(\005\022\020\n\010adr_0x31\0302 \002(\005\022\020\n\010adr_0x32\0303 ",
            "\002(\005\022\020\n\010adr_0x33\0304 \002(\005\022\020\n\010adr_0x34\0305 \002(\005\022" +
                    "\020\n\010adr_0x35\0306 \002(\005\022\020\n\010adr_0x36\0307 \002(\005\022\020\n\010a" +
                    "dr_0x37\0308 \002(\005\022\020\n\010adr_0x38\0309 \002(\005\022\020\n\010adr_0" +
                    "x39\030: \002(\005\022\020\n\010adr_0x3A\030; \002(\005\022\020\n\010adr_0x3B\030" +
                    "< \002(\005\022\020\n\010adr_0x3C\030= \002(\005\022\020\n\010adr_0x3D\030> \002(" +
                    "\005\022\020\n\010adr_0x3E\030? \002(\005\022\020\n\010adr_0x3F\030@ \002(\005\"\334\005" +
                    "\n\nRegiMapMag\022\020\n\010adr_0x00\030\001 \002(\005\022\020\n\010adr_0x" +
                    "01\030\002 \002(\005\022\020\n\010adr_0x02\030\003 \002(\005\022\020\n\010adr_0x03\030\004" +
                    " \002(\005\022\020\n\010adr_0x04\030\005 \002(\005\022\020\n\010adr_0x05\030\006 \002(\005" +
                    "\022\020\n\010adr_0x06\030\007 \002(\005\022\020\n\010adr_0x07\030\010 \002(\005\022\020\n\010",
            "adr_0x08\030\t \002(\005\022\020\n\010adr_0x10\030\n \002(\005\022\020\n\010adr_" +
                    "0x11\030\013 \002(\005\022\020\n\010adr_0x12\030\014 \002(\005\022\020\n\010adr_0x20" +
                    "\030\r \002(\005\022\020\n\010adr_0x21\030\016 \002(\005\022\020\n\010adr_0x22\030\017 \002" +
                    "(\005\022\020\n\010adr_0x23\030\020 \002(\005\022\020\n\010adr_0x24\030\021 \002(\005\022\020" +
                    "\n\010adr_0x25\030\022 \002(\005\022\020\n\010adr_0x26\030\023 \002(\005\022\020\n\010ad" +
                    "r_0x27\030\024 \002(\005\022\020\n\010adr_0x28\030\025 \002(\005\022\020\n\010adr_0x" +
                    "29\030\026 \002(\005\022\020\n\010adr_0x2A\030\027 \002(\005\022\020\n\010adr_0x2B\030\030" +
                    " \002(\005\022\020\n\010adr_0x2C\030\031 \002(\005\022\020\n\010adr_0x2D\030\032 \002(\005" +
                    "\022\020\n\010adr_0x2E\030\033 \002(\005\022\020\n\010adr_0x30\030\034 \002(\005\022\020\n\010" +
                    "adr_0x31\030\035 \002(\005\022\020\n\010adr_0x32\030\036 \002(\005\022\020\n\010adr_",
            "0x33\030\037 \002(\005\022\020\n\010adr_0x34\030  \002(\005\022\020\n\010adr_0x35" +
                    "\030! \002(\005\022\020\n\010adr_0x36\030\" \002(\005\022\020\n\010adr_0x50\030# \002" +
                    "(\005\022\020\n\010adr_0x51\030$ \002(\005\022\020\n\010adr_0x52\030% \002(\005\022\020" +
                    "\n\010adr_0x53\030& \002(\005\022\020\n\010adr_0x54\030\' \002(\005\022\020\n\010ad" +
                    "r_0x55\030( \002(\005\"\362\001\n\004Gait\022\021\n\tpositionX\030\001 \001(\002" +
                    "\022\021\n\tpositionY\030\002 \001(\002\022\021\n\tpositionZ\030\003 \001(\002\022\014" +
                    "\n\004zupt\030\004 \001(\r\022\027\n\017zuptStepCounter\030\005 \001(\r\022\022\n" +
                    "\nzuptMotion\030\006 \001(\r\022\025\n\rtotalDistance\030\007 \001(\002" +
                    "\022\027\n\017errorPercentage\030\010 \001(\002\022\026\n\016errorPositi" +
                    "onX\030\t \001(\002\022\026\n\016errorPositionY\030\n \001(\002\022\026\n\016err",
            "orPositionZ\030\013 \001(\002\"q\n\004Date\022\014\n\004year\030\001 \002(\005\022" +
                    "\r\n\005month\030\002 \002(\005\022\013\n\003day\030\003 \002(\005\022\014\n\004hour\030\004 \002(" +
                    "\005\022\017\n\007minutes\030\005 \002(\005\022\017\n\007seconds\030\006 \002(\005\022\017\n\007w" +
                    "eekDay\030\007 \001(\005\"Y\n\010Physique\022\016\n\006height\030\001 \002(\005" +
                    "\022\016\n\006weight\030\002 \002(\005\022\026\n\016hearthRateHigh\030\003 \002(\005" +
                    "\022\025\n\rhearthRateLow\030\004 \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
    internal_static_StnEggPacket_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_StnEggPacket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_StnEggPacket_descriptor,
            new java.lang.String[] { "Size", "SeqNo", "TimeStamp", "AcceleroDataG", "GyroDataDps", "MagDataUT", "Kalman9AxesQuat", "Kalman6AxesQuat", "VirtualGyroQuat", "VirtualGyroSpeedRps", "Mouse3DEuler", "MagOritentationDeg", "Motion", "PeakNumber", "PeakMotion", "InterruptStatistics", "AccRegMapArray", "GyrRegMapArray", "MagRegMapArray", "AccTemp", "GyrTemp", "MagTemp", "UserUint01", "UserUint02", "UserUint03", "UserUint04", "UserUint05", "UserUint06", "UserUint07", "UserUint08", "UserUint09", "UserUint10", "UserInt01", "UserInt02", "UserInt03", "UserInt04", "UserInt05", "UserInt06", "UserInt07", "UserInt08", "UserInt09", "UserInt10", "UserFloat01", "UserFloat02", "UserFloat03", "UserFloat04", "UserFloat05", "UserFloat06", "UserFloat07", "UserFloat08", "UserFloat09", "UserFloat10", "Gesture", "MouseClick", "GaitPos", "GaitZupt", "InputCommandWho", "InputCommandWhat", "InputCommandValue", "SespFunctionalityType", "SespFrequency", "SespUnit", "SespSentOutsideBoard", "SerpCommand", "Gait", "Date", "Physique", "DurationMinutes", "Calories", "DistanceMeters", "LedColor", "Count", "DurationSeconds", "HearthRate", "Battery", });
    internal_static_Float4_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_Float4_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_Float4_descriptor,
            new java.lang.String[] { "F1", "F2", "F3", "F4", });
    internal_static_Float3_descriptor =
            getDescriptor().getMessageTypes().get(2);
    internal_static_Float3_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_Float3_descriptor,
            new java.lang.String[] { "F1", "F2", "F3", });
    internal_static_RegiMapAccelGyro_descriptor =
            getDescriptor().getMessageTypes().get(3);
    internal_static_RegiMapAccelGyro_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_RegiMapAccelGyro_descriptor,
            new java.lang.String[] { "Adr0X00", "Adr0X01", "Adr0X02", "Adr0X03", "Adr0X04", "Adr0X05", "Adr0X06", "Adr0X07", "Adr0X08", "Adr0X09", "Adr0X0A", "Adr0X0B", "Adr0X0C", "Adr0X0D", "Adr0X0E", "Adr0X0F", "Adr0X10", "Adr0X11", "Adr0X12", "Adr0X13", "Adr0X14", "Adr0X15", "Adr0X16", "Adr0X17", "Adr0X18", "Adr0X19", "Adr0X1A", "Adr0X1B", "Adr0X1C", "Adr0X1D", "Adr0X1E", "Adr0X1F", "Adr0X20", "Adr0X21", "Adr0X22", "Adr0X23", "Adr0X24", "Adr0X25", "Adr0X26", "Adr0X27", "Adr0X28", "Adr0X29", "Adr0X2A", "Adr0X2B", "Adr0X2C", "Adr0X2D", "Adr0X2E", "Adr0X2F", "Adr0X30", "Adr0X31", "Adr0X32", "Adr0X33", "Adr0X34", "Adr0X35", "Adr0X36", "Adr0X37", "Adr0X38", "Adr0X39", "Adr0X3A", "Adr0X3B", "Adr0X3C", "Adr0X3D", "Adr0X3E", "Adr0X3F", });
    internal_static_RegiMapMag_descriptor =
            getDescriptor().getMessageTypes().get(4);
    internal_static_RegiMapMag_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_RegiMapMag_descriptor,
            new java.lang.String[] { "Adr0X00", "Adr0X01", "Adr0X02", "Adr0X03", "Adr0X04", "Adr0X05", "Adr0X06", "Adr0X07", "Adr0X08", "Adr0X10", "Adr0X11", "Adr0X12", "Adr0X20", "Adr0X21", "Adr0X22", "Adr0X23", "Adr0X24", "Adr0X25", "Adr0X26", "Adr0X27", "Adr0X28", "Adr0X29", "Adr0X2A", "Adr0X2B", "Adr0X2C", "Adr0X2D", "Adr0X2E", "Adr0X30", "Adr0X31", "Adr0X32", "Adr0X33", "Adr0X34", "Adr0X35", "Adr0X36", "Adr0X50", "Adr0X51", "Adr0X52", "Adr0X53", "Adr0X54", "Adr0X55", });
    internal_static_Gait_descriptor =
            getDescriptor().getMessageTypes().get(5);
    internal_static_Gait_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_Gait_descriptor,
            new java.lang.String[] { "PositionX", "PositionY", "PositionZ", "Zupt", "ZuptStepCounter", "ZuptMotion", "TotalDistance", "ErrorPercentage", "ErrorPositionX", "ErrorPositionY", "ErrorPositionZ", });
    internal_static_Date_descriptor =
            getDescriptor().getMessageTypes().get(6);
    internal_static_Date_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_Date_descriptor,
            new java.lang.String[] { "Year", "Month", "Day", "Hour", "Minutes", "Seconds", "WeekDay", });
    internal_static_Physique_descriptor =
            getDescriptor().getMessageTypes().get(7);
    internal_static_Physique_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_Physique_descriptor,
            new java.lang.String[] { "Height", "Weight", "HearthRateHigh", "HearthRateLow", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
